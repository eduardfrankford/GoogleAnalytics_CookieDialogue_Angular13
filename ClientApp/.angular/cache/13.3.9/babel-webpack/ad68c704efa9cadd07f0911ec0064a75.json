{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Injectable, Directive, EventEmitter, Input, Output, ContentChildren, Component, ViewEncapsulation, Optional, Host, NgModule, ChangeDetectionStrategy, forwardRef, PLATFORM_ID, Inject, LOCALE_ID, ElementRef, ViewChild, ContentChild, TemplateRef, Injector, Attribute, ViewChildren, HostBinding, InjectionToken } from '@angular/core';\nimport * as i2 from '@angular/common';\nimport { CommonModule, isPlatformBrowser, getLocaleMonthNames, FormStyle, TranslationWidth, getLocaleDayNames, formatDate, DOCUMENT, getLocaleDayPeriods } from '@angular/common';\nimport { Observable, EMPTY, of, Subject, fromEvent, timer, race, BehaviorSubject, combineLatest, NEVER, zip, merge } from 'rxjs';\nimport { endWith, takeUntil, filter, take, map, startWith, distinctUntilChanged, switchMap, tap, withLatestFrom, delay, mergeMap, skip, share, finalize } from 'rxjs/operators';\nimport * as i3 from '@angular/forms';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS, FormsModule } from '@angular/forms';\nimport { flip, preventOverflow, arrow, createPopperLite, offset } from '@popperjs/core';\n\nfunction NgbAccordion_ng_template_0_ng_template_2_Template(rf, ctx) {}\n\nfunction NgbAccordion_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"button\", 3);\n    i0.ɵɵtext(1);\n    i0.ɵɵtemplate(2, NgbAccordion_ng_template_0_ng_template_2_Template, 0, 0, \"ng-template\", 4);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const panel_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngbPanelToggle\", panel_r3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", panel_r3.title, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", panel_r3.titleTpl == null ? null : panel_r3.titleTpl.templateRef);\n  }\n}\n\nfunction NgbAccordion_ng_template_2_ng_template_2_Template(rf, ctx) {}\n\nfunction NgbAccordion_ng_template_2_div_3_ng_template_2_Template(rf, ctx) {}\n\nfunction NgbAccordion_ng_template_2_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵlistener(\"ngbRef\", function NgbAccordion_ng_template_2_div_3_Template_div_ngbRef_0_listener($event) {\n      i0.ɵɵrestoreView(_r11);\n      const panel_r5 = i0.ɵɵnextContext().$implicit;\n      return panel_r5.panelDiv = $event;\n    });\n    i0.ɵɵelementStart(1, \"div\", 9);\n    i0.ɵɵtemplate(2, NgbAccordion_ng_template_2_div_3_ng_template_2_Template, 0, 0, \"ng-template\", 4);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const panel_r5 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵpropertyInterpolate(\"id\", panel_r5.id);\n    i0.ɵɵattribute(\"aria-labelledby\", panel_r5.id + \"-header\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", (panel_r5.contentTpl == null ? null : panel_r5.contentTpl.templateRef) || null);\n  }\n}\n\nconst _c0 = function (a0, a1) {\n  return {\n    $implicit: a0,\n    opened: a1\n  };\n};\n\nfunction NgbAccordion_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 5);\n    i0.ɵɵtemplate(2, NgbAccordion_ng_template_2_ng_template_2_Template, 0, 0, \"ng-template\", 6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, NgbAccordion_ng_template_2_div_3_Template, 3, 3, \"div\", 7);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const panel_r5 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n\n    const _r0 = i0.ɵɵreference(1);\n\n    i0.ɵɵclassMap(\"accordion-item \" + (panel_r5.cardClass || \"\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassMap(\"accordion-header \" + (panel_r5.type ? \"bg-\" + panel_r5.type : ctx_r2.type ? \"bg-\" + ctx_r2.type : \"\"));\n    i0.ɵɵpropertyInterpolate1(\"id\", \"\", panel_r5.id, \"-header\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", (panel_r5.headerTpl == null ? null : panel_r5.headerTpl.templateRef) || _r0)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction2(8, _c0, panel_r5, panel_r5.isOpen));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r2.destroyOnHide || panel_r5.isOpen || panel_r5.transitionRunning);\n  }\n}\n\nfunction NgbAlert_button_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 1);\n    i0.ɵɵlistener(\"click\", function NgbAlert_button_1_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return ctx_r1.close();\n    });\n    i0.ɵɵelementEnd();\n  }\n}\n\nconst _c3 = [\"*\"];\n\nfunction NgbCarousel_button_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 6);\n    i0.ɵɵlistener(\"click\", function NgbCarousel_button_1_Template_button_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r6);\n      const slide_r4 = restoredCtx.$implicit;\n      const ctx_r5 = i0.ɵɵnextContext();\n      ctx_r5.focus();\n      return ctx_r5.select(slide_r4.id, ctx_r5.NgbSlideEventSource.INDICATOR);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const slide_r4 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"active\", slide_r4.id === ctx_r0.activeId);\n    i0.ɵɵattribute(\"aria-labelledby\", \"slide-\" + slide_r4.id)(\"aria-controls\", \"slide-\" + slide_r4.id)(\"aria-selected\", slide_r4.id === ctx_r0.activeId);\n  }\n}\n\nfunction NgbCarousel_div_3_ng_template_3_Template(rf, ctx) {}\n\nfunction NgbCarousel_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 7)(1, \"span\", 8);\n    i0.ɵɵi18n(2, 9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, NgbCarousel_div_3_ng_template_3_Template, 0, 0, \"ng-template\", 10);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const slide_r7 = ctx.$implicit;\n    const i_r8 = ctx.index;\n    const c_r9 = ctx.count;\n    i0.ɵɵproperty(\"id\", \"slide-\" + slide_r7.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵi18nExp(i_r8 + 1)(c_r9);\n    i0.ɵɵi18nApply(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", slide_r7.tplRef);\n  }\n}\n\nfunction NgbCarousel_button_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 11);\n    i0.ɵɵlistener(\"click\", function NgbCarousel_button_4_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return ctx_r11.arrowLeft();\n    });\n    i0.ɵɵelement(1, \"span\", 12);\n    i0.ɵɵelementStart(2, \"span\", 8);\n    i0.ɵɵi18n(3, 13);\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction NgbCarousel_button_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 14);\n    i0.ɵɵlistener(\"click\", function NgbCarousel_button_5_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r13 = i0.ɵɵnextContext();\n      return ctx_r13.arrowRight();\n    });\n    i0.ɵɵelement(1, \"span\", 15);\n    i0.ɵɵelementStart(2, \"span\", 8);\n    i0.ɵɵi18n(3, 16);\n    i0.ɵɵelementEnd()();\n  }\n}\n\nconst _c10 = [\"ngbDatepickerDayView\", \"\"];\nconst _c11 = [\"month\"];\nconst _c12 = [\"year\"];\n\nfunction NgbDatepickerNavigationSelect_option_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 5);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const m_r4 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"value\", m_r4);\n    i0.ɵɵattribute(\"aria-label\", ctx_r1.i18n.getMonthFullName(m_r4, ctx_r1.date == null ? null : ctx_r1.date.year));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r1.i18n.getMonthShortName(m_r4, ctx_r1.date == null ? null : ctx_r1.date.year));\n  }\n}\n\nfunction NgbDatepickerNavigationSelect_option_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 5);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const y_r5 = ctx.$implicit;\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"value\", y_r5);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r3.i18n.getYearNumerals(y_r5));\n  }\n}\n\nfunction NgbDatepickerNavigation_ngb_datepicker_navigation_select_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"ngb-datepicker-navigation-select\", 7);\n    i0.ɵɵlistener(\"select\", function NgbDatepickerNavigation_ngb_datepicker_navigation_select_3_Template_ngb_datepicker_navigation_select_select_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return ctx_r2.select.emit($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"date\", ctx_r0.date)(\"disabled\", ctx_r0.disabled)(\"months\", ctx_r0.selectBoxes.months)(\"years\", ctx_r0.selectBoxes.years);\n  }\n}\n\nfunction NgbDatepickerNavigation_4_ng_template_0_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 0);\n  }\n}\n\nfunction NgbDatepickerNavigation_4_ng_template_0_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 0);\n  }\n}\n\nfunction NgbDatepickerNavigation_4_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, NgbDatepickerNavigation_4_ng_template_0_div_0_Template, 1, 0, \"div\", 9);\n    i0.ɵɵelementStart(1, \"div\", 10);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, NgbDatepickerNavigation_4_ng_template_0_div_3_Template, 1, 0, \"div\", 9);\n  }\n\n  if (rf & 2) {\n    const month_r5 = ctx.$implicit;\n    const i_r6 = ctx.index;\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngIf\", i_r6 > 0);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r4.i18n.getMonthLabel(month_r5.firstDate), \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", i_r6 !== ctx_r4.months.length - 1);\n  }\n}\n\nfunction NgbDatepickerNavigation_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, NgbDatepickerNavigation_4_ng_template_0_Template, 4, 3, \"ng-template\", 8);\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.months);\n  }\n}\n\nconst _c29 = [\"defaultDayTemplate\"];\nconst _c30 = [\"content\"];\n\nfunction NgbDatepicker_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 7);\n  }\n\n  if (rf & 2) {\n    const date_r8 = ctx.date;\n    const currentMonth_r9 = ctx.currentMonth;\n    const selected_r10 = ctx.selected;\n    const disabled_r11 = ctx.disabled;\n    const focused_r12 = ctx.focused;\n    i0.ɵɵproperty(\"date\", date_r8)(\"currentMonth\", currentMonth_r9)(\"selected\", selected_r10)(\"disabled\", disabled_r11)(\"focused\", focused_r12);\n  }\n}\n\nfunction NgbDatepicker_ng_template_2_div_0_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const month_r14 = i0.ɵɵnextContext().$implicit;\n    const ctx_r16 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r16.i18n.getMonthLabel(month_r14.firstDate), \" \");\n  }\n}\n\nfunction NgbDatepicker_ng_template_2_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵtemplate(1, NgbDatepicker_ng_template_2_div_0_div_1_Template, 2, 1, \"div\", 10);\n    i0.ɵɵelement(2, \"ngb-datepicker-month\", 11);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const month_r14 = ctx.$implicit;\n    const ctx_r13 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r13.navigation === \"none\" || ctx_r13.displayMonths > 1 && ctx_r13.navigation === \"select\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"month\", month_r14.firstDate);\n  }\n}\n\nfunction NgbDatepicker_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, NgbDatepicker_ng_template_2_div_0_Template, 3, 2, \"div\", 8);\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.model.months);\n  }\n}\n\nfunction NgbDatepicker_ngb_datepicker_navigation_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r19 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"ngb-datepicker-navigation\", 13);\n    i0.ɵɵlistener(\"navigate\", function NgbDatepicker_ngb_datepicker_navigation_5_Template_ngb_datepicker_navigation_navigate_0_listener($event) {\n      i0.ɵɵrestoreView(_r19);\n      const ctx_r18 = i0.ɵɵnextContext();\n      return ctx_r18.onNavigateEvent($event);\n    })(\"select\", function NgbDatepicker_ngb_datepicker_navigation_5_Template_ngb_datepicker_navigation_select_0_listener($event) {\n      i0.ɵɵrestoreView(_r19);\n      const ctx_r20 = i0.ɵɵnextContext();\n      return ctx_r20.onNavigateDateSelect($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"date\", ctx_r4.model.firstDate)(\"months\", ctx_r4.model.months)(\"disabled\", ctx_r4.model.disabled)(\"showSelect\", ctx_r4.model.navigation === \"select\")(\"prevDisabled\", ctx_r4.model.prevDisabled)(\"nextDisabled\", ctx_r4.model.nextDisabled)(\"selectBoxes\", ctx_r4.model.selectBoxes);\n  }\n}\n\nfunction NgbDatepicker_ng_template_8_Template(rf, ctx) {}\n\nfunction NgbDatepicker_ng_template_9_Template(rf, ctx) {}\n\nfunction NgbDatepickerMonth_div_0_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 5);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r2.i18n.getWeekLabel());\n  }\n}\n\nfunction NgbDatepickerMonth_div_0_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const weekday_r4 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(weekday_r4);\n  }\n}\n\nfunction NgbDatepickerMonth_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 2);\n    i0.ɵɵtemplate(1, NgbDatepickerMonth_div_0_div_1_Template, 2, 1, \"div\", 3);\n    i0.ɵɵtemplate(2, NgbDatepickerMonth_div_0_div_2_Template, 2, 1, \"div\", 4);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.datepicker.showWeekNumbers);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.viewModel.weekdays);\n  }\n}\n\nfunction NgbDatepickerMonth_ng_template_1_div_0_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const week_r5 = i0.ɵɵnextContext(2).$implicit;\n    const ctx_r7 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r7.i18n.getWeekNumerals(week_r5.number));\n  }\n}\n\nfunction NgbDatepickerMonth_ng_template_1_div_0_div_2_ng_template_1_ng_template_0_Template(rf, ctx) {}\n\nfunction NgbDatepickerMonth_ng_template_1_div_0_div_2_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, NgbDatepickerMonth_ng_template_1_div_0_div_2_ng_template_1_ng_template_0_Template, 0, 0, \"ng-template\", 14);\n  }\n\n  if (rf & 2) {\n    const day_r10 = i0.ɵɵnextContext().$implicit;\n    const ctx_r11 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r11.datepicker.dayTemplate)(\"ngTemplateOutletContext\", day_r10.context);\n  }\n}\n\nfunction NgbDatepickerMonth_ng_template_1_div_0_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵlistener(\"click\", function NgbDatepickerMonth_ng_template_1_div_0_div_2_Template_div_click_0_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r15);\n      const day_r10 = restoredCtx.$implicit;\n      const ctx_r14 = i0.ɵɵnextContext(3);\n      ctx_r14.doSelect(day_r10);\n      return $event.preventDefault();\n    });\n    i0.ɵɵtemplate(1, NgbDatepickerMonth_ng_template_1_div_0_div_2_ng_template_1_Template, 1, 2, \"ng-template\", 13);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const day_r10 = ctx.$implicit;\n    i0.ɵɵclassProp(\"disabled\", day_r10.context.disabled)(\"hidden\", day_r10.hidden)(\"ngb-dp-today\", day_r10.context.today);\n    i0.ɵɵproperty(\"tabindex\", day_r10.tabindex);\n    i0.ɵɵattribute(\"aria-label\", day_r10.ariaLabel);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !day_r10.hidden);\n  }\n}\n\nfunction NgbDatepickerMonth_ng_template_1_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵtemplate(1, NgbDatepickerMonth_ng_template_1_div_0_div_1_Template, 2, 1, \"div\", 9);\n    i0.ɵɵtemplate(2, NgbDatepickerMonth_ng_template_1_div_0_div_2_Template, 2, 9, \"div\", 10);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const week_r5 = i0.ɵɵnextContext().$implicit;\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r6.datepicker.showWeekNumbers);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", week_r5.days);\n  }\n}\n\nfunction NgbDatepickerMonth_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, NgbDatepickerMonth_ng_template_1_div_0_Template, 3, 2, \"div\", 7);\n  }\n\n  if (rf & 2) {\n    const week_r5 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngIf\", !week_r5.collapsed);\n  }\n}\n\nconst _c31 = [\"dialog\"];\nconst _c32 = [\"ngbNavOutlet\", \"\"];\n\nfunction NgbNavOutlet_ng_template_0_div_0_ng_template_1_Template(rf, ctx) {}\n\nconst _c33 = function (a0) {\n  return {\n    $implicit: a0\n  };\n};\n\nfunction NgbNavOutlet_ng_template_0_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 2);\n    i0.ɵɵtemplate(1, NgbNavOutlet_ng_template_0_div_0_ng_template_1_Template, 0, 0, \"ng-template\", 3);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r1 = i0.ɵɵnextContext().$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"item\", item_r1)(\"nav\", ctx_r2.nav)(\"role\", ctx_r2.paneRole);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", (item_r1.contentTpl == null ? null : item_r1.contentTpl.templateRef) || null)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(5, _c33, item_r1.active || ctx_r2.isPanelTransitioning(item_r1)));\n  }\n}\n\nfunction NgbNavOutlet_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, NgbNavOutlet_ng_template_0_div_0_Template, 2, 7, \"div\", 1);\n  }\n\n  if (rf & 2) {\n    const item_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngIf\", item_r1.isPanelInDom() || ctx_r0.isPanelTransitioning(item_r1));\n  }\n}\n\nfunction NgbPagination_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 9);\n    i0.ɵɵi18n(1, 10);\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction NgbPagination_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 9);\n    i0.ɵɵi18n(1, 11);\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction NgbPagination_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 9);\n    i0.ɵɵi18n(1, 12);\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction NgbPagination_ng_template_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 9);\n    i0.ɵɵi18n(1, 13);\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction NgbPagination_ng_template_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"...\");\n  }\n}\n\nfunction NgbPagination_ng_template_10_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 15);\n    i0.ɵɵtext(1, \"(current)\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction NgbPagination_ng_template_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n    i0.ɵɵtemplate(1, NgbPagination_ng_template_10_span_1_Template, 2, 0, \"span\", 14);\n  }\n\n  if (rf & 2) {\n    const page_r19 = ctx.$implicit;\n    const currentPage_r20 = ctx.currentPage;\n    i0.ɵɵtextInterpolate1(\" \", page_r19, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", page_r19 === currentPage_r20);\n  }\n}\n\nfunction NgbPagination_ng_template_12_li_0_a_1_ng_template_1_Template(rf, ctx) {}\n\nconst _c42 = function (a1) {\n  return {\n    disabled: true,\n    currentPage: a1\n  };\n};\n\nfunction NgbPagination_ng_template_12_li_0_a_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"a\", 20);\n    i0.ɵɵtemplate(1, NgbPagination_ng_template_12_li_0_a_1_ng_template_1_Template, 0, 0, \"ng-template\", 8);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const page_r22 = i0.ɵɵnextContext(2).$implicit;\n    const ctx_r27 = i0.ɵɵnextContext();\n\n    const _r8 = i0.ɵɵreference(9);\n\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", (ctx_r27.tplEllipsis == null ? null : ctx_r27.tplEllipsis.templateRef) || _r8)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(2, _c42, page_r22));\n  }\n}\n\nfunction NgbPagination_ng_template_12_li_0_a_2_ng_template_1_Template(rf, ctx) {}\n\nconst _c43 = function (a0, a1, a2) {\n  return {\n    disabled: a0,\n    $implicit: a1,\n    currentPage: a2\n  };\n};\n\nfunction NgbPagination_ng_template_12_li_0_a_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r34 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"a\", 21);\n    i0.ɵɵlistener(\"click\", function NgbPagination_ng_template_12_li_0_a_2_Template_a_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r34);\n      const pageNumber_r26 = i0.ɵɵnextContext().$implicit;\n      const ctx_r32 = i0.ɵɵnextContext(2);\n      ctx_r32.selectPage(pageNumber_r26);\n      return $event.preventDefault();\n    });\n    i0.ɵɵtemplate(1, NgbPagination_ng_template_12_li_0_a_2_ng_template_1_Template, 0, 0, \"ng-template\", 8);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const pageNumber_r26 = i0.ɵɵnextContext().$implicit;\n    const ctx_r35 = i0.ɵɵnextContext();\n    const disabled_r24 = ctx_r35.disabled;\n    const page_r22 = ctx_r35.$implicit;\n    const ctx_r28 = i0.ɵɵnextContext();\n\n    const _r10 = i0.ɵɵreference(11);\n\n    i0.ɵɵattribute(\"tabindex\", disabled_r24 ? \"-1\" : null)(\"aria-disabled\", disabled_r24 ? \"true\" : null);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", (ctx_r28.tplNumber == null ? null : ctx_r28.tplNumber.templateRef) || _r10)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction3(4, _c43, disabled_r24, pageNumber_r26, page_r22));\n  }\n}\n\nfunction NgbPagination_ng_template_12_li_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 17);\n    i0.ɵɵtemplate(1, NgbPagination_ng_template_12_li_0_a_1_Template, 2, 4, \"a\", 18);\n    i0.ɵɵtemplate(2, NgbPagination_ng_template_12_li_0_a_2_Template, 2, 8, \"a\", 19);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const pageNumber_r26 = ctx.$implicit;\n    const ctx_r37 = i0.ɵɵnextContext();\n    const page_r22 = ctx_r37.$implicit;\n    const disabled_r24 = ctx_r37.disabled;\n    const ctx_r25 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"active\", pageNumber_r26 === page_r22)(\"disabled\", ctx_r25.isEllipsis(pageNumber_r26) || disabled_r24);\n    i0.ɵɵattribute(\"aria-current\", pageNumber_r26 === page_r22 ? \"page\" : null);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r25.isEllipsis(pageNumber_r26));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r25.isEllipsis(pageNumber_r26));\n  }\n}\n\nfunction NgbPagination_ng_template_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, NgbPagination_ng_template_12_li_0_Template, 3, 7, \"li\", 16);\n  }\n\n  if (rf & 2) {\n    const pages_r23 = ctx.pages;\n    i0.ɵɵproperty(\"ngForOf\", pages_r23);\n  }\n}\n\nfunction NgbPagination_li_15_ng_template_2_Template(rf, ctx) {}\n\nconst _c46 = function (a0, a1) {\n  return {\n    disabled: a0,\n    currentPage: a1\n  };\n};\n\nfunction NgbPagination_li_15_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r40 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"li\", 17)(1, \"a\", 22);\n    i0.ɵɵlistener(\"click\", function NgbPagination_li_15_Template_a_click_1_listener($event) {\n      i0.ɵɵrestoreView(_r40);\n      const ctx_r39 = i0.ɵɵnextContext();\n      ctx_r39.selectPage(1);\n      return $event.preventDefault();\n    });\n    i0.ɵɵtemplate(2, NgbPagination_li_15_ng_template_2_Template, 0, 0, \"ng-template\", 8);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r14 = i0.ɵɵnextContext();\n\n    const _r0 = i0.ɵɵreference(1);\n\n    i0.ɵɵclassProp(\"disabled\", ctx_r14.previousDisabled());\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"tabindex\", ctx_r14.previousDisabled() ? \"-1\" : null)(\"aria-disabled\", ctx_r14.previousDisabled() ? \"true\" : null);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", (ctx_r14.tplFirst == null ? null : ctx_r14.tplFirst.templateRef) || _r0)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction2(6, _c46, ctx_r14.previousDisabled(), ctx_r14.page));\n  }\n}\n\nfunction NgbPagination_li_16_ng_template_2_Template(rf, ctx) {}\n\nconst _c49 = function (a0) {\n  return {\n    disabled: a0\n  };\n};\n\nfunction NgbPagination_li_16_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r43 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"li\", 17)(1, \"a\", 23);\n    i0.ɵɵlistener(\"click\", function NgbPagination_li_16_Template_a_click_1_listener($event) {\n      i0.ɵɵrestoreView(_r43);\n      const ctx_r42 = i0.ɵɵnextContext();\n      ctx_r42.selectPage(ctx_r42.page - 1);\n      return $event.preventDefault();\n    });\n    i0.ɵɵtemplate(2, NgbPagination_li_16_ng_template_2_Template, 0, 0, \"ng-template\", 8);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r15 = i0.ɵɵnextContext();\n\n    const _r2 = i0.ɵɵreference(3);\n\n    i0.ɵɵclassProp(\"disabled\", ctx_r15.previousDisabled());\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"tabindex\", ctx_r15.previousDisabled() ? \"-1\" : null)(\"aria-disabled\", ctx_r15.previousDisabled() ? \"true\" : null);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", (ctx_r15.tplPrevious == null ? null : ctx_r15.tplPrevious.templateRef) || _r2)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(6, _c49, ctx_r15.previousDisabled()));\n  }\n}\n\nfunction NgbPagination_ng_template_17_Template(rf, ctx) {}\n\nfunction NgbPagination_li_18_ng_template_2_Template(rf, ctx) {}\n\nfunction NgbPagination_li_18_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r46 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"li\", 17)(1, \"a\", 24);\n    i0.ɵɵlistener(\"click\", function NgbPagination_li_18_Template_a_click_1_listener($event) {\n      i0.ɵɵrestoreView(_r46);\n      const ctx_r45 = i0.ɵɵnextContext();\n      ctx_r45.selectPage(ctx_r45.page + 1);\n      return $event.preventDefault();\n    });\n    i0.ɵɵtemplate(2, NgbPagination_li_18_ng_template_2_Template, 0, 0, \"ng-template\", 8);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r17 = i0.ɵɵnextContext();\n\n    const _r4 = i0.ɵɵreference(5);\n\n    i0.ɵɵclassProp(\"disabled\", ctx_r17.nextDisabled());\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"tabindex\", ctx_r17.nextDisabled() ? \"-1\" : null)(\"aria-disabled\", ctx_r17.nextDisabled() ? \"true\" : null);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", (ctx_r17.tplNext == null ? null : ctx_r17.tplNext.templateRef) || _r4)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction2(6, _c46, ctx_r17.nextDisabled(), ctx_r17.page));\n  }\n}\n\nfunction NgbPagination_li_19_ng_template_2_Template(rf, ctx) {}\n\nfunction NgbPagination_li_19_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r49 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"li\", 17)(1, \"a\", 25);\n    i0.ɵɵlistener(\"click\", function NgbPagination_li_19_Template_a_click_1_listener($event) {\n      i0.ɵɵrestoreView(_r49);\n      const ctx_r48 = i0.ɵɵnextContext();\n      ctx_r48.selectPage(ctx_r48.pageCount);\n      return $event.preventDefault();\n    });\n    i0.ɵɵtemplate(2, NgbPagination_li_19_ng_template_2_Template, 0, 0, \"ng-template\", 8);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r18 = i0.ɵɵnextContext();\n\n    const _r6 = i0.ɵɵreference(7);\n\n    i0.ɵɵclassProp(\"disabled\", ctx_r18.nextDisabled());\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"tabindex\", ctx_r18.nextDisabled() ? \"-1\" : null)(\"aria-disabled\", ctx_r18.nextDisabled() ? \"true\" : null);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", (ctx_r18.tplLast == null ? null : ctx_r18.tplLast.templateRef) || _r6)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction2(6, _c46, ctx_r18.nextDisabled(), ctx_r18.page));\n  }\n}\n\nconst _c54 = function (a0, a1, a2) {\n  return {\n    $implicit: a0,\n    pages: a1,\n    disabled: a2\n  };\n};\n\nfunction NgbPopoverWindow_h3_1_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵtextInterpolate(ctx_r2.title);\n  }\n}\n\nfunction NgbPopoverWindow_h3_1_ng_template_3_Template(rf, ctx) {}\n\nfunction NgbPopoverWindow_h3_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h3\", 3);\n    i0.ɵɵtemplate(1, NgbPopoverWindow_h3_1_ng_template_1_Template, 1, 1, \"ng-template\", null, 4, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtemplate(3, NgbPopoverWindow_h3_1_ng_template_3_Template, 0, 0, \"ng-template\", 5);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const _r1 = i0.ɵɵreference(2);\n\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.isTitleTemplate() ? ctx_r0.title : _r1)(\"ngTemplateOutletContext\", ctx_r0.context);\n  }\n}\n\nfunction NgbProgressbar_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵi18n(1, 2);\n    i0.ɵɵpipe(2, \"percent\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵi18nExp(i0.ɵɵpipeBind1(2, 1, ctx_r0.getValue() / ctx_r0.max));\n    i0.ɵɵi18nApply(1);\n  }\n}\n\nfunction NgbRating_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n  }\n\n  if (rf & 2) {\n    const fill_r3 = ctx.fill;\n    i0.ɵɵtextInterpolate(fill_r3 === 100 ? \"\\u2605\" : \"\\u2606\");\n  }\n}\n\nfunction NgbRating_ng_template_2_ng_template_3_Template(rf, ctx) {}\n\nfunction NgbRating_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"span\", 2);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"span\", 3);\n    i0.ɵɵlistener(\"mouseenter\", function NgbRating_ng_template_2_Template_span_mouseenter_2_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r7);\n      const index_r4 = restoredCtx.index;\n      const ctx_r6 = i0.ɵɵnextContext();\n      return ctx_r6.enter(index_r4 + 1);\n    })(\"click\", function NgbRating_ng_template_2_Template_span_click_2_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r7);\n      const index_r4 = restoredCtx.index;\n      const ctx_r8 = i0.ɵɵnextContext();\n      return ctx_r8.handleClick(index_r4 + 1);\n    });\n    i0.ɵɵtemplate(3, NgbRating_ng_template_2_ng_template_3_Template, 0, 0, \"ng-template\", 4);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const index_r4 = ctx.index;\n    const ctx_r2 = i0.ɵɵnextContext();\n\n    const _r0 = i0.ɵɵreference(1);\n\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"(\", index_r4 < ctx_r2.nextRate ? \"*\" : \" \", \")\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleProp(\"cursor\", ctx_r2.isInteractive() ? \"pointer\" : \"default\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r2.starTemplate || ctx_r2.starTemplateFromContent || _r0)(\"ngTemplateOutletContext\", ctx_r2.contexts[index_r4]);\n  }\n}\n\nfunction NgbTimepicker_button_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 11);\n    i0.ɵɵlistener(\"click\", function NgbTimepicker_button_3_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return ctx_r8.changeHour(ctx_r8.hourStep);\n    });\n    i0.ɵɵelement(1, \"span\", 12);\n    i0.ɵɵelementStart(2, \"span\", 13);\n    i0.ɵɵi18n(3, 14);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"btn-sm\", ctx_r0.isSmallSize)(\"btn-lg\", ctx_r0.isLargeSize)(\"disabled\", ctx_r0.disabled);\n    i0.ɵɵproperty(\"disabled\", ctx_r0.disabled);\n  }\n}\n\nfunction NgbTimepicker_button_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 11);\n    i0.ɵɵlistener(\"click\", function NgbTimepicker_button_5_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return ctx_r10.changeHour(-ctx_r10.hourStep);\n    });\n    i0.ɵɵelement(1, \"span\", 15);\n    i0.ɵɵelementStart(2, \"span\", 13);\n    i0.ɵɵi18n(3, 16);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"btn-sm\", ctx_r1.isSmallSize)(\"btn-lg\", ctx_r1.isLargeSize)(\"disabled\", ctx_r1.disabled);\n    i0.ɵɵproperty(\"disabled\", ctx_r1.disabled);\n  }\n}\n\nfunction NgbTimepicker_button_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 11);\n    i0.ɵɵlistener(\"click\", function NgbTimepicker_button_9_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r13);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return ctx_r12.changeMinute(ctx_r12.minuteStep);\n    });\n    i0.ɵɵelement(1, \"span\", 12);\n    i0.ɵɵelementStart(2, \"span\", 13);\n    i0.ɵɵi18n(3, 17);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"btn-sm\", ctx_r2.isSmallSize)(\"btn-lg\", ctx_r2.isLargeSize)(\"disabled\", ctx_r2.disabled);\n    i0.ɵɵproperty(\"disabled\", ctx_r2.disabled);\n  }\n}\n\nfunction NgbTimepicker_button_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 11);\n    i0.ɵɵlistener(\"click\", function NgbTimepicker_button_11_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r14 = i0.ɵɵnextContext();\n      return ctx_r14.changeMinute(-ctx_r14.minuteStep);\n    });\n    i0.ɵɵelement(1, \"span\", 15);\n    i0.ɵɵelementStart(2, \"span\", 13);\n    i0.ɵɵi18n(3, 18);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"btn-sm\", ctx_r3.isSmallSize)(\"btn-lg\", ctx_r3.isLargeSize)(\"disabled\", ctx_r3.disabled);\n    i0.ɵɵproperty(\"disabled\", ctx_r3.disabled);\n  }\n}\n\nfunction NgbTimepicker_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 5);\n    i0.ɵɵtext(1, \":\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction NgbTimepicker_div_13_button_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r19 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 11);\n    i0.ɵɵlistener(\"click\", function NgbTimepicker_div_13_button_1_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r19);\n      const ctx_r18 = i0.ɵɵnextContext(2);\n      return ctx_r18.changeSecond(ctx_r18.secondStep);\n    });\n    i0.ɵɵelement(1, \"span\", 12);\n    i0.ɵɵelementStart(2, \"span\", 13);\n    i0.ɵɵi18n(3, 21);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r16 = i0.ɵɵnextContext(2);\n    i0.ɵɵclassProp(\"btn-sm\", ctx_r16.isSmallSize)(\"btn-lg\", ctx_r16.isLargeSize)(\"disabled\", ctx_r16.disabled);\n    i0.ɵɵproperty(\"disabled\", ctx_r16.disabled);\n  }\n}\n\nfunction NgbTimepicker_div_13_button_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r21 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 11);\n    i0.ɵɵlistener(\"click\", function NgbTimepicker_div_13_button_3_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r21);\n      const ctx_r20 = i0.ɵɵnextContext(2);\n      return ctx_r20.changeSecond(-ctx_r20.secondStep);\n    });\n    i0.ɵɵelement(1, \"span\", 15);\n    i0.ɵɵelementStart(2, \"span\", 13);\n    i0.ɵɵi18n(3, 22);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r17 = i0.ɵɵnextContext(2);\n    i0.ɵɵclassProp(\"btn-sm\", ctx_r17.isSmallSize)(\"btn-lg\", ctx_r17.isLargeSize)(\"disabled\", ctx_r17.disabled);\n    i0.ɵɵproperty(\"disabled\", ctx_r17.disabled);\n  }\n}\n\nfunction NgbTimepicker_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r23 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵtemplate(1, NgbTimepicker_div_13_button_1_Template, 4, 7, \"button\", 3);\n    i0.ɵɵelementStart(2, \"input\", 20);\n    i0.ɵɵlistener(\"change\", function NgbTimepicker_div_13_Template_input_change_2_listener($event) {\n      i0.ɵɵrestoreView(_r23);\n      const ctx_r22 = i0.ɵɵnextContext();\n      return ctx_r22.updateSecond($event.target.value);\n    })(\"blur\", function NgbTimepicker_div_13_Template_input_blur_2_listener() {\n      i0.ɵɵrestoreView(_r23);\n      const ctx_r24 = i0.ɵɵnextContext();\n      return ctx_r24.handleBlur();\n    })(\"input\", function NgbTimepicker_div_13_Template_input_input_2_listener($event) {\n      i0.ɵɵrestoreView(_r23);\n      const ctx_r25 = i0.ɵɵnextContext();\n      return ctx_r25.formatInput($event.target);\n    })(\"keydown.ArrowUp\", function NgbTimepicker_div_13_Template_input_keydown_ArrowUp_2_listener($event) {\n      i0.ɵɵrestoreView(_r23);\n      const ctx_r26 = i0.ɵɵnextContext();\n      ctx_r26.changeSecond(ctx_r26.secondStep);\n      return $event.preventDefault();\n    })(\"keydown.ArrowDown\", function NgbTimepicker_div_13_Template_input_keydown_ArrowDown_2_listener($event) {\n      i0.ɵɵrestoreView(_r23);\n      const ctx_r27 = i0.ɵɵnextContext();\n      ctx_r27.changeSecond(-ctx_r27.secondStep);\n      return $event.preventDefault();\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, NgbTimepicker_div_13_button_3_Template, 4, 7, \"button\", 3);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.spinners);\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"form-control-sm\", ctx_r5.isSmallSize)(\"form-control-lg\", ctx_r5.isLargeSize);\n    i0.ɵɵproperty(\"value\", ctx_r5.formatMinSec(ctx_r5.model == null ? null : ctx_r5.model.second))(\"readOnly\", ctx_r5.readonlyInputs)(\"disabled\", ctx_r5.disabled);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.spinners);\n  }\n}\n\nfunction NgbTimepicker_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 5);\n  }\n}\n\nfunction NgbTimepicker_div_15_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵi18n(1, 27);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r28 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵi18nExp(ctx_r28.i18n.getAfternoonPeriod());\n    i0.ɵɵi18nApply(1);\n  }\n}\n\nfunction NgbTimepicker_div_15_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵi18n(0, 28);\n  }\n\n  if (rf & 2) {\n    const ctx_r30 = i0.ɵɵnextContext(2);\n    i0.ɵɵi18nExp(ctx_r30.i18n.getMorningPeriod());\n    i0.ɵɵi18nApply(0);\n  }\n}\n\nfunction NgbTimepicker_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r32 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 23)(1, \"button\", 24);\n    i0.ɵɵlistener(\"click\", function NgbTimepicker_div_15_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r32);\n      const ctx_r31 = i0.ɵɵnextContext();\n      return ctx_r31.toggleMeridian();\n    });\n    i0.ɵɵtemplate(2, NgbTimepicker_div_15_ng_container_2_Template, 2, 1, \"ng-container\", 25);\n    i0.ɵɵtemplate(3, NgbTimepicker_div_15_ng_template_3_Template, 1, 1, \"ng-template\", null, 26, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const _r29 = i0.ɵɵreference(4);\n\n    const ctx_r7 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"btn-sm\", ctx_r7.isSmallSize)(\"btn-lg\", ctx_r7.isLargeSize)(\"disabled\", ctx_r7.disabled);\n    i0.ɵɵproperty(\"disabled\", ctx_r7.disabled);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r7.model && ctx_r7.model.hour >= 12)(\"ngIfElse\", _r29);\n  }\n}\n\nfunction NgbToast_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"strong\", 3);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r1.header);\n  }\n}\n\nfunction NgbToast_ng_template_2_ng_template_1_Template(rf, ctx) {}\n\nfunction NgbToast_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 4);\n    i0.ɵɵtemplate(1, NgbToast_ng_template_2_ng_template_1_Template, 0, 0, \"ng-template\", 5);\n    i0.ɵɵelementStart(2, \"button\", 6);\n    i0.ɵɵlistener(\"click\", function NgbToast_ng_template_2_Template_button_click_2_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.hide();\n    });\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n\n    const _r0 = i0.ɵɵreference(1);\n\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r2.contentHeaderTpl || _r0);\n  }\n}\n\nfunction NgbHighlight_ng_template_0_span_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const part_r1 = i0.ɵɵnextContext().$implicit;\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(ctx_r3.highlightClass);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(part_r1);\n  }\n}\n\nfunction NgbHighlight_ng_template_0_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n  }\n\n  if (rf & 2) {\n    const part_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵtextInterpolate(part_r1);\n  }\n}\n\nfunction NgbHighlight_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, NgbHighlight_ng_template_0_span_0_Template, 2, 3, \"span\", 1);\n    i0.ɵɵtemplate(1, NgbHighlight_ng_template_0_ng_template_1_Template, 1, 1, \"ng-template\", null, 2, i0.ɵɵtemplateRefExtractor);\n  }\n\n  if (rf & 2) {\n    const isOdd_r2 = ctx.odd;\n\n    const _r4 = i0.ɵɵreference(2);\n\n    i0.ɵɵproperty(\"ngIf\", isOdd_r2)(\"ngIfElse\", _r4);\n  }\n}\n\nfunction NgbTypeaheadWindow_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"ngb-highlight\", 2);\n  }\n\n  if (rf & 2) {\n    const result_r3 = ctx.result;\n    const term_r4 = ctx.term;\n    const formatter_r5 = ctx.formatter;\n    i0.ɵɵproperty(\"result\", formatter_r5(result_r3))(\"term\", term_r4);\n  }\n}\n\nfunction NgbTypeaheadWindow_ng_template_2_ng_template_1_Template(rf, ctx) {}\n\nconst _c87 = function (a0, a1, a2) {\n  return {\n    result: a0,\n    term: a1,\n    formatter: a2\n  };\n};\n\nfunction NgbTypeaheadWindow_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 3);\n    i0.ɵɵlistener(\"mouseenter\", function NgbTypeaheadWindow_ng_template_2_Template_button_mouseenter_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r10);\n      const idx_r7 = restoredCtx.index;\n      const ctx_r9 = i0.ɵɵnextContext();\n      return ctx_r9.markActive(idx_r7);\n    })(\"click\", function NgbTypeaheadWindow_ng_template_2_Template_button_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r10);\n      const result_r6 = restoredCtx.$implicit;\n      const ctx_r11 = i0.ɵɵnextContext();\n      return ctx_r11.select(result_r6);\n    });\n    i0.ɵɵtemplate(1, NgbTypeaheadWindow_ng_template_2_ng_template_1_Template, 0, 0, \"ng-template\", 4);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const result_r6 = ctx.$implicit;\n    const idx_r7 = ctx.index;\n    const ctx_r2 = i0.ɵɵnextContext();\n\n    const _r0 = i0.ɵɵreference(1);\n\n    i0.ɵɵclassProp(\"active\", idx_r7 === ctx_r2.activeIdx);\n    i0.ɵɵproperty(\"id\", ctx_r2.id + \"-\" + idx_r7);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r2.resultTemplate || _r0)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction3(5, _c87, result_r6, ctx_r2.term, ctx_r2.formatter));\n  }\n}\n\nfunction toInteger(value) {\n  return parseInt(`${value}`, 10);\n}\n\nfunction toString(value) {\n  return value !== undefined && value !== null ? `${value}` : '';\n}\n\nfunction getValueInRange(value, max, min = 0) {\n  return Math.max(Math.min(value, max), min);\n}\n\nfunction isString(value) {\n  return typeof value === 'string';\n}\n\nfunction isNumber(value) {\n  return !isNaN(toInteger(value));\n}\n\nfunction isInteger(value) {\n  return typeof value === 'number' && isFinite(value) && Math.floor(value) === value;\n}\n\nfunction isDefined(value) {\n  return value !== undefined && value !== null;\n}\n\nfunction isPromise(v) {\n  return v && v.then;\n}\n\nfunction padNumber(value) {\n  if (isNumber(value)) {\n    return `0${value}`.slice(-2);\n  } else {\n    return '';\n  }\n}\n\nfunction regExpEscape(text) {\n  return text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n}\n\nfunction hasClassName(element, className) {\n  return element && element.className && element.className.split && element.className.split(/\\s+/).indexOf(className) >= 0;\n}\n\nfunction closest(element, selector) {\n  if (!selector) {\n    return null;\n  }\n  /*\n   * In certain browsers (e.g. Edge 44.18362.449.0) HTMLDocument does\n   * not support `Element.prototype.closest`. To emulate the correct behaviour\n   * we return null when the method is missing.\n   *\n   * Note that in evergreen browsers `closest(document.documentElement, 'html')`\n   * will return the document element whilst in Edge null will be returned. This\n   * compromise was deemed good enough.\n   */\n\n\n  if (typeof element.closest === 'undefined') {\n    return null;\n  }\n\n  return element.closest(selector);\n}\n/**\n * Force a browser reflow\n * @param element element where to apply the reflow\n */\n\n\nfunction reflow(element) {\n  return (element || document.body).getBoundingClientRect();\n}\n/**\n * Creates an observable where all callbacks are executed inside a given zone\n *\n * @param zone\n */\n\n\nfunction runInZone(zone) {\n  return source => {\n    return new Observable(observer => {\n      const next = value => zone.run(() => observer.next(value));\n\n      const error = e => zone.run(() => observer.error(e));\n\n      const complete = () => zone.run(() => observer.complete());\n\n      return source.subscribe({\n        next,\n        error,\n        complete\n      });\n    });\n  };\n}\n\nfunction removeAccents(str) {\n  return str.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '');\n}\n\nfunction getTransitionDurationMs(element) {\n  const {\n    transitionDelay,\n    transitionDuration\n  } = window.getComputedStyle(element);\n  const transitionDelaySec = parseFloat(transitionDelay);\n  const transitionDurationSec = parseFloat(transitionDuration);\n  return (transitionDelaySec + transitionDurationSec) * 1000;\n}\n\nconst environment = {\n  animation: true,\n  transitionTimerDelayMs: 5\n};\n\nconst noopFn = () => {};\n\nconst {\n  transitionTimerDelayMs\n} = environment;\nconst runningTransitions = new Map();\n\nconst ngbRunTransition = (zone, element, startFn, options) => {\n  // Getting initial context from options\n  let context = options.context || {}; // Checking if there are already running transitions on the given element.\n\n  const running = runningTransitions.get(element);\n\n  if (running) {\n    switch (options.runningTransition) {\n      // If there is one running and we want for it to 'continue' to run, we have to cancel the new one.\n      // We're not emitting any values, but simply completing the observable (EMPTY).\n      case 'continue':\n        return EMPTY;\n      // If there is one running and we want for it to 'stop', we have to complete the running one.\n      // We're simply completing the running one and not emitting any values and merging newly provided context\n      // with the one coming from currently running transition.\n\n      case 'stop':\n        zone.run(() => running.transition$.complete());\n        context = Object.assign(running.context, context);\n        runningTransitions.delete(element);\n    }\n  } // Running the start function\n\n\n  const endFn = startFn(element, options.animation, context) || noopFn; // If 'prefer-reduced-motion' is enabled, the 'transition' will be set to 'none'.\n  // If animations are disabled, we have to emit a value and complete the observable\n  // In this case we have to call the end function, but can finish immediately by emitting a value,\n  // completing the observable and executing end functions synchronously.\n\n  if (!options.animation || window.getComputedStyle(element).transitionProperty === 'none') {\n    zone.run(() => endFn());\n    return of(undefined).pipe(runInZone(zone));\n  } // Starting a new transition\n\n\n  const transition$ = new Subject();\n  const finishTransition$ = new Subject();\n  const stop$ = transition$.pipe(endWith(true));\n  runningTransitions.set(element, {\n    transition$,\n    complete: () => {\n      finishTransition$.next();\n      finishTransition$.complete();\n    },\n    context\n  });\n  const transitionDurationMs = getTransitionDurationMs(element); // 1. We have to both listen for the 'transitionend' event and have a 'just-in-case' timer,\n  // because 'transitionend' event might not be fired in some browsers, if the transitioning\n  // element becomes invisible (ex. when scrolling, making browser tab inactive, etc.). The timer\n  // guarantees, that we'll release the DOM element and complete 'ngbRunTransition'.\n  // 2. We need to filter transition end events, because they might bubble from shorter transitions\n  // on inner DOM elements. We're only interested in the transition on the 'element' itself.\n\n  zone.runOutsideAngular(() => {\n    const transitionEnd$ = fromEvent(element, 'transitionend').pipe(takeUntil(stop$), filter(({\n      target\n    }) => target === element));\n    const timer$ = timer(transitionDurationMs + transitionTimerDelayMs).pipe(takeUntil(stop$));\n    race(timer$, transitionEnd$, finishTransition$).pipe(takeUntil(stop$)).subscribe(() => {\n      runningTransitions.delete(element);\n      zone.run(() => {\n        endFn();\n        transition$.next();\n        transition$.complete();\n      });\n    });\n  });\n  return transition$.asObservable();\n};\n\nconst ngbCompleteTransition = element => {\n  var _a;\n\n  (_a = runningTransitions.get(element)) === null || _a === void 0 ? void 0 : _a.complete();\n};\n\nfunction measureCollapsingElementHeightPx(element) {\n  // SSR fix for without injecting the PlatformId\n  if (typeof navigator === 'undefined') {\n    return '0px';\n  }\n\n  const {\n    classList\n  } = element;\n  const hasShownClass = classList.contains('show');\n\n  if (!hasShownClass) {\n    classList.add('show');\n  }\n\n  element.style.height = '';\n  const height = element.getBoundingClientRect().height + 'px';\n\n  if (!hasShownClass) {\n    classList.remove('show');\n  }\n\n  return height;\n}\n\nconst ngbCollapsingTransition = (element, animation, context) => {\n  let {\n    direction,\n    maxHeight\n  } = context;\n  const {\n    classList\n  } = element;\n\n  function setInitialClasses() {\n    classList.add('collapse');\n\n    if (direction === 'show') {\n      classList.add('show');\n    } else {\n      classList.remove('show');\n    }\n  } // without animations we just need to set initial classes\n\n\n  if (!animation) {\n    setInitialClasses();\n    return;\n  } // No maxHeight -> running the transition for the first time\n\n\n  if (!maxHeight) {\n    maxHeight = measureCollapsingElementHeightPx(element);\n    context.maxHeight = maxHeight; // Fix the height before starting the animation\n\n    element.style.height = direction !== 'show' ? maxHeight : '0px';\n    classList.remove('collapse');\n    classList.remove('collapsing');\n    classList.remove('show');\n    reflow(element); // Start the animation\n\n    classList.add('collapsing');\n  } // Start or revert the animation\n\n\n  element.style.height = direction === 'show' ? maxHeight : '0px';\n  return () => {\n    setInitialClasses();\n    classList.remove('collapsing');\n    element.style.height = '';\n  };\n};\n/**\n * Global ng-bootstrap config\n *\n * @since 8.0.0\n */\n\n\nclass NgbConfig {\n  constructor() {\n    this.animation = environment.animation;\n  }\n\n}\n\nNgbConfig.ɵfac = function NgbConfig_Factory(t) {\n  return new (t || NgbConfig)();\n};\n\nNgbConfig.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: NgbConfig,\n  factory: NgbConfig.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\n/**\n * A configuration service for the [NgbAccordion](#/components/accordion/api#NgbAccordion) component.\n *\n * You can inject this service, typically in your root component, and customize its properties\n * to provide default values for all accordions used in the application.\n */\n\n\nclass NgbAccordionConfig {\n  constructor(_ngbConfig) {\n    this._ngbConfig = _ngbConfig;\n    this.closeOthers = false;\n  }\n\n  get animation() {\n    return this._animation === undefined ? this._ngbConfig.animation : this._animation;\n  }\n\n  set animation(animation) {\n    this._animation = animation;\n  }\n\n}\n\nNgbAccordionConfig.ɵfac = function NgbAccordionConfig_Factory(t) {\n  return new (t || NgbAccordionConfig)(i0.ɵɵinject(NgbConfig));\n};\n\nNgbAccordionConfig.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: NgbAccordionConfig,\n  factory: NgbAccordionConfig.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbAccordionConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: NgbConfig\n    }];\n  }, null);\n})();\n\nlet nextId$4 = 0;\n/**\n * A directive that wraps an accordion panel header with any HTML markup and a toggling button\n * marked with [`NgbPanelToggle`](#/components/accordion/api#NgbPanelToggle).\n * See the [header customization demo](#/components/accordion/examples#header) for more details.\n *\n * You can also use [`NgbPanelTitle`](#/components/accordion/api#NgbPanelTitle) to customize only the panel title.\n *\n * @since 4.1.0\n */\n\nclass NgbPanelHeader {\n  constructor(templateRef) {\n    this.templateRef = templateRef;\n  }\n\n}\n\nNgbPanelHeader.ɵfac = function NgbPanelHeader_Factory(t) {\n  return new (t || NgbPanelHeader)(i0.ɵɵdirectiveInject(i0.TemplateRef));\n};\n\nNgbPanelHeader.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: NgbPanelHeader,\n  selectors: [[\"ng-template\", \"ngbPanelHeader\", \"\"]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbPanelHeader, [{\n    type: Directive,\n    args: [{\n      selector: 'ng-template[ngbPanelHeader]'\n    }]\n  }], function () {\n    return [{\n      type: i0.TemplateRef\n    }];\n  }, null);\n})();\n/**\n * A directive that wraps only the panel title with HTML markup inside.\n *\n * You can also use [`NgbPanelHeader`](#/components/accordion/api#NgbPanelHeader) to customize the full panel header.\n */\n\n\nclass NgbPanelTitle {\n  constructor(templateRef) {\n    this.templateRef = templateRef;\n  }\n\n}\n\nNgbPanelTitle.ɵfac = function NgbPanelTitle_Factory(t) {\n  return new (t || NgbPanelTitle)(i0.ɵɵdirectiveInject(i0.TemplateRef));\n};\n\nNgbPanelTitle.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: NgbPanelTitle,\n  selectors: [[\"ng-template\", \"ngbPanelTitle\", \"\"]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbPanelTitle, [{\n    type: Directive,\n    args: [{\n      selector: 'ng-template[ngbPanelTitle]'\n    }]\n  }], function () {\n    return [{\n      type: i0.TemplateRef\n    }];\n  }, null);\n})();\n/**\n * A directive that wraps the accordion panel content.\n */\n\n\nclass NgbPanelContent {\n  constructor(templateRef) {\n    this.templateRef = templateRef;\n  }\n\n}\n\nNgbPanelContent.ɵfac = function NgbPanelContent_Factory(t) {\n  return new (t || NgbPanelContent)(i0.ɵɵdirectiveInject(i0.TemplateRef));\n};\n\nNgbPanelContent.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: NgbPanelContent,\n  selectors: [[\"ng-template\", \"ngbPanelContent\", \"\"]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbPanelContent, [{\n    type: Directive,\n    args: [{\n      selector: 'ng-template[ngbPanelContent]'\n    }]\n  }], function () {\n    return [{\n      type: i0.TemplateRef\n    }];\n  }, null);\n})();\n/**\n * A directive that wraps an individual accordion panel with title and collapsible content.\n */\n\n\nclass NgbPanel {\n  constructor() {\n    /**\n     *  If `true`, the panel is disabled an can't be toggled.\n     */\n    this.disabled = false;\n    /**\n     *  An optional id for the panel that must be unique on the page.\n     *\n     *  If not provided, it will be auto-generated in the `ngb-panel-xxx` format.\n     */\n\n    this.id = `ngb-panel-${nextId$4++}`;\n    this.isOpen = false;\n    /* A flag to specified that the transition panel classes have been initialized */\n\n    this.initClassDone = false;\n    /* A flag to specified if the panel is currently being animated, to ensure its presence in the dom */\n\n    this.transitionRunning = false;\n    /**\n     * An event emitted when the panel is shown, after the transition. It has no payload.\n     *\n     * @since 8.0.0\n     */\n\n    this.shown = new EventEmitter();\n    /**\n     * An event emitted when the panel is hidden, after the transition. It has no payload.\n     *\n     * @since 8.0.0\n     */\n\n    this.hidden = new EventEmitter();\n  }\n\n  ngAfterContentChecked() {\n    // We are using @ContentChildren instead of @ContentChild as in the Angular version being used\n    // only @ContentChildren allows us to specify the {descendants: false} option.\n    // Without {descendants: false} we are hitting bugs described in:\n    // https://github.com/ng-bootstrap/ng-bootstrap/issues/2240\n    this.titleTpl = this.titleTpls.first;\n    this.headerTpl = this.headerTpls.first;\n    this.contentTpl = this.contentTpls.first;\n  }\n\n}\n\nNgbPanel.ɵfac = function NgbPanel_Factory(t) {\n  return new (t || NgbPanel)();\n};\n\nNgbPanel.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: NgbPanel,\n  selectors: [[\"ngb-panel\"]],\n  contentQueries: function NgbPanel_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, NgbPanelTitle, 4);\n      i0.ɵɵcontentQuery(dirIndex, NgbPanelHeader, 4);\n      i0.ɵɵcontentQuery(dirIndex, NgbPanelContent, 4);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.titleTpls = _t);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.headerTpls = _t);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.contentTpls = _t);\n    }\n  },\n  inputs: {\n    disabled: \"disabled\",\n    id: \"id\",\n    title: \"title\",\n    type: \"type\",\n    cardClass: \"cardClass\"\n  },\n  outputs: {\n    shown: \"shown\",\n    hidden: \"hidden\"\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbPanel, [{\n    type: Directive,\n    args: [{\n      selector: 'ngb-panel'\n    }]\n  }], null, {\n    disabled: [{\n      type: Input\n    }],\n    id: [{\n      type: Input\n    }],\n    title: [{\n      type: Input\n    }],\n    type: [{\n      type: Input\n    }],\n    cardClass: [{\n      type: Input\n    }],\n    shown: [{\n      type: Output\n    }],\n    hidden: [{\n      type: Output\n    }],\n    titleTpls: [{\n      type: ContentChildren,\n      args: [NgbPanelTitle, {\n        descendants: false\n      }]\n    }],\n    headerTpls: [{\n      type: ContentChildren,\n      args: [NgbPanelHeader, {\n        descendants: false\n      }]\n    }],\n    contentTpls: [{\n      type: ContentChildren,\n      args: [NgbPanelContent, {\n        descendants: false\n      }]\n    }]\n  });\n})();\n\nclass NgbRefDirective {\n  constructor(_El) {\n    this._El = _El;\n    this.ngbRef = new EventEmitter();\n  }\n\n  ngOnInit() {\n    this.ngbRef.emit(this._El.nativeElement);\n  }\n\n  ngOnDestroy() {\n    this.ngbRef.emit(null);\n  }\n\n}\n\nNgbRefDirective.ɵfac = function NgbRefDirective_Factory(t) {\n  return new (t || NgbRefDirective)(i0.ɵɵdirectiveInject(i0.ElementRef));\n};\n\nNgbRefDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: NgbRefDirective,\n  selectors: [[\"\", \"ngbRef\", \"\"]],\n  outputs: {\n    ngbRef: \"ngbRef\"\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbRefDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[ngbRef]'\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }];\n  }, {\n    ngbRef: [{\n      type: Output\n    }]\n  });\n})();\n/**\n * Accordion is a collection of collapsible panels (bootstrap cards).\n *\n * It can ensure only one panel is opened at a time and allows to customize panel\n * headers.\n */\n\n\nclass NgbAccordion {\n  constructor(config, _ngZone, _changeDetector) {\n    this._ngZone = _ngZone;\n    this._changeDetector = _changeDetector;\n    /**\n     * An array or comma separated strings of panel ids that should be opened **initially**.\n     *\n     * For subsequent changes use methods like `expand()`, `collapse()`, etc. and\n     * the `(panelChange)` event.\n     */\n\n    this.activeIds = [];\n    /**\n     * If `true`, panel content will be detached from DOM and not simply hidden when the panel is collapsed.\n     */\n\n    this.destroyOnHide = true;\n    /**\n     * Event emitted right before the panel toggle happens.\n     *\n     * See [NgbPanelChangeEvent](#/components/accordion/api#NgbPanelChangeEvent) for payload details.\n     */\n\n    this.panelChange = new EventEmitter();\n    /**\n     * An event emitted when the expanding animation is finished on the panel. The payload is the panel id.\n     *\n     * @since 8.0.0\n     */\n\n    this.shown = new EventEmitter();\n    /**\n     * An event emitted when the collapsing animation is finished on the panel, and before the panel element is removed.\n     * The payload is the panel id.\n     *\n     * @since 8.0.0\n     */\n\n    this.hidden = new EventEmitter();\n    this.animation = config.animation;\n    this.type = config.type;\n    this.closeOtherPanels = config.closeOthers;\n  }\n  /**\n   * Checks if a panel with a given id is expanded.\n   */\n\n\n  isExpanded(panelId) {\n    return this.activeIds.indexOf(panelId) > -1;\n  }\n  /**\n   * Expands a panel with a given id.\n   *\n   * Has no effect if the panel is already expanded or disabled.\n   */\n\n\n  expand(panelId) {\n    this._changeOpenState(this._findPanelById(panelId), true);\n  }\n  /**\n   * Expands all panels, if `[closeOthers]` is `false`.\n   *\n   * If `[closeOthers]` is `true`, it will expand the first panel, unless there is already a panel opened.\n   */\n\n\n  expandAll() {\n    if (this.closeOtherPanels) {\n      if (this.activeIds.length === 0 && this.panels.length) {\n        this._changeOpenState(this.panels.first, true);\n      }\n    } else {\n      this.panels.forEach(panel => this._changeOpenState(panel, true));\n    }\n  }\n  /**\n   * Collapses a panel with the given id.\n   *\n   * Has no effect if the panel is already collapsed or disabled.\n   */\n\n\n  collapse(panelId) {\n    this._changeOpenState(this._findPanelById(panelId), false);\n  }\n  /**\n   * Collapses all opened panels.\n   */\n\n\n  collapseAll() {\n    this.panels.forEach(panel => {\n      this._changeOpenState(panel, false);\n    });\n  }\n  /**\n   * Toggles a panel with the given id.\n   *\n   * Has no effect if the panel is disabled.\n   */\n\n\n  toggle(panelId) {\n    const panel = this._findPanelById(panelId);\n\n    if (panel) {\n      this._changeOpenState(panel, !panel.isOpen);\n    }\n  }\n\n  ngAfterContentChecked() {\n    // active id updates\n    if (isString(this.activeIds)) {\n      this.activeIds = this.activeIds.split(/\\s*,\\s*/);\n    } // update panels open states\n\n\n    this.panels.forEach(panel => {\n      panel.isOpen = !panel.disabled && this.activeIds.indexOf(panel.id) > -1;\n    }); // closeOthers updates\n\n    if (this.activeIds.length > 1 && this.closeOtherPanels) {\n      this._closeOthers(this.activeIds[0], false);\n\n      this._updateActiveIds();\n    } // Setup the initial classes here\n\n\n    this._ngZone.onStable.pipe(take(1)).subscribe(() => {\n      this.panels.forEach(panel => {\n        const panelElement = panel.panelDiv;\n\n        if (panelElement) {\n          if (!panel.initClassDone) {\n            panel.initClassDone = true;\n            ngbRunTransition(this._ngZone, panelElement, ngbCollapsingTransition, {\n              animation: false,\n              runningTransition: 'continue',\n              context: {\n                direction: panel.isOpen ? 'show' : 'hide'\n              }\n            });\n          }\n        } else {\n          // Classes must be initialized next time it will be in the dom\n          panel.initClassDone = false;\n        }\n      });\n    });\n  }\n\n  _changeOpenState(panel, nextState) {\n    if (panel != null && !panel.disabled && panel.isOpen !== nextState) {\n      let defaultPrevented = false;\n      this.panelChange.emit({\n        panelId: panel.id,\n        nextState: nextState,\n        preventDefault: () => {\n          defaultPrevented = true;\n        }\n      });\n\n      if (!defaultPrevented) {\n        panel.isOpen = nextState;\n        panel.transitionRunning = true;\n\n        if (nextState && this.closeOtherPanels) {\n          this._closeOthers(panel.id);\n        }\n\n        this._updateActiveIds();\n\n        this._runTransitions(this.animation);\n      }\n    }\n  }\n\n  _closeOthers(panelId, enableTransition = true) {\n    this.panels.forEach(panel => {\n      if (panel.id !== panelId && panel.isOpen) {\n        panel.isOpen = false;\n        panel.transitionRunning = enableTransition;\n      }\n    });\n  }\n\n  _findPanelById(panelId) {\n    return this.panels.find(p => p.id === panelId) || null;\n  }\n\n  _updateActiveIds() {\n    this.activeIds = this.panels.filter(panel => panel.isOpen && !panel.disabled).map(panel => panel.id);\n  }\n\n  _runTransitions(animation) {\n    // detectChanges is performed to ensure that all panels are in the dom (via transitionRunning = true)\n    // before starting the animation\n    this._changeDetector.detectChanges();\n\n    this.panels.forEach(panel => {\n      // When panel.transitionRunning is true, the transition needs to be started OR reversed,\n      // The direction (show or hide) is choosen by each panel.isOpen state\n      if (panel.transitionRunning) {\n        const panelElement = panel.panelDiv;\n        ngbRunTransition(this._ngZone, panelElement, ngbCollapsingTransition, {\n          animation,\n          runningTransition: 'stop',\n          context: {\n            direction: panel.isOpen ? 'show' : 'hide'\n          }\n        }).subscribe(() => {\n          panel.transitionRunning = false;\n          const {\n            id\n          } = panel;\n\n          if (panel.isOpen) {\n            panel.shown.emit();\n            this.shown.emit(id);\n          } else {\n            panel.hidden.emit();\n            this.hidden.emit(id);\n          }\n        });\n      }\n    });\n  }\n\n}\n\nNgbAccordion.ɵfac = function NgbAccordion_Factory(t) {\n  return new (t || NgbAccordion)(i0.ɵɵdirectiveInject(NgbAccordionConfig), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\n\nNgbAccordion.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NgbAccordion,\n  selectors: [[\"ngb-accordion\"]],\n  contentQueries: function NgbAccordion_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, NgbPanel, 4);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.panels = _t);\n    }\n  },\n  hostAttrs: [\"role\", \"tablist\", 1, \"accordion\"],\n  hostVars: 1,\n  hostBindings: function NgbAccordion_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵattribute(\"aria-multiselectable\", !ctx.closeOtherPanels);\n    }\n  },\n  inputs: {\n    animation: \"animation\",\n    activeIds: \"activeIds\",\n    closeOtherPanels: [\"closeOthers\", \"closeOtherPanels\"],\n    destroyOnHide: \"destroyOnHide\",\n    type: \"type\"\n  },\n  outputs: {\n    panelChange: \"panelChange\",\n    shown: \"shown\",\n    hidden: \"hidden\"\n  },\n  exportAs: [\"ngbAccordion\"],\n  decls: 3,\n  vars: 1,\n  consts: [[\"ngbPanelHeader\", \"\"], [\"t\", \"\"], [\"ngFor\", \"\", 3, \"ngForOf\"], [1, \"accordion-button\", 3, \"ngbPanelToggle\"], [3, \"ngTemplateOutlet\"], [\"role\", \"tab\", 3, \"id\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [\"role\", \"tabpanel\", 3, \"id\", \"ngbRef\", 4, \"ngIf\"], [\"role\", \"tabpanel\", 3, \"id\", \"ngbRef\"], [1, \"accordion-body\"]],\n  template: function NgbAccordion_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, NgbAccordion_ng_template_0_Template, 3, 3, \"ng-template\", 0, 1, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵtemplate(2, NgbAccordion_ng_template_2_Template, 4, 11, \"ng-template\", 2);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.panels);\n    }\n  },\n  directives: function () {\n    return [NgbPanelHeader, NgbPanelToggle, i2.NgTemplateOutlet, i2.NgForOf, i2.NgIf, NgbRefDirective];\n  },\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbAccordion, [{\n    type: Component,\n    args: [{\n      selector: 'ngb-accordion',\n      exportAs: 'ngbAccordion',\n      encapsulation: ViewEncapsulation.None,\n      host: {\n        'class': 'accordion',\n        'role': 'tablist',\n        '[attr.aria-multiselectable]': '!closeOtherPanels'\n      },\n      template: `\n    <ng-template #t ngbPanelHeader let-panel>\n      <button class=\"accordion-button\" [ngbPanelToggle]=\"panel\">\n        {{panel.title}}<ng-template [ngTemplateOutlet]=\"panel.titleTpl?.templateRef\"></ng-template>\n      </button>\n    </ng-template>\n    <ng-template ngFor let-panel [ngForOf]=\"panels\">\n      <div [class]=\"'accordion-item ' + (panel.cardClass || '')\">\n        <div role=\"tab\" id=\"{{panel.id}}-header\" [class]=\"'accordion-header ' + (panel.type ? 'bg-'+panel.type: type ? 'bg-'+type : '')\">\n          <ng-template [ngTemplateOutlet]=\"panel.headerTpl?.templateRef || t\"\n                       [ngTemplateOutletContext]=\"{$implicit: panel, opened: panel.isOpen}\"></ng-template>\n        </div>\n        <div id=\"{{panel.id}}\" (ngbRef)=\"panel.panelDiv = $event\" role=\"tabpanel\" [attr.aria-labelledby]=\"panel.id + '-header'\"\n             *ngIf=\"!destroyOnHide || panel.isOpen || panel.transitionRunning\">\n          <div class=\"accordion-body\">\n            <ng-template [ngTemplateOutlet]=\"panel.contentTpl?.templateRef || null\"></ng-template>\n          </div>\n        </div>\n      </div>\n    </ng-template>\n  `\n    }]\n  }], function () {\n    return [{\n      type: NgbAccordionConfig\n    }, {\n      type: i0.NgZone\n    }, {\n      type: i0.ChangeDetectorRef\n    }];\n  }, {\n    panels: [{\n      type: ContentChildren,\n      args: [NgbPanel]\n    }],\n    animation: [{\n      type: Input\n    }],\n    activeIds: [{\n      type: Input\n    }],\n    closeOtherPanels: [{\n      type: Input,\n      args: ['closeOthers']\n    }],\n    destroyOnHide: [{\n      type: Input\n    }],\n    type: [{\n      type: Input\n    }],\n    panelChange: [{\n      type: Output\n    }],\n    shown: [{\n      type: Output\n    }],\n    hidden: [{\n      type: Output\n    }]\n  });\n})();\n/**\n * A directive to put on a button that toggles panel opening and closing.\n *\n * To be used inside the [`NgbPanelHeader`](#/components/accordion/api#NgbPanelHeader)\n *\n * @since 4.1.0\n */\n\n\nclass NgbPanelToggle {\n  constructor(accordion, panel) {\n    this.accordion = accordion;\n    this.panel = panel;\n  }\n\n  set ngbPanelToggle(panel) {\n    if (panel) {\n      this.panel = panel;\n    }\n  }\n\n}\n\nNgbPanelToggle.ɵfac = function NgbPanelToggle_Factory(t) {\n  return new (t || NgbPanelToggle)(i0.ɵɵdirectiveInject(NgbAccordion), i0.ɵɵdirectiveInject(NgbPanel, 9));\n};\n\nNgbPanelToggle.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: NgbPanelToggle,\n  selectors: [[\"button\", \"ngbPanelToggle\", \"\"]],\n  hostAttrs: [\"type\", \"button\"],\n  hostVars: 5,\n  hostBindings: function NgbPanelToggle_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"click\", function NgbPanelToggle_click_HostBindingHandler() {\n        return ctx.accordion.toggle(ctx.panel.id);\n      });\n    }\n\n    if (rf & 2) {\n      i0.ɵɵhostProperty(\"disabled\", ctx.panel.disabled);\n      i0.ɵɵattribute(\"aria-expanded\", ctx.panel.isOpen)(\"aria-controls\", ctx.panel.id);\n      i0.ɵɵclassProp(\"collapsed\", !ctx.panel.isOpen);\n    }\n  },\n  inputs: {\n    ngbPanelToggle: \"ngbPanelToggle\"\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbPanelToggle, [{\n    type: Directive,\n    args: [{\n      selector: 'button[ngbPanelToggle]',\n      host: {\n        'type': 'button',\n        '[disabled]': 'panel.disabled',\n        '[class.collapsed]': '!panel.isOpen',\n        '[attr.aria-expanded]': 'panel.isOpen',\n        '[attr.aria-controls]': 'panel.id',\n        '(click)': 'accordion.toggle(panel.id)'\n      }\n    }]\n  }], function () {\n    return [{\n      type: NgbAccordion\n    }, {\n      type: NgbPanel,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Host\n      }]\n    }];\n  }, {\n    ngbPanelToggle: [{\n      type: Input\n    }]\n  });\n})();\n\nconst NGB_ACCORDION_DIRECTIVES = [NgbAccordion, NgbPanel, NgbPanelTitle, NgbPanelContent, NgbPanelHeader, NgbPanelToggle];\n\nclass NgbAccordionModule {}\n\nNgbAccordionModule.ɵfac = function NgbAccordionModule_Factory(t) {\n  return new (t || NgbAccordionModule)();\n};\n\nNgbAccordionModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: NgbAccordionModule\n});\nNgbAccordionModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbAccordionModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [NgbRefDirective, ...NGB_ACCORDION_DIRECTIVES],\n      exports: NGB_ACCORDION_DIRECTIVES,\n      imports: [CommonModule]\n    }]\n  }], null, null);\n})();\n\nconst ngbAlertFadingTransition = ({\n  classList\n}) => {\n  classList.remove('show');\n};\n/**\n * A configuration service for the [NgbAlert](#/components/alert/api#NgbAlert) component.\n *\n * You can inject this service, typically in your root component, and customize its properties\n * to provide default values for all alerts used in the application.\n */\n\n\nclass NgbAlertConfig {\n  constructor(_ngbConfig) {\n    this._ngbConfig = _ngbConfig;\n    this.dismissible = true;\n    this.type = 'warning';\n  }\n\n  get animation() {\n    return this._animation === undefined ? this._ngbConfig.animation : this._animation;\n  }\n\n  set animation(animation) {\n    this._animation = animation;\n  }\n\n}\n\nNgbAlertConfig.ɵfac = function NgbAlertConfig_Factory(t) {\n  return new (t || NgbAlertConfig)(i0.ɵɵinject(NgbConfig));\n};\n\nNgbAlertConfig.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: NgbAlertConfig,\n  factory: NgbAlertConfig.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbAlertConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: NgbConfig\n    }];\n  }, null);\n})();\n/**\n * Alert is a component to provide contextual feedback messages for user.\n *\n * It supports several alert types and can be dismissed.\n */\n\n\nclass NgbAlert {\n  constructor(config, _renderer, _element, _zone) {\n    this._renderer = _renderer;\n    this._element = _element;\n    this._zone = _zone;\n    /**\n     * An event emitted when the close button is clicked. It has no payload and only relevant for dismissible alerts.\n     *\n     * @since 8.0.0\n     */\n\n    this.closed = new EventEmitter();\n    this.dismissible = config.dismissible;\n    this.type = config.type;\n    this.animation = config.animation;\n  }\n  /**\n   * Triggers alert closing programmatically (same as clicking on the close button (×)).\n   *\n   * The returned observable will emit and be completed once the closing transition has finished.\n   * If the animations are turned off this happens synchronously.\n   *\n   * Alternatively you could listen or subscribe to the `(closed)` output\n   *\n   * @since 8.0.0\n   */\n\n\n  close() {\n    const transition = ngbRunTransition(this._zone, this._element.nativeElement, ngbAlertFadingTransition, {\n      animation: this.animation,\n      runningTransition: 'continue'\n    });\n    transition.subscribe(() => this.closed.emit());\n    return transition;\n  }\n\n  ngOnChanges(changes) {\n    const typeChange = changes['type'];\n\n    if (typeChange && !typeChange.firstChange) {\n      this._renderer.removeClass(this._element.nativeElement, `alert-${typeChange.previousValue}`);\n\n      this._renderer.addClass(this._element.nativeElement, `alert-${typeChange.currentValue}`);\n    }\n  }\n\n  ngOnInit() {\n    this._renderer.addClass(this._element.nativeElement, `alert-${this.type}`);\n  }\n\n}\n\nNgbAlert.ɵfac = function NgbAlert_Factory(t) {\n  return new (t || NgbAlert)(i0.ɵɵdirectiveInject(NgbAlertConfig), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone));\n};\n\nNgbAlert.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NgbAlert,\n  selectors: [[\"ngb-alert\"]],\n  hostAttrs: [\"role\", \"alert\", 1, \"alert\", \"show\"],\n  hostVars: 4,\n  hostBindings: function NgbAlert_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"fade\", ctx.animation)(\"alert-dismissible\", ctx.dismissible);\n    }\n  },\n  inputs: {\n    animation: \"animation\",\n    dismissible: \"dismissible\",\n    type: \"type\"\n  },\n  outputs: {\n    closed: \"closed\"\n  },\n  exportAs: [\"ngbAlert\"],\n  features: [i0.ɵɵNgOnChangesFeature],\n  ngContentSelectors: _c3,\n  decls: 2,\n  vars: 1,\n  consts: function () {\n    let i18n_1;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @suppress {msgDescriptions}\n       */\n      const MSG__HOME_EDUARD_DESKTOP_COOKIE_DIALOGUE_ANGULAR_DOTNET_GOOGLE_ANALYTICS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2015_NG_BOOTSTRAP_MJS_2 = goog.getMsg(\"Close\");\n      i18n_1 = MSG__HOME_EDUARD_DESKTOP_COOKIE_DIALOGUE_ANGULAR_DOTNET_GOOGLE_ANALYTICS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2015_NG_BOOTSTRAP_MJS_2;\n    } else {\n      i18n_1 = $localize`:@@ngb.alert.close:Close`;\n    }\n\n    return [[\"type\", \"button\", \"class\", \"btn-close\", \"aria-label\", i18n_1, 3, \"click\", 4, \"ngIf\"], [\"type\", \"button\", \"aria-label\", i18n_1, 1, \"btn-close\", 3, \"click\"]];\n  },\n  template: function NgbAlert_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n      i0.ɵɵtemplate(1, NgbAlert_button_1_Template, 1, 0, \"button\", 0);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.dismissible);\n    }\n  },\n  directives: [i2.NgIf],\n  styles: [\"ngb-alert{display:block}\\n\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbAlert, [{\n    type: Component,\n    args: [{\n      selector: 'ngb-alert',\n      exportAs: 'ngbAlert',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      host: {\n        'role': 'alert',\n        'class': 'alert show',\n        '[class.fade]': 'animation',\n        '[class.alert-dismissible]': 'dismissible'\n      },\n      template: `\n    <ng-content></ng-content>\n    <button *ngIf=\"dismissible\" type=\"button\" class=\"btn-close\" aria-label=\"Close\" i18n-aria-label=\"@@ngb.alert.close\"\n      (click)=\"close()\">\n    </button>\n    `,\n      styles: [\"ngb-alert{display:block}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: NgbAlertConfig\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.NgZone\n    }];\n  }, {\n    animation: [{\n      type: Input\n    }],\n    dismissible: [{\n      type: Input\n    }],\n    type: [{\n      type: Input\n    }],\n    closed: [{\n      type: Output\n    }]\n  });\n})();\n\nclass NgbAlertModule {}\n\nNgbAlertModule.ɵfac = function NgbAlertModule_Factory(t) {\n  return new (t || NgbAlertModule)();\n};\n\nNgbAlertModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: NgbAlertModule\n});\nNgbAlertModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbAlertModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [NgbAlert],\n      exports: [NgbAlert],\n      imports: [CommonModule]\n    }]\n  }], null, null);\n})();\n/* eslint-disable */\n\n/**\n * @deprecated 12.0.0 Please use native Angular code instead\n */\n\n\nclass NgbButtonLabel {}\n\nNgbButtonLabel.ɵfac = function NgbButtonLabel_Factory(t) {\n  return new (t || NgbButtonLabel)();\n};\n\nNgbButtonLabel.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: NgbButtonLabel,\n  selectors: [[\"\", \"ngbButtonLabel\", \"\"]],\n  hostVars: 8,\n  hostBindings: function NgbButtonLabel_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"btn\", true)(\"active\", ctx.active)(\"disabled\", ctx.disabled)(\"focus\", ctx.focused);\n    }\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbButtonLabel, [{\n    type: Directive,\n    args: [{\n      selector: '[ngbButtonLabel]',\n      host: {\n        '[class.btn]': 'true',\n        '[class.active]': 'active',\n        '[class.disabled]': 'disabled',\n        '[class.focus]': 'focused'\n      }\n    }]\n  }], null, null);\n})();\n/* eslint-disable */\n\n/**\n * Allows to easily create Bootstrap-style checkbox buttons.\n *\n * Integrates with forms, so the value of a checked button is bound to the underlying form control\n * either in a reactive or template-driven way.\n *\n * @deprecated 12.0.0 Please use native Angular code instead\n */\n\n\nclass NgbCheckBox {\n  constructor(_label, _cd) {\n    this._label = _label;\n    this._cd = _cd;\n    /**\n     * If `true`, the checkbox button will be disabled\n     */\n\n    this.disabled = false;\n    /**\n     * The form control value when the checkbox is checked.\n     */\n\n    this.valueChecked = true;\n    /**\n     * The form control value when the checkbox is unchecked.\n     */\n\n    this.valueUnChecked = false;\n\n    this.onChange = _ => {};\n\n    this.onTouched = () => {};\n  }\n\n  set focused(isFocused) {\n    this._label.focused = isFocused;\n\n    if (!isFocused) {\n      this.onTouched();\n    }\n  }\n\n  onInputChange($event) {\n    const modelToPropagate = $event.target.checked ? this.valueChecked : this.valueUnChecked;\n    this.onChange(modelToPropagate);\n    this.onTouched();\n    this.writeValue(modelToPropagate);\n  }\n\n  registerOnChange(fn) {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn) {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(isDisabled) {\n    this.disabled = isDisabled;\n    this._label.disabled = isDisabled;\n  }\n\n  writeValue(value) {\n    this.checked = value === this.valueChecked;\n    this._label.active = this.checked; // label won't be updated, if it is inside the OnPush component when [ngModel] changes\n\n    this._cd.markForCheck();\n  }\n\n}\n\nNgbCheckBox.ɵfac = function NgbCheckBox_Factory(t) {\n  return new (t || NgbCheckBox)(i0.ɵɵdirectiveInject(NgbButtonLabel), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\n\nNgbCheckBox.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: NgbCheckBox,\n  selectors: [[\"\", \"ngbButton\", \"\", \"type\", \"checkbox\"]],\n  hostVars: 2,\n  hostBindings: function NgbCheckBox_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"change\", function NgbCheckBox_change_HostBindingHandler($event) {\n        return ctx.onInputChange($event);\n      })(\"focus\", function NgbCheckBox_focus_HostBindingHandler() {\n        return ctx.focused = true;\n      })(\"blur\", function NgbCheckBox_blur_HostBindingHandler() {\n        return ctx.focused = false;\n      });\n    }\n\n    if (rf & 2) {\n      i0.ɵɵhostProperty(\"checked\", ctx.checked)(\"disabled\", ctx.disabled);\n    }\n  },\n  inputs: {\n    disabled: \"disabled\",\n    valueChecked: \"valueChecked\",\n    valueUnChecked: \"valueUnChecked\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => NgbCheckBox),\n    multi: true\n  }])]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbCheckBox, [{\n    type: Directive,\n    args: [{\n      selector: '[ngbButton][type=checkbox]',\n      host: {\n        '[checked]': 'checked',\n        '[disabled]': 'disabled',\n        '(change)': 'onInputChange($event)',\n        '(focus)': 'focused = true',\n        '(blur)': 'focused = false'\n      },\n      providers: [{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => NgbCheckBox),\n        multi: true\n      }]\n    }]\n  }], function () {\n    return [{\n      type: NgbButtonLabel\n    }, {\n      type: i0.ChangeDetectorRef\n    }];\n  }, {\n    disabled: [{\n      type: Input\n    }],\n    valueChecked: [{\n      type: Input\n    }],\n    valueUnChecked: [{\n      type: Input\n    }]\n  });\n})();\n/* eslint-disable */\n\n\nlet nextId$3 = 0;\n/**\n * Allows to easily create Bootstrap-style radio buttons.\n *\n * Integrates with forms, so the value of a checked button is bound to the underlying form control\n * either in a reactive or template-driven way.\n *\n * @deprecated 12.0.0 Please use native Angular code instead\n */\n\nclass NgbRadioGroup {\n  constructor() {\n    this._radios = new Set();\n    this._value = null;\n    /**\n     * Name of the radio group applied to radio input elements.\n     *\n     * Will be applied to all radio input elements inside the group,\n     * unless [`NgbRadio`](#/components/buttons/api#NgbRadio)'s specify names themselves.\n     *\n     * If not provided, will be generated in the `ngb-radio-xx` format.\n     */\n\n    this.name = `ngb-radio-${nextId$3++}`;\n\n    this.onChange = _ => {};\n\n    this.onTouched = () => {};\n  }\n\n  get disabled() {\n    return this._disabled;\n  }\n\n  set disabled(isDisabled) {\n    this.setDisabledState(isDisabled);\n  }\n\n  onRadioChange(radio) {\n    this.writeValue(radio.value);\n    this.onChange(radio.value);\n  }\n\n  onRadioValueUpdate() {\n    this._updateRadiosValue();\n  }\n\n  register(radio) {\n    this._radios.add(radio);\n  }\n\n  registerOnChange(fn) {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn) {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(isDisabled) {\n    this._disabled = isDisabled;\n\n    this._updateRadiosDisabled();\n  }\n\n  unregister(radio) {\n    this._radios.delete(radio);\n  }\n\n  writeValue(value) {\n    this._value = value;\n\n    this._updateRadiosValue();\n  }\n\n  _updateRadiosValue() {\n    this._radios.forEach(radio => radio.updateValue(this._value));\n  }\n\n  _updateRadiosDisabled() {\n    this._radios.forEach(radio => radio.updateDisabled());\n  }\n\n}\n\nNgbRadioGroup.ɵfac = function NgbRadioGroup_Factory(t) {\n  return new (t || NgbRadioGroup)();\n};\n\nNgbRadioGroup.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: NgbRadioGroup,\n  selectors: [[\"\", \"ngbRadioGroup\", \"\"]],\n  hostAttrs: [\"role\", \"radiogroup\"],\n  inputs: {\n    name: \"name\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => NgbRadioGroup),\n    multi: true\n  }])]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbRadioGroup, [{\n    type: Directive,\n    args: [{\n      selector: '[ngbRadioGroup]',\n      host: {\n        'role': 'radiogroup'\n      },\n      providers: [{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => NgbRadioGroup),\n        multi: true\n      }]\n    }]\n  }], null, {\n    name: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * A directive that marks an input of type \"radio\" as a part of the\n * [`NgbRadioGroup`](#/components/buttons/api#NgbRadioGroup).\n *\n * @deprecated 12.0.0 Please use native Angular code instead\n */\n\n\nclass NgbRadio {\n  constructor(_group, _label, _renderer, _element, _cd) {\n    this._group = _group;\n    this._label = _label;\n    this._renderer = _renderer;\n    this._element = _element;\n    this._cd = _cd;\n    this._value = null;\n\n    this._group.register(this);\n\n    this.updateDisabled();\n  }\n  /**\n   * The form control value when current radio button is checked.\n   */\n\n\n  set value(value) {\n    this._value = value;\n    const stringValue = value ? value.toString() : '';\n\n    this._renderer.setProperty(this._element.nativeElement, 'value', stringValue);\n\n    this._group.onRadioValueUpdate();\n  }\n  /**\n   * If `true`, current radio button will be disabled.\n   */\n\n\n  set disabled(isDisabled) {\n    this._disabled = isDisabled !== false;\n    this.updateDisabled();\n  }\n\n  set focused(isFocused) {\n    if (this._label) {\n      this._label.focused = isFocused;\n    }\n\n    if (!isFocused) {\n      this._group.onTouched();\n    }\n  }\n\n  get checked() {\n    return this._checked;\n  }\n\n  get disabled() {\n    return this._group.disabled || this._disabled;\n  }\n\n  get value() {\n    return this._value;\n  }\n\n  get nameAttr() {\n    return this.name || this._group.name;\n  }\n\n  ngOnDestroy() {\n    this._group.unregister(this);\n  }\n\n  onChange() {\n    this._group.onRadioChange(this);\n  }\n\n  updateValue(value) {\n    // label won't be updated, if it is inside the OnPush component when [ngModel] changes\n    if (this.value !== value) {\n      this._cd.markForCheck();\n    }\n\n    this._checked = this.value === value;\n    this._label.active = this._checked;\n  }\n\n  updateDisabled() {\n    this._label.disabled = this.disabled;\n  }\n\n}\n\nNgbRadio.ɵfac = function NgbRadio_Factory(t) {\n  return new (t || NgbRadio)(i0.ɵɵdirectiveInject(NgbRadioGroup), i0.ɵɵdirectiveInject(NgbButtonLabel), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\n\nNgbRadio.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: NgbRadio,\n  selectors: [[\"\", \"ngbButton\", \"\", \"type\", \"radio\"]],\n  hostVars: 3,\n  hostBindings: function NgbRadio_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"change\", function NgbRadio_change_HostBindingHandler() {\n        return ctx.onChange();\n      })(\"focus\", function NgbRadio_focus_HostBindingHandler() {\n        return ctx.focused = true;\n      })(\"blur\", function NgbRadio_blur_HostBindingHandler() {\n        return ctx.focused = false;\n      });\n    }\n\n    if (rf & 2) {\n      i0.ɵɵhostProperty(\"checked\", ctx.checked)(\"disabled\", ctx.disabled)(\"name\", ctx.nameAttr);\n    }\n  },\n  inputs: {\n    name: \"name\",\n    value: \"value\",\n    disabled: \"disabled\"\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbRadio, [{\n    type: Directive,\n    args: [{\n      selector: '[ngbButton][type=radio]',\n      host: {\n        '[checked]': 'checked',\n        '[disabled]': 'disabled',\n        '[name]': 'nameAttr',\n        '(change)': 'onChange()',\n        '(focus)': 'focused = true',\n        '(blur)': 'focused = false'\n      }\n    }]\n  }], function () {\n    return [{\n      type: NgbRadioGroup\n    }, {\n      type: NgbButtonLabel\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.ChangeDetectorRef\n    }];\n  }, {\n    name: [{\n      type: Input\n    }],\n    value: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }]\n  });\n})();\n/* eslint-disable */\n\n\nconst NGB_BUTTON_DIRECTIVES = [NgbButtonLabel, NgbCheckBox, NgbRadioGroup, NgbRadio];\n/**\n * @deprecated 12.0.0 Please use native Angular code instead\n */\n\nclass NgbButtonsModule {}\n\nNgbButtonsModule.ɵfac = function NgbButtonsModule_Factory(t) {\n  return new (t || NgbButtonsModule)();\n};\n\nNgbButtonsModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: NgbButtonsModule\n});\nNgbButtonsModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbButtonsModule, [{\n    type: NgModule,\n    args: [{\n      declarations: NGB_BUTTON_DIRECTIVES,\n      exports: NGB_BUTTON_DIRECTIVES\n    }]\n  }], null, null);\n})();\n/**\n * Defines the carousel slide transition direction.\n */\n\n\nvar NgbSlideEventDirection;\n\n(function (NgbSlideEventDirection) {\n  NgbSlideEventDirection[\"START\"] = \"start\";\n  NgbSlideEventDirection[\"END\"] = \"end\";\n})(NgbSlideEventDirection || (NgbSlideEventDirection = {}));\n\nconst isBeingAnimated = ({\n  classList\n}) => {\n  return classList.contains('carousel-item-start') || classList.contains('carousel-item-end');\n};\n\nconst removeDirectionClasses = classList => {\n  classList.remove('carousel-item-start');\n  classList.remove('carousel-item-end');\n};\n\nconst removeClasses = classList => {\n  removeDirectionClasses(classList);\n  classList.remove('carousel-item-prev');\n  classList.remove('carousel-item-next');\n};\n\nconst ngbCarouselTransitionIn = (element, animation, {\n  direction\n}) => {\n  const {\n    classList\n  } = element;\n\n  if (!animation) {\n    removeDirectionClasses(classList);\n    removeClasses(classList);\n    classList.add('active');\n    return;\n  }\n\n  if (isBeingAnimated(element)) {\n    // Revert the transition\n    removeDirectionClasses(classList);\n  } else {\n    // For the 'in' transition, a 'pre-class' is applied to the element to ensure its visibility\n    classList.add('carousel-item-' + (direction === NgbSlideEventDirection.START ? 'next' : 'prev'));\n    reflow(element);\n    classList.add('carousel-item-' + direction);\n  }\n\n  return () => {\n    removeClasses(classList);\n    classList.add('active');\n  };\n};\n\nconst ngbCarouselTransitionOut = (element, animation, {\n  direction\n}) => {\n  const {\n    classList\n  } = element;\n\n  if (!animation) {\n    removeDirectionClasses(classList);\n    removeClasses(classList);\n    classList.remove('active');\n    return;\n  } //  direction is left or right, depending on the way the slide goes out.\n\n\n  if (isBeingAnimated(element)) {\n    // Revert the transition\n    removeDirectionClasses(classList);\n  } else {\n    classList.add('carousel-item-' + direction);\n  }\n\n  return () => {\n    removeClasses(classList);\n    classList.remove('active');\n  };\n};\n/**\n * A configuration service for the [NgbCarousel](#/components/carousel/api#NgbCarousel) component.\n *\n * You can inject this service, typically in your root component, and customize its properties\n * to provide default values for all carousels used in the application.\n */\n\n\nclass NgbCarouselConfig {\n  constructor(_ngbConfig) {\n    this._ngbConfig = _ngbConfig;\n    this.interval = 5000;\n    this.wrap = true;\n    this.keyboard = true;\n    this.pauseOnHover = true;\n    this.pauseOnFocus = true;\n    this.showNavigationArrows = true;\n    this.showNavigationIndicators = true;\n  }\n\n  get animation() {\n    return this._animation === undefined ? this._ngbConfig.animation : this._animation;\n  }\n\n  set animation(animation) {\n    this._animation = animation;\n  }\n\n}\n\nNgbCarouselConfig.ɵfac = function NgbCarouselConfig_Factory(t) {\n  return new (t || NgbCarouselConfig)(i0.ɵɵinject(NgbConfig));\n};\n\nNgbCarouselConfig.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: NgbCarouselConfig,\n  factory: NgbCarouselConfig.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbCarouselConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: NgbConfig\n    }];\n  }, null);\n})();\n\nlet nextId$2 = 0;\n/**\n * A directive that wraps the individual carousel slide.\n */\n\nclass NgbSlide {\n  constructor(tplRef) {\n    this.tplRef = tplRef;\n    /**\n     * Slide id that must be unique for the entire document.\n     *\n     * If not provided, will be generated in the `ngb-slide-xx` format.\n     */\n\n    this.id = `ngb-slide-${nextId$2++}`;\n    /**\n     * An event emitted when the slide transition is finished\n     *\n     * @since 8.0.0\n     */\n\n    this.slid = new EventEmitter();\n  }\n\n}\n\nNgbSlide.ɵfac = function NgbSlide_Factory(t) {\n  return new (t || NgbSlide)(i0.ɵɵdirectiveInject(i0.TemplateRef));\n};\n\nNgbSlide.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: NgbSlide,\n  selectors: [[\"ng-template\", \"ngbSlide\", \"\"]],\n  inputs: {\n    id: \"id\"\n  },\n  outputs: {\n    slid: \"slid\"\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbSlide, [{\n    type: Directive,\n    args: [{\n      selector: 'ng-template[ngbSlide]'\n    }]\n  }], function () {\n    return [{\n      type: i0.TemplateRef\n    }];\n  }, {\n    id: [{\n      type: Input\n    }],\n    slid: [{\n      type: Output\n    }]\n  });\n})();\n/**\n * Carousel is a component to easily create and control slideshows.\n *\n * Allows to set intervals, change the way user interacts with the slides and provides a programmatic API.\n */\n\n\nclass NgbCarousel {\n  constructor(config, _platformId, _ngZone, _cd, _container) {\n    this._platformId = _platformId;\n    this._ngZone = _ngZone;\n    this._cd = _cd;\n    this._container = _container;\n    this.NgbSlideEventSource = NgbSlideEventSource;\n    this._destroy$ = new Subject();\n    this._interval$ = new BehaviorSubject(0);\n    this._mouseHover$ = new BehaviorSubject(false);\n    this._focused$ = new BehaviorSubject(false);\n    this._pauseOnHover$ = new BehaviorSubject(false);\n    this._pauseOnFocus$ = new BehaviorSubject(false);\n    this._pause$ = new BehaviorSubject(false);\n    this._wrap$ = new BehaviorSubject(false);\n    /**\n     * An event emitted just before the slide transition starts.\n     *\n     * See [`NgbSlideEvent`](#/components/carousel/api#NgbSlideEvent) for payload details.\n     */\n\n    this.slide = new EventEmitter();\n    /**\n     * An event emitted right after the slide transition is completed.\n     *\n     * See [`NgbSlideEvent`](#/components/carousel/api#NgbSlideEvent) for payload details.\n     *\n     * @since 8.0.0\n     */\n\n    this.slid = new EventEmitter();\n    /*\n     * Keep the ids of the panels currently transitionning\n     * in order to allow only the transition revertion\n     */\n\n    this._transitionIds = null;\n    this.animation = config.animation;\n    this.interval = config.interval;\n    this.wrap = config.wrap;\n    this.keyboard = config.keyboard;\n    this.pauseOnHover = config.pauseOnHover;\n    this.pauseOnFocus = config.pauseOnFocus;\n    this.showNavigationArrows = config.showNavigationArrows;\n    this.showNavigationIndicators = config.showNavigationIndicators;\n  }\n  /**\n   * Time in milliseconds before the next slide is shown.\n   */\n\n\n  set interval(value) {\n    this._interval$.next(value);\n  }\n\n  get interval() {\n    return this._interval$.value;\n  }\n  /**\n   * If `true`, will 'wrap' the carousel by switching from the last slide back to the first.\n   */\n\n\n  set wrap(value) {\n    this._wrap$.next(value);\n  }\n\n  get wrap() {\n    return this._wrap$.value;\n  }\n  /**\n   * If `true`, will pause slide switching when mouse cursor hovers the slide.\n   *\n   * @since 2.2.0\n   */\n\n\n  set pauseOnHover(value) {\n    this._pauseOnHover$.next(value);\n  }\n\n  get pauseOnHover() {\n    return this._pauseOnHover$.value;\n  }\n  /**\n   * If `true`, will pause slide switching when the focus is inside the carousel.\n   */\n\n\n  set pauseOnFocus(value) {\n    this._pauseOnFocus$.next(value);\n  }\n\n  get pauseOnFocus() {\n    return this._pauseOnFocus$.value;\n  }\n\n  set mouseHover(value) {\n    this._mouseHover$.next(value);\n  }\n\n  get mouseHover() {\n    return this._mouseHover$.value;\n  }\n\n  set focused(value) {\n    this._focused$.next(value);\n  }\n\n  get focused() {\n    return this._focused$.value;\n  }\n\n  arrowLeft() {\n    this.focus();\n    this.prev(NgbSlideEventSource.ARROW_LEFT);\n  }\n\n  arrowRight() {\n    this.focus();\n    this.next(NgbSlideEventSource.ARROW_RIGHT);\n  }\n\n  ngAfterContentInit() {\n    // setInterval() doesn't play well with SSR and protractor,\n    // so we should run it in the browser and outside Angular\n    if (isPlatformBrowser(this._platformId)) {\n      this._ngZone.runOutsideAngular(() => {\n        const hasNextSlide$ = combineLatest([this.slide.pipe(map(slideEvent => slideEvent.current), startWith(this.activeId)), this._wrap$, this.slides.changes.pipe(startWith(null))]).pipe(map(([currentSlideId, wrap]) => {\n          const slideArr = this.slides.toArray();\n\n          const currentSlideIdx = this._getSlideIdxById(currentSlideId);\n\n          return wrap ? slideArr.length > 1 : currentSlideIdx < slideArr.length - 1;\n        }), distinctUntilChanged());\n        combineLatest([this._pause$, this._pauseOnHover$, this._mouseHover$, this._pauseOnFocus$, this._focused$, this._interval$, hasNextSlide$]).pipe(map(([pause, pauseOnHover, mouseHover, pauseOnFocus, focused, interval, hasNextSlide]) => pause || pauseOnHover && mouseHover || pauseOnFocus && focused || !hasNextSlide ? 0 : interval), distinctUntilChanged(), switchMap(interval => interval > 0 ? timer(interval, interval) : NEVER), takeUntil(this._destroy$)).subscribe(() => this._ngZone.run(() => this.next(NgbSlideEventSource.TIMER)));\n      });\n    }\n\n    this.slides.changes.pipe(takeUntil(this._destroy$)).subscribe(() => {\n      var _a;\n\n      (_a = this._transitionIds) === null || _a === void 0 ? void 0 : _a.forEach(id => ngbCompleteTransition(this._getSlideElement(id)));\n      this._transitionIds = null;\n\n      this._cd.markForCheck(); // The following code need to be done asynchronously, after the dom becomes stable,\n      // otherwise all changes will be undone.\n\n\n      this._ngZone.onStable.pipe(take(1)).subscribe(() => {\n        for (const {\n          id\n        } of this.slides) {\n          const element = this._getSlideElement(id);\n\n          if (id === this.activeId) {\n            element.classList.add('active');\n          } else {\n            element.classList.remove('active');\n          }\n        }\n      });\n    });\n  }\n\n  ngAfterContentChecked() {\n    let activeSlide = this._getSlideById(this.activeId);\n\n    this.activeId = activeSlide ? activeSlide.id : this.slides.length ? this.slides.first.id : '';\n  }\n\n  ngAfterViewInit() {\n    // Initialize the 'active' class (not managed by the template)\n    if (this.activeId) {\n      const element = this._getSlideElement(this.activeId);\n\n      if (element) {\n        element.classList.add('active');\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    this._destroy$.next();\n  }\n  /**\n   * Navigates to a slide with the specified identifier.\n   */\n\n\n  select(slideId, source) {\n    this._cycleToSelected(slideId, this._getSlideEventDirection(this.activeId, slideId), source);\n  }\n  /**\n   * Navigates to the previous slide.\n   */\n\n\n  prev(source) {\n    this._cycleToSelected(this._getPrevSlide(this.activeId), NgbSlideEventDirection.END, source);\n  }\n  /**\n   * Navigates to the next slide.\n   */\n\n\n  next(source) {\n    this._cycleToSelected(this._getNextSlide(this.activeId), NgbSlideEventDirection.START, source);\n  }\n  /**\n   * Pauses cycling through the slides.\n   */\n\n\n  pause() {\n    this._pause$.next(true);\n  }\n  /**\n   * Restarts cycling through the slides from start to end.\n   */\n\n\n  cycle() {\n    this._pause$.next(false);\n  }\n  /**\n   * Set the focus on the carousel.\n   */\n\n\n  focus() {\n    this._container.nativeElement.focus();\n  }\n\n  _cycleToSelected(slideIdx, direction, source) {\n    const transitionIds = this._transitionIds;\n\n    if (transitionIds && (transitionIds[0] !== slideIdx || transitionIds[1] !== this.activeId)) {\n      // Revert prevented\n      return;\n    }\n\n    let selectedSlide = this._getSlideById(slideIdx);\n\n    if (selectedSlide && selectedSlide.id !== this.activeId) {\n      this._transitionIds = [this.activeId, slideIdx];\n      this.slide.emit({\n        prev: this.activeId,\n        current: selectedSlide.id,\n        direction: direction,\n        paused: this._pause$.value,\n        source\n      });\n      const options = {\n        animation: this.animation,\n        runningTransition: 'stop',\n        context: {\n          direction\n        }\n      };\n      const transitions = [];\n\n      const activeSlide = this._getSlideById(this.activeId);\n\n      if (activeSlide) {\n        const activeSlideTransition = ngbRunTransition(this._ngZone, this._getSlideElement(activeSlide.id), ngbCarouselTransitionOut, options);\n        activeSlideTransition.subscribe(() => {\n          activeSlide.slid.emit({\n            isShown: false,\n            direction,\n            source\n          });\n        });\n        transitions.push(activeSlideTransition);\n      }\n\n      const previousId = this.activeId;\n      this.activeId = selectedSlide.id;\n\n      const nextSlide = this._getSlideById(this.activeId);\n\n      const transition = ngbRunTransition(this._ngZone, this._getSlideElement(selectedSlide.id), ngbCarouselTransitionIn, options);\n      transition.subscribe(() => {\n        nextSlide === null || nextSlide === void 0 ? void 0 : nextSlide.slid.emit({\n          isShown: true,\n          direction,\n          source\n        });\n      });\n      transitions.push(transition);\n      zip(...transitions).pipe(take(1)).subscribe(() => {\n        this._transitionIds = null;\n        this.slid.emit({\n          prev: previousId,\n          current: selectedSlide.id,\n          direction: direction,\n          paused: this._pause$.value,\n          source\n        });\n      });\n    } // we get here after the interval fires or any external API call like next(), prev() or select()\n\n\n    this._cd.markForCheck();\n  }\n\n  _getSlideEventDirection(currentActiveSlideId, nextActiveSlideId) {\n    const currentActiveSlideIdx = this._getSlideIdxById(currentActiveSlideId);\n\n    const nextActiveSlideIdx = this._getSlideIdxById(nextActiveSlideId);\n\n    return currentActiveSlideIdx > nextActiveSlideIdx ? NgbSlideEventDirection.END : NgbSlideEventDirection.START;\n  }\n\n  _getSlideById(slideId) {\n    return this.slides.find(slide => slide.id === slideId) || null;\n  }\n\n  _getSlideIdxById(slideId) {\n    const slide = this._getSlideById(slideId);\n\n    return slide != null ? this.slides.toArray().indexOf(slide) : -1;\n  }\n\n  _getNextSlide(currentSlideId) {\n    const slideArr = this.slides.toArray();\n\n    const currentSlideIdx = this._getSlideIdxById(currentSlideId);\n\n    const isLastSlide = currentSlideIdx === slideArr.length - 1;\n    return isLastSlide ? this.wrap ? slideArr[0].id : slideArr[slideArr.length - 1].id : slideArr[currentSlideIdx + 1].id;\n  }\n\n  _getPrevSlide(currentSlideId) {\n    const slideArr = this.slides.toArray();\n\n    const currentSlideIdx = this._getSlideIdxById(currentSlideId);\n\n    const isFirstSlide = currentSlideIdx === 0;\n    return isFirstSlide ? this.wrap ? slideArr[slideArr.length - 1].id : slideArr[0].id : slideArr[currentSlideIdx - 1].id;\n  }\n\n  _getSlideElement(slideId) {\n    return this._container.nativeElement.querySelector(`#slide-${slideId}`);\n  }\n\n}\n\nNgbCarousel.ɵfac = function NgbCarousel_Factory(t) {\n  return new (t || NgbCarousel)(i0.ɵɵdirectiveInject(NgbCarouselConfig), i0.ɵɵdirectiveInject(PLATFORM_ID), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.ElementRef));\n};\n\nNgbCarousel.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NgbCarousel,\n  selectors: [[\"ngb-carousel\"]],\n  contentQueries: function NgbCarousel_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, NgbSlide, 4);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.slides = _t);\n    }\n  },\n  hostAttrs: [\"tabIndex\", \"0\", 1, \"carousel\", \"slide\"],\n  hostVars: 3,\n  hostBindings: function NgbCarousel_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"keydown.arrowLeft\", function NgbCarousel_keydown_arrowLeft_HostBindingHandler() {\n        return ctx.keyboard && ctx.arrowLeft();\n      })(\"keydown.arrowRight\", function NgbCarousel_keydown_arrowRight_HostBindingHandler() {\n        return ctx.keyboard && ctx.arrowRight();\n      })(\"mouseenter\", function NgbCarousel_mouseenter_HostBindingHandler() {\n        return ctx.mouseHover = true;\n      })(\"mouseleave\", function NgbCarousel_mouseleave_HostBindingHandler() {\n        return ctx.mouseHover = false;\n      })(\"focusin\", function NgbCarousel_focusin_HostBindingHandler() {\n        return ctx.focused = true;\n      })(\"focusout\", function NgbCarousel_focusout_HostBindingHandler() {\n        return ctx.focused = false;\n      });\n    }\n\n    if (rf & 2) {\n      i0.ɵɵattribute(\"aria-activedescendant\", \"slide-\" + ctx.activeId);\n      i0.ɵɵstyleProp(\"display\", \"block\");\n    }\n  },\n  inputs: {\n    animation: \"animation\",\n    activeId: \"activeId\",\n    interval: \"interval\",\n    wrap: \"wrap\",\n    keyboard: \"keyboard\",\n    pauseOnHover: \"pauseOnHover\",\n    pauseOnFocus: \"pauseOnFocus\",\n    showNavigationArrows: \"showNavigationArrows\",\n    showNavigationIndicators: \"showNavigationIndicators\"\n  },\n  outputs: {\n    slide: \"slide\",\n    slid: \"slid\"\n  },\n  exportAs: [\"ngbCarousel\"],\n  decls: 6,\n  vars: 6,\n  consts: function () {\n    let i18n_4;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc Currently selected slide number read by screen reader\n       */\n      const MSG__HOME_EDUARD_DESKTOP_COOKIE_DIALOGUE_ANGULAR_DOTNET_GOOGLE_ANALYTICS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2015_NG_BOOTSTRAP_MJS__5 = goog.getMsg(\" Slide {$interpolation} of {$interpolation_1} \", {\n        \"interpolation\": \"\\uFFFD0\\uFFFD\",\n        \"interpolation_1\": \"\\uFFFD1\\uFFFD\"\n      });\n      i18n_4 = MSG__HOME_EDUARD_DESKTOP_COOKIE_DIALOGUE_ANGULAR_DOTNET_GOOGLE_ANALYTICS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2015_NG_BOOTSTRAP_MJS__5;\n    } else {\n      i18n_4 = $localize`:Currently selected slide number read by screen reader@@ngb.carousel.slide-number: Slide ${\"\\uFFFD0\\uFFFD\"}:INTERPOLATION: of ${\"\\uFFFD1\\uFFFD\"}:INTERPOLATION_1: `;\n    }\n\n    let i18n_6;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @suppress {msgDescriptions}\n       */\n      const MSG__HOME_EDUARD_DESKTOP_COOKIE_DIALOGUE_ANGULAR_DOTNET_GOOGLE_ANALYTICS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2015_NG_BOOTSTRAP_MJS__7 = goog.getMsg(\"Previous\");\n      i18n_6 = MSG__HOME_EDUARD_DESKTOP_COOKIE_DIALOGUE_ANGULAR_DOTNET_GOOGLE_ANALYTICS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2015_NG_BOOTSTRAP_MJS__7;\n    } else {\n      i18n_6 = $localize`:@@ngb.carousel.previous:Previous`;\n    }\n\n    let i18n_8;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @suppress {msgDescriptions}\n       */\n      const MSG__HOME_EDUARD_DESKTOP_COOKIE_DIALOGUE_ANGULAR_DOTNET_GOOGLE_ANALYTICS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2015_NG_BOOTSTRAP_MJS__9 = goog.getMsg(\"Next\");\n      i18n_8 = MSG__HOME_EDUARD_DESKTOP_COOKIE_DIALOGUE_ANGULAR_DOTNET_GOOGLE_ANALYTICS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2015_NG_BOOTSTRAP_MJS__9;\n    } else {\n      i18n_8 = $localize`:@@ngb.carousel.next:Next`;\n    }\n\n    return [[\"role\", \"tablist\", 1, \"carousel-indicators\"], [\"type\", \"button\", \"data-bs-target\", \"\", \"role\", \"tab\", 3, \"active\", \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"carousel-inner\"], [\"class\", \"carousel-item\", \"role\", \"tabpanel\", 3, \"id\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"carousel-control-prev\", \"type\", \"button\", 3, \"click\", 4, \"ngIf\"], [\"class\", \"carousel-control-next\", \"type\", \"button\", 3, \"click\", 4, \"ngIf\"], [\"type\", \"button\", \"data-bs-target\", \"\", \"role\", \"tab\", 3, \"click\"], [\"role\", \"tabpanel\", 1, \"carousel-item\", 3, \"id\"], [1, \"visually-hidden\"], i18n_4, [3, \"ngTemplateOutlet\"], [\"type\", \"button\", 1, \"carousel-control-prev\", 3, \"click\"], [\"aria-hidden\", \"true\", 1, \"carousel-control-prev-icon\"], i18n_6, [\"type\", \"button\", 1, \"carousel-control-next\", 3, \"click\"], [\"aria-hidden\", \"true\", 1, \"carousel-control-next-icon\"], i18n_8];\n  },\n  template: function NgbCarousel_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵtemplate(1, NgbCarousel_button_1_Template, 1, 5, \"button\", 1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"div\", 2);\n      i0.ɵɵtemplate(3, NgbCarousel_div_3_Template, 4, 4, \"div\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(4, NgbCarousel_button_4_Template, 4, 0, \"button\", 4);\n      i0.ɵɵtemplate(5, NgbCarousel_button_5_Template, 4, 0, \"button\", 5);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"visually-hidden\", !ctx.showNavigationIndicators);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.slides);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.slides);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showNavigationArrows);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showNavigationArrows);\n    }\n  },\n  directives: [i2.NgForOf, i2.NgTemplateOutlet, i2.NgIf],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbCarousel, [{\n    type: Component,\n    args: [{\n      selector: 'ngb-carousel',\n      exportAs: 'ngbCarousel',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      host: {\n        'class': 'carousel slide',\n        '[style.display]': '\"block\"',\n        'tabIndex': '0',\n        '(keydown.arrowLeft)': 'keyboard && arrowLeft()',\n        '(keydown.arrowRight)': 'keyboard && arrowRight()',\n        '(mouseenter)': 'mouseHover = true',\n        '(mouseleave)': 'mouseHover = false',\n        '(focusin)': 'focused = true',\n        '(focusout)': 'focused = false',\n        '[attr.aria-activedescendant]': `'slide-' + activeId`\n      },\n      template: `\n    <div class=\"carousel-indicators\" [class.visually-hidden]=\"!showNavigationIndicators\" role=\"tablist\">\n      <button type=\"button\" data-bs-target *ngFor=\"let slide of slides\" [class.active]=\"slide.id === activeId\"\n          role=\"tab\" [attr.aria-labelledby]=\"'slide-' + slide.id\" [attr.aria-controls]=\"'slide-' + slide.id\"\n          [attr.aria-selected]=\"slide.id === activeId\"\n          (click)=\"focus();select(slide.id, NgbSlideEventSource.INDICATOR);\"></button>\n    </div>\n    <div class=\"carousel-inner\">\n      <div *ngFor=\"let slide of slides; index as i; count as c\" class=\"carousel-item\" [id]=\"'slide-' + slide.id\" role=\"tabpanel\">\n        <span class=\"visually-hidden\" i18n=\"Currently selected slide number read by screen reader@@ngb.carousel.slide-number\">\n          Slide {{i + 1}} of {{c}}\n        </span>\n        <ng-template [ngTemplateOutlet]=\"slide.tplRef\"></ng-template>\n      </div>\n    </div>\n    <button class=\"carousel-control-prev\" type=\"button\" (click)=\"arrowLeft()\" *ngIf=\"showNavigationArrows\">\n      <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\n      <span class=\"visually-hidden\" i18n=\"@@ngb.carousel.previous\">Previous</span>\n    </button>\n    <button class=\"carousel-control-next\" type=\"button\" (click)=\"arrowRight()\" *ngIf=\"showNavigationArrows\">\n      <span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\n      <span class=\"visually-hidden\" i18n=\"@@ngb.carousel.next\">Next</span>\n    </button>\n  `\n    }]\n  }], function () {\n    return [{\n      type: NgbCarouselConfig\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }, {\n      type: i0.NgZone\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i0.ElementRef\n    }];\n  }, {\n    slides: [{\n      type: ContentChildren,\n      args: [NgbSlide]\n    }],\n    animation: [{\n      type: Input\n    }],\n    activeId: [{\n      type: Input\n    }],\n    interval: [{\n      type: Input\n    }],\n    wrap: [{\n      type: Input\n    }],\n    keyboard: [{\n      type: Input\n    }],\n    pauseOnHover: [{\n      type: Input\n    }],\n    pauseOnFocus: [{\n      type: Input\n    }],\n    showNavigationArrows: [{\n      type: Input\n    }],\n    showNavigationIndicators: [{\n      type: Input\n    }],\n    slide: [{\n      type: Output\n    }],\n    slid: [{\n      type: Output\n    }]\n  });\n})();\n\nvar NgbSlideEventSource;\n\n(function (NgbSlideEventSource) {\n  NgbSlideEventSource[\"TIMER\"] = \"timer\";\n  NgbSlideEventSource[\"ARROW_LEFT\"] = \"arrowLeft\";\n  NgbSlideEventSource[\"ARROW_RIGHT\"] = \"arrowRight\";\n  NgbSlideEventSource[\"INDICATOR\"] = \"indicator\";\n})(NgbSlideEventSource || (NgbSlideEventSource = {}));\n\nconst NGB_CAROUSEL_DIRECTIVES = [NgbCarousel, NgbSlide];\n\nclass NgbCarouselModule {}\n\nNgbCarouselModule.ɵfac = function NgbCarouselModule_Factory(t) {\n  return new (t || NgbCarouselModule)();\n};\n\nNgbCarouselModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: NgbCarouselModule\n});\nNgbCarouselModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbCarouselModule, [{\n    type: NgModule,\n    args: [{\n      declarations: NGB_CAROUSEL_DIRECTIVES,\n      exports: NGB_CAROUSEL_DIRECTIVES,\n      imports: [CommonModule]\n    }]\n  }], null, null);\n})();\n/**\n * A configuration service for the [NgbCollapse](#/components/collapse/api#NgbCollapse) component.\n *\n * You can inject this service, typically in your root component, and customize its properties\n * to provide default values for all collapses used in the application.\n */\n\n\nclass NgbCollapseConfig {\n  constructor(_ngbConfig) {\n    this._ngbConfig = _ngbConfig;\n  }\n\n  get animation() {\n    return this._animation === undefined ? this._ngbConfig.animation : this._animation;\n  }\n\n  set animation(animation) {\n    this._animation = animation;\n  }\n\n}\n\nNgbCollapseConfig.ɵfac = function NgbCollapseConfig_Factory(t) {\n  return new (t || NgbCollapseConfig)(i0.ɵɵinject(NgbConfig));\n};\n\nNgbCollapseConfig.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: NgbCollapseConfig,\n  factory: NgbCollapseConfig.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbCollapseConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: NgbConfig\n    }];\n  }, null);\n})();\n/**\n * A directive to provide a simple way of hiding and showing elements on the page.\n */\n\n\nclass NgbCollapse {\n  constructor(_element, config, _zone) {\n    this._element = _element;\n    this._zone = _zone;\n    /**\n     * If `true`, will collapse the element or show it otherwise.\n     */\n\n    this.collapsed = false;\n    this.ngbCollapseChange = new EventEmitter();\n    /**\n     * An event emitted when the collapse element is shown, after the transition. It has no payload.\n     *\n     * @since 8.0.0\n     */\n\n    this.shown = new EventEmitter();\n    /**\n     * An event emitted when the collapse element is hidden, after the transition. It has no payload.\n     *\n     * @since 8.0.0\n     */\n\n    this.hidden = new EventEmitter();\n    this.animation = config.animation;\n  }\n\n  ngOnInit() {\n    this._runTransition(this.collapsed, false);\n  }\n\n  ngOnChanges({\n    collapsed\n  }) {\n    if (!collapsed.firstChange) {\n      this._runTransitionWithEvents(this.collapsed, this.animation);\n    }\n  }\n  /**\n   * Triggers collapsing programmatically.\n   *\n   * If there is a collapsing transition running already, it will be reversed.\n   * If the animations are turned off this happens synchronously.\n   *\n   * @since 8.0.0\n   */\n\n\n  toggle(open = this.collapsed) {\n    this.collapsed = !open;\n    this.ngbCollapseChange.next(this.collapsed);\n\n    this._runTransitionWithEvents(this.collapsed, this.animation);\n  }\n\n  _runTransition(collapsed, animation) {\n    return ngbRunTransition(this._zone, this._element.nativeElement, ngbCollapsingTransition, {\n      animation,\n      runningTransition: 'stop',\n      context: {\n        direction: collapsed ? 'hide' : 'show'\n      }\n    });\n  }\n\n  _runTransitionWithEvents(collapsed, animation) {\n    this._runTransition(collapsed, animation).subscribe(() => {\n      if (collapsed) {\n        this.hidden.emit();\n      } else {\n        this.shown.emit();\n      }\n    });\n  }\n\n}\n\nNgbCollapse.ɵfac = function NgbCollapse_Factory(t) {\n  return new (t || NgbCollapse)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(NgbCollapseConfig), i0.ɵɵdirectiveInject(i0.NgZone));\n};\n\nNgbCollapse.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: NgbCollapse,\n  selectors: [[\"\", \"ngbCollapse\", \"\"]],\n  inputs: {\n    animation: \"animation\",\n    collapsed: [\"ngbCollapse\", \"collapsed\"]\n  },\n  outputs: {\n    ngbCollapseChange: \"ngbCollapseChange\",\n    shown: \"shown\",\n    hidden: \"hidden\"\n  },\n  exportAs: [\"ngbCollapse\"],\n  features: [i0.ɵɵNgOnChangesFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbCollapse, [{\n    type: Directive,\n    args: [{\n      selector: '[ngbCollapse]',\n      exportAs: 'ngbCollapse'\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: NgbCollapseConfig\n    }, {\n      type: i0.NgZone\n    }];\n  }, {\n    animation: [{\n      type: Input\n    }],\n    collapsed: [{\n      type: Input,\n      args: ['ngbCollapse']\n    }],\n    ngbCollapseChange: [{\n      type: Output\n    }],\n    shown: [{\n      type: Output\n    }],\n    hidden: [{\n      type: Output\n    }]\n  });\n})();\n\nclass NgbCollapseModule {}\n\nNgbCollapseModule.ɵfac = function NgbCollapseModule_Factory(t) {\n  return new (t || NgbCollapseModule)();\n};\n\nNgbCollapseModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: NgbCollapseModule\n});\nNgbCollapseModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbCollapseModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [NgbCollapse],\n      exports: [NgbCollapse]\n    }]\n  }], null, null);\n})();\n/**\n * A simple class that represents a date that datepicker also uses internally.\n *\n * It is the implementation of the `NgbDateStruct` interface that adds some convenience methods,\n * like `.equals()`, `.before()`, etc.\n *\n * All datepicker APIs consume `NgbDateStruct`, but return `NgbDate`.\n *\n * In many cases it is simpler to manipulate these objects together with\n * [`NgbCalendar`](#/components/datepicker/api#NgbCalendar) than native JS Dates.\n *\n * See the [date format overview](#/components/datepicker/overview#date-model) for more details.\n *\n * @since 3.0.0\n */\n\n\nclass NgbDate {\n  constructor(year, month, day) {\n    this.year = isInteger(year) ? year : null;\n    this.month = isInteger(month) ? month : null;\n    this.day = isInteger(day) ? day : null;\n  }\n  /**\n   * A **static method** that creates a new date object from the `NgbDateStruct`,\n   *\n   * ex. `NgbDate.from({year: 2000, month: 5, day: 1})`.\n   *\n   * If the `date` is already of `NgbDate` type, the method will return the same object.\n   */\n\n\n  static from(date) {\n    if (date instanceof NgbDate) {\n      return date;\n    }\n\n    return date ? new NgbDate(date.year, date.month, date.day) : null;\n  }\n  /**\n   * Checks if the current date is equal to another date.\n   */\n\n\n  equals(other) {\n    return other != null && this.year === other.year && this.month === other.month && this.day === other.day;\n  }\n  /**\n   * Checks if the current date is before another date.\n   */\n\n\n  before(other) {\n    if (!other) {\n      return false;\n    }\n\n    if (this.year === other.year) {\n      if (this.month === other.month) {\n        return this.day === other.day ? false : this.day < other.day;\n      } else {\n        return this.month < other.month;\n      }\n    } else {\n      return this.year < other.year;\n    }\n  }\n  /**\n   * Checks if the current date is after another date.\n   */\n\n\n  after(other) {\n    if (!other) {\n      return false;\n    }\n\n    if (this.year === other.year) {\n      if (this.month === other.month) {\n        return this.day === other.day ? false : this.day > other.day;\n      } else {\n        return this.month > other.month;\n      }\n    } else {\n      return this.year > other.year;\n    }\n  }\n\n}\n\nfunction isChangedDate(prev, next) {\n  return !dateComparator(prev, next);\n}\n\nfunction isChangedMonth(prev, next) {\n  return !prev && !next ? false : !prev || !next ? true : prev.year !== next.year || prev.month !== next.month;\n}\n\nfunction dateComparator(prev, next) {\n  return !prev && !next || !!prev && !!next && prev.equals(next);\n}\n\nfunction checkMinBeforeMax(minDate, maxDate) {\n  if (maxDate && minDate && maxDate.before(minDate)) {\n    throw new Error(`'maxDate' ${maxDate} should be greater than 'minDate' ${minDate}`);\n  }\n}\n\nfunction checkDateInRange(date, minDate, maxDate) {\n  if (date && minDate && date.before(minDate)) {\n    return minDate;\n  }\n\n  if (date && maxDate && date.after(maxDate)) {\n    return maxDate;\n  }\n\n  return date || null;\n}\n\nfunction isDateSelectable(date, state) {\n  const {\n    minDate,\n    maxDate,\n    disabled,\n    markDisabled\n  } = state; // clang-format off\n\n  return !(date === null || date === undefined || disabled || markDisabled && markDisabled(date, {\n    year: date.year,\n    month: date.month\n  }) || minDate && date.before(minDate) || maxDate && date.after(maxDate)); // clang-format on\n}\n\nfunction generateSelectBoxMonths(calendar, date, minDate, maxDate) {\n  if (!date) {\n    return [];\n  }\n\n  let months = calendar.getMonths(date.year);\n\n  if (minDate && date.year === minDate.year) {\n    const index = months.findIndex(month => month === minDate.month);\n    months = months.slice(index);\n  }\n\n  if (maxDate && date.year === maxDate.year) {\n    const index = months.findIndex(month => month === maxDate.month);\n    months = months.slice(0, index + 1);\n  }\n\n  return months;\n}\n\nfunction generateSelectBoxYears(date, minDate, maxDate) {\n  if (!date) {\n    return [];\n  }\n\n  const start = minDate ? Math.max(minDate.year, date.year - 500) : date.year - 10;\n  const end = maxDate ? Math.min(maxDate.year, date.year + 500) : date.year + 10;\n  const length = end - start + 1;\n  const numbers = Array(length);\n\n  for (let i = 0; i < length; i++) {\n    numbers[i] = start + i;\n  }\n\n  return numbers;\n}\n\nfunction nextMonthDisabled(calendar, date, maxDate) {\n  const nextDate = Object.assign(calendar.getNext(date, 'm'), {\n    day: 1\n  });\n  return maxDate != null && nextDate.after(maxDate);\n}\n\nfunction prevMonthDisabled(calendar, date, minDate) {\n  const prevDate = Object.assign(calendar.getPrev(date, 'm'), {\n    day: 1\n  });\n  return minDate != null && (prevDate.year === minDate.year && prevDate.month < minDate.month || prevDate.year < minDate.year && minDate.month === 1);\n}\n\nfunction buildMonths(calendar, date, state, i18n, force) {\n  const {\n    displayMonths,\n    months\n  } = state; // move old months to a temporary array\n\n  const monthsToReuse = months.splice(0, months.length); // generate new first dates, nullify or reuse months\n\n  const firstDates = Array.from({\n    length: displayMonths\n  }, (_, i) => {\n    const firstDate = Object.assign(calendar.getNext(date, 'm', i), {\n      day: 1\n    });\n    months[i] = null;\n\n    if (!force) {\n      const reusedIndex = monthsToReuse.findIndex(month => month.firstDate.equals(firstDate)); // move reused month back to months\n\n      if (reusedIndex !== -1) {\n        months[i] = monthsToReuse.splice(reusedIndex, 1)[0];\n      }\n    }\n\n    return firstDate;\n  }); // rebuild nullified months\n\n  firstDates.forEach((firstDate, i) => {\n    if (months[i] === null) {\n      months[i] = buildMonth(calendar, firstDate, state, i18n, monthsToReuse.shift() || {});\n    }\n  });\n  return months;\n}\n\nfunction buildMonth(calendar, date, state, i18n, month = {}) {\n  const {\n    dayTemplateData,\n    minDate,\n    maxDate,\n    firstDayOfWeek,\n    markDisabled,\n    outsideDays,\n    weekdayWidth,\n    weekdaysVisible\n  } = state;\n  const calendarToday = calendar.getToday();\n  month.firstDate = null;\n  month.lastDate = null;\n  month.number = date.month;\n  month.year = date.year;\n  month.weeks = month.weeks || [];\n  month.weekdays = month.weekdays || [];\n  date = getFirstViewDate(calendar, date, firstDayOfWeek); // clearing weekdays, if not visible\n\n  if (!weekdaysVisible) {\n    month.weekdays.length = 0;\n  } // month has weeks\n\n\n  for (let week = 0; week < calendar.getWeeksPerMonth(); week++) {\n    let weekObject = month.weeks[week];\n\n    if (!weekObject) {\n      weekObject = month.weeks[week] = {\n        number: 0,\n        days: [],\n        collapsed: true\n      };\n    }\n\n    const days = weekObject.days; // week has days\n\n    for (let day = 0; day < calendar.getDaysPerWeek(); day++) {\n      if (week === 0 && weekdaysVisible) {\n        month.weekdays[day] = i18n.getWeekdayLabel(calendar.getWeekday(date), weekdayWidth);\n      }\n\n      const newDate = new NgbDate(date.year, date.month, date.day);\n      const nextDate = calendar.getNext(newDate);\n      const ariaLabel = i18n.getDayAriaLabel(newDate); // marking date as disabled\n\n      let disabled = !!(minDate && newDate.before(minDate) || maxDate && newDate.after(maxDate));\n\n      if (!disabled && markDisabled) {\n        disabled = markDisabled(newDate, {\n          month: month.number,\n          year: month.year\n        });\n      } // today\n\n\n      let today = newDate.equals(calendarToday); // adding user-provided data to the context\n\n      let contextUserData = dayTemplateData ? dayTemplateData(newDate, {\n        month: month.number,\n        year: month.year\n      }) : undefined; // saving first date of the month\n\n      if (month.firstDate === null && newDate.month === month.number) {\n        month.firstDate = newDate;\n      } // saving last date of the month\n\n\n      if (newDate.month === month.number && nextDate.month !== month.number) {\n        month.lastDate = newDate;\n      }\n\n      let dayObject = days[day];\n\n      if (!dayObject) {\n        dayObject = days[day] = {};\n      }\n\n      dayObject.date = newDate;\n      dayObject.context = Object.assign(dayObject.context || {}, {\n        $implicit: newDate,\n        date: newDate,\n        data: contextUserData,\n        currentMonth: month.number,\n        currentYear: month.year,\n        disabled,\n        focused: false,\n        selected: false,\n        today\n      });\n      dayObject.tabindex = -1;\n      dayObject.ariaLabel = ariaLabel;\n      dayObject.hidden = false;\n      date = nextDate;\n    }\n\n    weekObject.number = calendar.getWeekNumber(days.map(day => day.date), firstDayOfWeek); // marking week as collapsed\n\n    weekObject.collapsed = outsideDays === 'collapsed' && days[0].date.month !== month.number && days[days.length - 1].date.month !== month.number;\n  }\n\n  return month;\n}\n\nfunction getFirstViewDate(calendar, date, firstDayOfWeek) {\n  const daysPerWeek = calendar.getDaysPerWeek();\n  const firstMonthDate = new NgbDate(date.year, date.month, 1);\n  const dayOfWeek = calendar.getWeekday(firstMonthDate) % daysPerWeek;\n  return calendar.getPrev(firstMonthDate, 'd', (daysPerWeek + dayOfWeek - firstDayOfWeek) % daysPerWeek);\n}\n\nfunction fromJSDate(jsDate) {\n  return new NgbDate(jsDate.getFullYear(), jsDate.getMonth() + 1, jsDate.getDate());\n}\n\nfunction toJSDate(date) {\n  const jsDate = new Date(date.year, date.month - 1, date.day, 12); // this is done avoid 30 -> 1930 conversion\n\n  if (!isNaN(jsDate.getTime())) {\n    jsDate.setFullYear(date.year);\n  }\n\n  return jsDate;\n}\n\nfunction NGB_DATEPICKER_CALENDAR_FACTORY() {\n  return new NgbCalendarGregorian();\n}\n/**\n * A service that represents the calendar used by the datepicker.\n *\n * The default implementation uses the Gregorian calendar. You can inject it in your own\n * implementations if necessary to simplify `NgbDate` calculations.\n */\n\n\nclass NgbCalendar {}\n\nNgbCalendar.ɵfac = function NgbCalendar_Factory(t) {\n  return new (t || NgbCalendar)();\n};\n\nNgbCalendar.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: NgbCalendar,\n  factory: function () {\n    return NGB_DATEPICKER_CALENDAR_FACTORY();\n  },\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbCalendar, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root',\n      useFactory: NGB_DATEPICKER_CALENDAR_FACTORY\n    }]\n  }], null, null);\n})();\n\nclass NgbCalendarGregorian extends NgbCalendar {\n  getDaysPerWeek() {\n    return 7;\n  }\n\n  getMonths() {\n    return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n  }\n\n  getWeeksPerMonth() {\n    return 6;\n  }\n\n  getNext(date, period = 'd', number = 1) {\n    let jsDate = toJSDate(date);\n    let checkMonth = true;\n    let expectedMonth = jsDate.getMonth();\n\n    switch (period) {\n      case 'y':\n        jsDate.setFullYear(jsDate.getFullYear() + number);\n        break;\n\n      case 'm':\n        expectedMonth += number;\n        jsDate.setMonth(expectedMonth);\n        expectedMonth = expectedMonth % 12;\n\n        if (expectedMonth < 0) {\n          expectedMonth = expectedMonth + 12;\n        }\n\n        break;\n\n      case 'd':\n        jsDate.setDate(jsDate.getDate() + number);\n        checkMonth = false;\n        break;\n\n      default:\n        return date;\n    }\n\n    if (checkMonth && jsDate.getMonth() !== expectedMonth) {\n      // this means the destination month has less days than the initial month\n      // let's go back to the end of the previous month:\n      jsDate.setDate(0);\n    }\n\n    return fromJSDate(jsDate);\n  }\n\n  getPrev(date, period = 'd', number = 1) {\n    return this.getNext(date, period, -number);\n  }\n\n  getWeekday(date) {\n    let jsDate = toJSDate(date);\n    let day = jsDate.getDay(); // in JS Date Sun=0, in ISO 8601 Sun=7\n\n    return day === 0 ? 7 : day;\n  }\n\n  getWeekNumber(week, firstDayOfWeek) {\n    // in JS Date Sun=0, in ISO 8601 Sun=7\n    if (firstDayOfWeek === 7) {\n      firstDayOfWeek = 0;\n    }\n\n    const thursdayIndex = (4 + 7 - firstDayOfWeek) % 7;\n    let date = week[thursdayIndex];\n    const jsDate = toJSDate(date);\n    jsDate.setDate(jsDate.getDate() + 4 - (jsDate.getDay() || 7)); // Thursday\n\n    const time = jsDate.getTime();\n    jsDate.setMonth(0); // Compare with Jan 1\n\n    jsDate.setDate(1);\n    return Math.floor(Math.round((time - jsDate.getTime()) / 86400000) / 7) + 1;\n  }\n\n  getToday() {\n    return fromJSDate(new Date());\n  }\n\n  isValid(date) {\n    if (!date || !isInteger(date.year) || !isInteger(date.month) || !isInteger(date.day)) {\n      return false;\n    } // year 0 doesn't exist in Gregorian calendar\n\n\n    if (date.year === 0) {\n      return false;\n    }\n\n    const jsDate = toJSDate(date);\n    return !isNaN(jsDate.getTime()) && jsDate.getFullYear() === date.year && jsDate.getMonth() + 1 === date.month && jsDate.getDate() === date.day;\n  }\n\n}\n\nNgbCalendarGregorian.ɵfac = /* @__PURE__ */function () {\n  let ɵNgbCalendarGregorian_BaseFactory;\n  return function NgbCalendarGregorian_Factory(t) {\n    return (ɵNgbCalendarGregorian_BaseFactory || (ɵNgbCalendarGregorian_BaseFactory = i0.ɵɵgetInheritedFactory(NgbCalendarGregorian)))(t || NgbCalendarGregorian);\n  };\n}();\n\nNgbCalendarGregorian.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: NgbCalendarGregorian,\n  factory: NgbCalendarGregorian.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbCalendarGregorian, [{\n    type: Injectable\n  }], null, null);\n})();\n\nfunction NGB_DATEPICKER_18N_FACTORY(locale) {\n  return new NgbDatepickerI18nDefault(locale);\n}\n/**\n * A service supplying i18n data to the datepicker component.\n *\n * The default implementation of this service uses the Angular locale and registered locale data for\n * weekdays and month names (as explained in the Angular i18n guide).\n *\n * It also provides a way to i18n data that depends on calendar calculations, like aria labels, day, week and year\n * numerals. For other static labels the datepicker uses the default Angular i18n.\n *\n * See the [i18n demo](#/components/datepicker/examples#i18n) and\n * [Hebrew calendar demo](#/components/datepicker/calendars#hebrew) on how to extend this class and define\n * a custom provider for i18n.\n */\n\n\nclass NgbDatepickerI18n {\n  /**\n   * Returns the text label to display above the day view.\n   *\n   * @since 9.1.0\n   */\n  getMonthLabel(date) {\n    return `${this.getMonthFullName(date.month, date.year)} ${this.getYearNumerals(date.year)}`;\n  }\n  /**\n   * Returns the textual representation of a day that is rendered in a day cell.\n   *\n   * @since 3.0.0\n   */\n\n\n  getDayNumerals(date) {\n    return `${date.day}`;\n  }\n  /**\n   * Returns the textual representation of a week number rendered by datepicker.\n   *\n   * @since 3.0.0\n   */\n\n\n  getWeekNumerals(weekNumber) {\n    return `${weekNumber}`;\n  }\n  /**\n   * Returns the textual representation of a year that is rendered in the datepicker year select box.\n   *\n   * @since 3.0.0\n   */\n\n\n  getYearNumerals(year) {\n    return `${year}`;\n  }\n  /**\n   * Returns the week label to display in the heading of the month view.\n   *\n   * @since 9.1.0\n   */\n\n\n  getWeekLabel() {\n    return '';\n  }\n\n}\n\nNgbDatepickerI18n.ɵfac = function NgbDatepickerI18n_Factory(t) {\n  return new (t || NgbDatepickerI18n)();\n};\n\nNgbDatepickerI18n.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: NgbDatepickerI18n,\n  factory: function NgbDatepickerI18n_Factory(t) {\n    let r = null;\n\n    if (t) {\n      r = new t();\n    } else {\n      r = NGB_DATEPICKER_18N_FACTORY(i0.ɵɵinject(LOCALE_ID));\n    }\n\n    return r;\n  },\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbDatepickerI18n, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root',\n      useFactory: NGB_DATEPICKER_18N_FACTORY,\n      deps: [LOCALE_ID]\n    }]\n  }], null, null);\n})();\n/**\n * A service providing default implementation for the datepicker i18n.\n * It can be used as a base implementation if necessary.\n *\n * @since 9.1.0\n */\n\n\nclass NgbDatepickerI18nDefault extends NgbDatepickerI18n {\n  constructor(_locale) {\n    super();\n    this._locale = _locale;\n    this._monthsShort = getLocaleMonthNames(_locale, FormStyle.Standalone, TranslationWidth.Abbreviated);\n    this._monthsFull = getLocaleMonthNames(_locale, FormStyle.Standalone, TranslationWidth.Wide);\n  }\n\n  getWeekdayLabel(weekday, width) {\n    const weekdaysStartingOnSunday = getLocaleDayNames(this._locale, FormStyle.Standalone, width === undefined ? TranslationWidth.Short : width);\n    const weekdays = weekdaysStartingOnSunday.map((day, index) => weekdaysStartingOnSunday[(index + 1) % 7]);\n    return weekdays[weekday - 1] || '';\n  }\n\n  getMonthShortName(month) {\n    return this._monthsShort[month - 1] || '';\n  }\n\n  getMonthFullName(month) {\n    return this._monthsFull[month - 1] || '';\n  }\n\n  getDayAriaLabel(date) {\n    const jsDate = new Date(date.year, date.month - 1, date.day);\n    return formatDate(jsDate, 'fullDate', this._locale);\n  }\n\n}\n\nNgbDatepickerI18nDefault.ɵfac = function NgbDatepickerI18nDefault_Factory(t) {\n  return new (t || NgbDatepickerI18nDefault)(i0.ɵɵinject(LOCALE_ID));\n};\n\nNgbDatepickerI18nDefault.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: NgbDatepickerI18nDefault,\n  factory: NgbDatepickerI18nDefault.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbDatepickerI18nDefault, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [LOCALE_ID]\n      }]\n    }];\n  }, null);\n})();\n\nclass NgbDatepickerService {\n  constructor(_calendar, _i18n) {\n    this._calendar = _calendar;\n    this._i18n = _i18n;\n    this._VALIDATORS = {\n      dayTemplateData: dayTemplateData => {\n        if (this._state.dayTemplateData !== dayTemplateData) {\n          return {\n            dayTemplateData\n          };\n        }\n      },\n      displayMonths: displayMonths => {\n        displayMonths = toInteger(displayMonths);\n\n        if (isInteger(displayMonths) && displayMonths > 0 && this._state.displayMonths !== displayMonths) {\n          return {\n            displayMonths\n          };\n        }\n      },\n      disabled: disabled => {\n        if (this._state.disabled !== disabled) {\n          return {\n            disabled\n          };\n        }\n      },\n      firstDayOfWeek: firstDayOfWeek => {\n        firstDayOfWeek = toInteger(firstDayOfWeek);\n\n        if (isInteger(firstDayOfWeek) && firstDayOfWeek >= 0 && this._state.firstDayOfWeek !== firstDayOfWeek) {\n          return {\n            firstDayOfWeek\n          };\n        }\n      },\n      focusVisible: focusVisible => {\n        if (this._state.focusVisible !== focusVisible && !this._state.disabled) {\n          return {\n            focusVisible\n          };\n        }\n      },\n      markDisabled: markDisabled => {\n        if (this._state.markDisabled !== markDisabled) {\n          return {\n            markDisabled\n          };\n        }\n      },\n      maxDate: date => {\n        const maxDate = this.toValidDate(date, null);\n\n        if (isChangedDate(this._state.maxDate, maxDate)) {\n          return {\n            maxDate\n          };\n        }\n      },\n      minDate: date => {\n        const minDate = this.toValidDate(date, null);\n\n        if (isChangedDate(this._state.minDate, minDate)) {\n          return {\n            minDate\n          };\n        }\n      },\n      navigation: navigation => {\n        if (this._state.navigation !== navigation) {\n          return {\n            navigation\n          };\n        }\n      },\n      outsideDays: outsideDays => {\n        if (this._state.outsideDays !== outsideDays) {\n          return {\n            outsideDays\n          };\n        }\n      },\n      weekdays: weekdays => {\n        const weekdayWidth = weekdays === true || weekdays === false ? TranslationWidth.Short : weekdays;\n        const weekdaysVisible = weekdays === true || weekdays === false ? weekdays : true;\n\n        if (this._state.weekdayWidth !== weekdayWidth || this._state.weekdaysVisible !== weekdaysVisible) {\n          return {\n            weekdayWidth,\n            weekdaysVisible\n          };\n        }\n      }\n    };\n    this._model$ = new Subject();\n    this._dateSelect$ = new Subject();\n    this._state = {\n      dayTemplateData: null,\n      markDisabled: null,\n      maxDate: null,\n      minDate: null,\n      disabled: false,\n      displayMonths: 1,\n      firstDate: null,\n      firstDayOfWeek: 1,\n      lastDate: null,\n      focusDate: null,\n      focusVisible: false,\n      months: [],\n      navigation: 'select',\n      outsideDays: 'visible',\n      prevDisabled: false,\n      nextDisabled: false,\n      selectedDate: null,\n      selectBoxes: {\n        years: [],\n        months: []\n      },\n      weekdayWidth: TranslationWidth.Short,\n      weekdaysVisible: true\n    };\n  }\n\n  get model$() {\n    return this._model$.pipe(filter(model => model.months.length > 0));\n  }\n\n  get dateSelect$() {\n    return this._dateSelect$.pipe(filter(date => date !== null));\n  }\n\n  set(options) {\n    let patch = Object.keys(options).map(key => this._VALIDATORS[key](options[key])).reduce((obj, part) => Object.assign(Object.assign({}, obj), part), {});\n\n    if (Object.keys(patch).length > 0) {\n      this._nextState(patch);\n    }\n  }\n\n  focus(date) {\n    const focusedDate = this.toValidDate(date, null);\n\n    if (focusedDate != null && !this._state.disabled && isChangedDate(this._state.focusDate, focusedDate)) {\n      this._nextState({\n        focusDate: date\n      });\n    }\n  }\n\n  focusSelect() {\n    if (isDateSelectable(this._state.focusDate, this._state)) {\n      this.select(this._state.focusDate, {\n        emitEvent: true\n      });\n    }\n  }\n\n  open(date) {\n    const firstDate = this.toValidDate(date, this._calendar.getToday());\n\n    if (firstDate != null && !this._state.disabled && (!this._state.firstDate || isChangedMonth(this._state.firstDate, firstDate))) {\n      this._nextState({\n        firstDate\n      });\n    }\n  }\n\n  select(date, options = {}) {\n    const selectedDate = this.toValidDate(date, null);\n\n    if (selectedDate != null && !this._state.disabled) {\n      if (isChangedDate(this._state.selectedDate, selectedDate)) {\n        this._nextState({\n          selectedDate\n        });\n      }\n\n      if (options.emitEvent && isDateSelectable(selectedDate, this._state)) {\n        this._dateSelect$.next(selectedDate);\n      }\n    }\n  }\n\n  toValidDate(date, defaultValue) {\n    const ngbDate = NgbDate.from(date);\n\n    if (defaultValue === undefined) {\n      defaultValue = this._calendar.getToday();\n    }\n\n    return this._calendar.isValid(ngbDate) ? ngbDate : defaultValue;\n  }\n\n  getMonth(struct) {\n    for (let month of this._state.months) {\n      if (struct.month === month.number && struct.year === month.year) {\n        return month;\n      }\n    }\n\n    throw new Error(`month ${struct.month} of year ${struct.year} not found`);\n  }\n\n  _nextState(patch) {\n    const newState = this._updateState(patch);\n\n    this._patchContexts(newState);\n\n    this._state = newState;\n\n    this._model$.next(this._state);\n  }\n\n  _patchContexts(state) {\n    const {\n      months,\n      displayMonths,\n      selectedDate,\n      focusDate,\n      focusVisible,\n      disabled,\n      outsideDays\n    } = state;\n    state.months.forEach(month => {\n      month.weeks.forEach(week => {\n        week.days.forEach(day => {\n          // patch focus flag\n          if (focusDate) {\n            day.context.focused = focusDate.equals(day.date) && focusVisible;\n          } // calculating tabindex\n\n\n          day.tabindex = !disabled && focusDate && day.date.equals(focusDate) && focusDate.month === month.number ? 0 : -1; // override context disabled\n\n          if (disabled === true) {\n            day.context.disabled = true;\n          } // patch selection flag\n\n\n          if (selectedDate !== undefined) {\n            day.context.selected = selectedDate !== null && selectedDate.equals(day.date);\n          } // visibility\n\n\n          if (month.number !== day.date.month) {\n            day.hidden = outsideDays === 'hidden' || outsideDays === 'collapsed' || displayMonths > 1 && day.date.after(months[0].firstDate) && day.date.before(months[displayMonths - 1].lastDate);\n          }\n        });\n      });\n    });\n  }\n\n  _updateState(patch) {\n    // patching fields\n    const state = Object.assign({}, this._state, patch);\n    let startDate = state.firstDate; // min/max dates changed\n\n    if ('minDate' in patch || 'maxDate' in patch) {\n      checkMinBeforeMax(state.minDate, state.maxDate);\n      state.focusDate = checkDateInRange(state.focusDate, state.minDate, state.maxDate);\n      state.firstDate = checkDateInRange(state.firstDate, state.minDate, state.maxDate);\n      startDate = state.focusDate;\n    } // disabled\n\n\n    if ('disabled' in patch) {\n      state.focusVisible = false;\n    } // initial rebuild via 'select()'\n\n\n    if ('selectedDate' in patch && this._state.months.length === 0) {\n      startDate = state.selectedDate;\n    } // terminate early if only focus visibility was changed\n\n\n    if ('focusVisible' in patch) {\n      return state;\n    } // focus date changed\n\n\n    if ('focusDate' in patch) {\n      state.focusDate = checkDateInRange(state.focusDate, state.minDate, state.maxDate);\n      startDate = state.focusDate; // nothing to rebuild if only focus changed and it is still visible\n\n      if (state.months.length !== 0 && state.focusDate && !state.focusDate.before(state.firstDate) && !state.focusDate.after(state.lastDate)) {\n        return state;\n      }\n    } // first date changed\n\n\n    if ('firstDate' in patch) {\n      state.firstDate = checkDateInRange(state.firstDate, state.minDate, state.maxDate);\n      startDate = state.firstDate;\n    } // rebuilding months\n\n\n    if (startDate) {\n      const forceRebuild = 'dayTemplateData' in patch || 'firstDayOfWeek' in patch || 'markDisabled' in patch || 'minDate' in patch || 'maxDate' in patch || 'disabled' in patch || 'outsideDays' in patch || 'weekdaysVisible' in patch;\n      const months = buildMonths(this._calendar, startDate, state, this._i18n, forceRebuild); // updating months and boundary dates\n\n      state.months = months;\n      state.firstDate = months[0].firstDate;\n      state.lastDate = months[months.length - 1].lastDate; // reset selected date if 'markDisabled' returns true\n\n      if ('selectedDate' in patch && !isDateSelectable(state.selectedDate, state)) {\n        state.selectedDate = null;\n      } // adjusting focus after months were built\n\n\n      if ('firstDate' in patch) {\n        if (!state.focusDate || state.focusDate.before(state.firstDate) || state.focusDate.after(state.lastDate)) {\n          state.focusDate = startDate;\n        }\n      } // adjusting months/years for the select box navigation\n\n\n      const yearChanged = !this._state.firstDate || this._state.firstDate.year !== state.firstDate.year;\n      const monthChanged = !this._state.firstDate || this._state.firstDate.month !== state.firstDate.month;\n\n      if (state.navigation === 'select') {\n        // years ->  boundaries (min/max were changed)\n        if ('minDate' in patch || 'maxDate' in patch || state.selectBoxes.years.length === 0 || yearChanged) {\n          state.selectBoxes.years = generateSelectBoxYears(state.firstDate, state.minDate, state.maxDate);\n        } // months -> when current year or boundaries change\n\n\n        if ('minDate' in patch || 'maxDate' in patch || state.selectBoxes.months.length === 0 || yearChanged) {\n          state.selectBoxes.months = generateSelectBoxMonths(this._calendar, state.firstDate, state.minDate, state.maxDate);\n        }\n      } else {\n        state.selectBoxes = {\n          years: [],\n          months: []\n        };\n      } // updating navigation arrows -> boundaries change (min/max) or month/year changes\n\n\n      if ((state.navigation === 'arrows' || state.navigation === 'select') && (monthChanged || yearChanged || 'minDate' in patch || 'maxDate' in patch || 'disabled' in patch)) {\n        state.prevDisabled = state.disabled || prevMonthDisabled(this._calendar, state.firstDate, state.minDate);\n        state.nextDisabled = state.disabled || nextMonthDisabled(this._calendar, state.lastDate, state.maxDate);\n      }\n    }\n\n    return state;\n  }\n\n}\n\nNgbDatepickerService.ɵfac = function NgbDatepickerService_Factory(t) {\n  return new (t || NgbDatepickerService)(i0.ɵɵinject(NgbCalendar), i0.ɵɵinject(NgbDatepickerI18n));\n};\n\nNgbDatepickerService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: NgbDatepickerService,\n  factory: NgbDatepickerService.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbDatepickerService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: NgbCalendar\n    }, {\n      type: NgbDatepickerI18n\n    }];\n  }, null);\n})(); // clang-format on\n\n\nvar NavigationEvent;\n\n(function (NavigationEvent) {\n  NavigationEvent[NavigationEvent[\"PREV\"] = 0] = \"PREV\";\n  NavigationEvent[NavigationEvent[\"NEXT\"] = 1] = \"NEXT\";\n})(NavigationEvent || (NavigationEvent = {}));\n/**\n * A configuration service for the [`NgbDatepicker`](#/components/datepicker/api#NgbDatepicker) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the datepickers used in the application.\n */\n\n\nclass NgbDatepickerConfig {\n  constructor() {\n    this.displayMonths = 1;\n    this.firstDayOfWeek = 1;\n    this.navigation = 'select';\n    this.outsideDays = 'visible';\n    this.showWeekNumbers = false;\n    this.weekdays = TranslationWidth.Short;\n  }\n\n}\n\nNgbDatepickerConfig.ɵfac = function NgbDatepickerConfig_Factory(t) {\n  return new (t || NgbDatepickerConfig)();\n};\n\nNgbDatepickerConfig.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: NgbDatepickerConfig,\n  factory: NgbDatepickerConfig.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbDatepickerConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\n\nfunction NGB_DATEPICKER_DATE_ADAPTER_FACTORY() {\n  return new NgbDateStructAdapter();\n}\n/**\n * An abstract service that does the conversion between the internal datepicker `NgbDateStruct` model and\n * any provided user date model `D`, ex. a string, a native date, etc.\n *\n * The adapter is used **only** for conversion when binding datepicker to a form control,\n * ex. `[(ngModel)]=\"userDateModel\"`. Here `userDateModel` can be of any type.\n *\n * The default datepicker implementation assumes we use `NgbDateStruct` as a user model.\n *\n * See the [date format overview](#/components/datepicker/overview#date-model) for more details\n * and the [custom adapter demo](#/components/datepicker/examples#adapter) for an example.\n */\n\n\nclass NgbDateAdapter {}\n\nNgbDateAdapter.ɵfac = function NgbDateAdapter_Factory(t) {\n  return new (t || NgbDateAdapter)();\n};\n\nNgbDateAdapter.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: NgbDateAdapter,\n  factory: function () {\n    return NGB_DATEPICKER_DATE_ADAPTER_FACTORY();\n  },\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbDateAdapter, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root',\n      useFactory: NGB_DATEPICKER_DATE_ADAPTER_FACTORY\n    }]\n  }], null, null);\n})();\n\nclass NgbDateStructAdapter extends NgbDateAdapter {\n  /**\n   * Converts a NgbDateStruct value into NgbDateStruct value\n   */\n  fromModel(date) {\n    return date && isInteger(date.year) && isInteger(date.month) && isInteger(date.day) ? {\n      year: date.year,\n      month: date.month,\n      day: date.day\n    } : null;\n  }\n  /**\n   * Converts a NgbDateStruct value into NgbDateStruct value\n   */\n\n\n  toModel(date) {\n    return date && isInteger(date.year) && isInteger(date.month) && isInteger(date.day) ? {\n      year: date.year,\n      month: date.month,\n      day: date.day\n    } : null;\n  }\n\n}\n\nNgbDateStructAdapter.ɵfac = /* @__PURE__ */function () {\n  let ɵNgbDateStructAdapter_BaseFactory;\n  return function NgbDateStructAdapter_Factory(t) {\n    return (ɵNgbDateStructAdapter_BaseFactory || (ɵNgbDateStructAdapter_BaseFactory = i0.ɵɵgetInheritedFactory(NgbDateStructAdapter)))(t || NgbDateStructAdapter);\n  };\n}();\n\nNgbDateStructAdapter.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: NgbDateStructAdapter,\n  factory: NgbDateStructAdapter.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbDateStructAdapter, [{\n    type: Injectable\n  }], null, null);\n})();\n\nclass NgbDatepickerDayView {\n  constructor(i18n) {\n    this.i18n = i18n;\n  }\n\n  isMuted() {\n    return !this.selected && (this.date.month !== this.currentMonth || this.disabled);\n  }\n\n}\n\nNgbDatepickerDayView.ɵfac = function NgbDatepickerDayView_Factory(t) {\n  return new (t || NgbDatepickerDayView)(i0.ɵɵdirectiveInject(NgbDatepickerI18n));\n};\n\nNgbDatepickerDayView.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NgbDatepickerDayView,\n  selectors: [[\"\", \"ngbDatepickerDayView\", \"\"]],\n  hostAttrs: [1, \"btn-light\"],\n  hostVars: 10,\n  hostBindings: function NgbDatepickerDayView_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"bg-primary\", ctx.selected)(\"text-white\", ctx.selected)(\"text-muted\", ctx.isMuted())(\"outside\", ctx.isMuted())(\"active\", ctx.focused);\n    }\n  },\n  inputs: {\n    currentMonth: \"currentMonth\",\n    date: \"date\",\n    disabled: \"disabled\",\n    focused: \"focused\",\n    selected: \"selected\"\n  },\n  attrs: _c10,\n  decls: 1,\n  vars: 1,\n  template: function NgbDatepickerDayView_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtext(0);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵtextInterpolate(ctx.i18n.getDayNumerals(ctx.date));\n    }\n  },\n  styles: [\"[ngbDatepickerDayView]{text-align:center;width:2rem;height:2rem;line-height:2rem;border-radius:.25rem;background:transparent}[ngbDatepickerDayView].outside{opacity:.5}\\n\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbDatepickerDayView, [{\n    type: Component,\n    args: [{\n      selector: '[ngbDatepickerDayView]',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      host: {\n        'class': 'btn-light',\n        '[class.bg-primary]': 'selected',\n        '[class.text-white]': 'selected',\n        '[class.text-muted]': 'isMuted()',\n        '[class.outside]': 'isMuted()',\n        '[class.active]': 'focused'\n      },\n      template: `{{ i18n.getDayNumerals(date) }}`,\n      styles: [\"[ngbDatepickerDayView]{text-align:center;width:2rem;height:2rem;line-height:2rem;border-radius:.25rem;background:transparent}[ngbDatepickerDayView].outside{opacity:.5}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: NgbDatepickerI18n\n    }];\n  }, {\n    currentMonth: [{\n      type: Input\n    }],\n    date: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    focused: [{\n      type: Input\n    }],\n    selected: [{\n      type: Input\n    }]\n  });\n})();\n\nclass NgbDatepickerNavigationSelect {\n  constructor(i18n, _renderer) {\n    this.i18n = i18n;\n    this._renderer = _renderer;\n    this.select = new EventEmitter();\n    this._month = -1;\n    this._year = -1;\n  }\n\n  changeMonth(month) {\n    this.select.emit(new NgbDate(this.date.year, toInteger(month), 1));\n  }\n\n  changeYear(year) {\n    this.select.emit(new NgbDate(toInteger(year), this.date.month, 1));\n  }\n\n  ngAfterViewChecked() {\n    if (this.date) {\n      if (this.date.month !== this._month) {\n        this._month = this.date.month;\n\n        this._renderer.setProperty(this.monthSelect.nativeElement, 'value', this._month);\n      }\n\n      if (this.date.year !== this._year) {\n        this._year = this.date.year;\n\n        this._renderer.setProperty(this.yearSelect.nativeElement, 'value', this._year);\n      }\n    }\n  }\n\n}\n\nNgbDatepickerNavigationSelect.ɵfac = function NgbDatepickerNavigationSelect_Factory(t) {\n  return new (t || NgbDatepickerNavigationSelect)(i0.ɵɵdirectiveInject(NgbDatepickerI18n), i0.ɵɵdirectiveInject(i0.Renderer2));\n};\n\nNgbDatepickerNavigationSelect.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NgbDatepickerNavigationSelect,\n  selectors: [[\"ngb-datepicker-navigation-select\"]],\n  viewQuery: function NgbDatepickerNavigationSelect_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c11, 7, ElementRef);\n      i0.ɵɵviewQuery(_c12, 7, ElementRef);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.monthSelect = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.yearSelect = _t.first);\n    }\n  },\n  inputs: {\n    date: \"date\",\n    disabled: \"disabled\",\n    months: \"months\",\n    years: \"years\"\n  },\n  outputs: {\n    select: \"select\"\n  },\n  decls: 6,\n  vars: 4,\n  consts: function () {\n    let i18n_13;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @suppress {msgDescriptions}\n       */\n      const MSG__HOME_EDUARD_DESKTOP_COOKIE_DIALOGUE_ANGULAR_DOTNET_GOOGLE_ANALYTICS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2015_NG_BOOTSTRAP_MJS_14 = goog.getMsg(\"Select month\");\n      i18n_13 = MSG__HOME_EDUARD_DESKTOP_COOKIE_DIALOGUE_ANGULAR_DOTNET_GOOGLE_ANALYTICS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2015_NG_BOOTSTRAP_MJS_14;\n    } else {\n      i18n_13 = $localize`:@@ngb.datepicker.select-month:Select month`;\n    }\n\n    let i18n_15;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @suppress {msgDescriptions}\n       */\n      const MSG__HOME_EDUARD_DESKTOP_COOKIE_DIALOGUE_ANGULAR_DOTNET_GOOGLE_ANALYTICS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2015_NG_BOOTSTRAP_MJS_16 = goog.getMsg(\"Select month\");\n      i18n_15 = MSG__HOME_EDUARD_DESKTOP_COOKIE_DIALOGUE_ANGULAR_DOTNET_GOOGLE_ANALYTICS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2015_NG_BOOTSTRAP_MJS_16;\n    } else {\n      i18n_15 = $localize`:@@ngb.datepicker.select-month:Select month`;\n    }\n\n    let i18n_17;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @suppress {msgDescriptions}\n       */\n      const MSG__HOME_EDUARD_DESKTOP_COOKIE_DIALOGUE_ANGULAR_DOTNET_GOOGLE_ANALYTICS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2015_NG_BOOTSTRAP_MJS_18 = goog.getMsg(\"Select year\");\n      i18n_17 = MSG__HOME_EDUARD_DESKTOP_COOKIE_DIALOGUE_ANGULAR_DOTNET_GOOGLE_ANALYTICS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2015_NG_BOOTSTRAP_MJS_18;\n    } else {\n      i18n_17 = $localize`:@@ngb.datepicker.select-year:Select year`;\n    }\n\n    let i18n_19;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @suppress {msgDescriptions}\n       */\n      const MSG__HOME_EDUARD_DESKTOP_COOKIE_DIALOGUE_ANGULAR_DOTNET_GOOGLE_ANALYTICS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2015_NG_BOOTSTRAP_MJS_20 = goog.getMsg(\"Select year\");\n      i18n_19 = MSG__HOME_EDUARD_DESKTOP_COOKIE_DIALOGUE_ANGULAR_DOTNET_GOOGLE_ANALYTICS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2015_NG_BOOTSTRAP_MJS_20;\n    } else {\n      i18n_19 = $localize`:@@ngb.datepicker.select-year:Select year`;\n    }\n\n    return [[\"aria-label\", i18n_13, \"title\", i18n_15, 1, \"form-select\", 3, \"disabled\", \"change\"], [\"month\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"aria-label\", i18n_17, \"title\", i18n_19, 1, \"form-select\", 3, \"disabled\", \"change\"], [\"year\", \"\"], [3, \"value\"]];\n  },\n  template: function NgbDatepickerNavigationSelect_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"select\", 0, 1);\n      i0.ɵɵlistener(\"change\", function NgbDatepickerNavigationSelect_Template_select_change_0_listener($event) {\n        return ctx.changeMonth($event.target.value);\n      });\n      i0.ɵɵtemplate(2, NgbDatepickerNavigationSelect_option_2_Template, 2, 3, \"option\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"select\", 3, 4);\n      i0.ɵɵlistener(\"change\", function NgbDatepickerNavigationSelect_Template_select_change_3_listener($event) {\n        return ctx.changeYear($event.target.value);\n      });\n      i0.ɵɵtemplate(5, NgbDatepickerNavigationSelect_option_5_Template, 2, 2, \"option\", 2);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"disabled\", ctx.disabled);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.months);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"disabled\", ctx.disabled);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.years);\n    }\n  },\n  directives: [i2.NgForOf, i3.NgSelectOption, i3.ɵNgSelectMultipleOption],\n  styles: [\"ngb-datepicker-navigation-select>.form-select{flex:1 1 auto;padding:0 .5rem;font-size:.875rem;height:1.85rem}ngb-datepicker-navigation-select>.form-select:focus{z-index:1}ngb-datepicker-navigation-select>.form-select::-ms-value{background-color:transparent!important}\\n\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbDatepickerNavigationSelect, [{\n    type: Component,\n    args: [{\n      selector: 'ngb-datepicker-navigation-select',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      template: `\n    <select #month\n      [disabled]=\"disabled\"\n      class=\"form-select\"\n      i18n-aria-label=\"@@ngb.datepicker.select-month\" aria-label=\"Select month\"\n      i18n-title=\"@@ngb.datepicker.select-month\" title=\"Select month\"\n      (change)=\"changeMonth($any($event).target.value)\">\n        <option *ngFor=\"let m of months\" [attr.aria-label]=\"i18n.getMonthFullName(m, date?.year)\"\n                [value]=\"m\">{{ i18n.getMonthShortName(m, date?.year) }}</option>\n    </select><select #year\n      [disabled]=\"disabled\"\n      class=\"form-select\"\n      i18n-aria-label=\"@@ngb.datepicker.select-year\" aria-label=\"Select year\"\n      i18n-title=\"@@ngb.datepicker.select-year\" title=\"Select year\"\n      (change)=\"changeYear($any($event).target.value)\">\n        <option *ngFor=\"let y of years\" [value]=\"y\">{{ i18n.getYearNumerals(y) }}</option>\n    </select>\n  `,\n      styles: [\"ngb-datepicker-navigation-select>.form-select{flex:1 1 auto;padding:0 .5rem;font-size:.875rem;height:1.85rem}ngb-datepicker-navigation-select>.form-select:focus{z-index:1}ngb-datepicker-navigation-select>.form-select::-ms-value{background-color:transparent!important}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: NgbDatepickerI18n\n    }, {\n      type: i0.Renderer2\n    }];\n  }, {\n    date: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    months: [{\n      type: Input\n    }],\n    years: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }],\n    monthSelect: [{\n      type: ViewChild,\n      args: ['month', {\n        static: true,\n        read: ElementRef\n      }]\n    }],\n    yearSelect: [{\n      type: ViewChild,\n      args: ['year', {\n        static: true,\n        read: ElementRef\n      }]\n    }]\n  });\n})();\n\nclass NgbDatepickerNavigation {\n  constructor(i18n) {\n    this.i18n = i18n;\n    this.navigation = NavigationEvent;\n    this.months = [];\n    this.navigate = new EventEmitter();\n    this.select = new EventEmitter();\n  }\n\n  onClickPrev(event) {\n    event.currentTarget.focus();\n    this.navigate.emit(this.navigation.PREV);\n  }\n\n  onClickNext(event) {\n    event.currentTarget.focus();\n    this.navigate.emit(this.navigation.NEXT);\n  }\n\n}\n\nNgbDatepickerNavigation.ɵfac = function NgbDatepickerNavigation_Factory(t) {\n  return new (t || NgbDatepickerNavigation)(i0.ɵɵdirectiveInject(NgbDatepickerI18n));\n};\n\nNgbDatepickerNavigation.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NgbDatepickerNavigation,\n  selectors: [[\"ngb-datepicker-navigation\"]],\n  inputs: {\n    date: \"date\",\n    disabled: \"disabled\",\n    months: \"months\",\n    showSelect: \"showSelect\",\n    prevDisabled: \"prevDisabled\",\n    nextDisabled: \"nextDisabled\",\n    selectBoxes: \"selectBoxes\"\n  },\n  outputs: {\n    navigate: \"navigate\",\n    select: \"select\"\n  },\n  decls: 8,\n  vars: 4,\n  consts: function () {\n    let i18n_21;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @suppress {msgDescriptions}\n       */\n      const MSG__HOME_EDUARD_DESKTOP_COOKIE_DIALOGUE_ANGULAR_DOTNET_GOOGLE_ANALYTICS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2015_NG_BOOTSTRAP_MJS_22 = goog.getMsg(\"Previous month\");\n      i18n_21 = MSG__HOME_EDUARD_DESKTOP_COOKIE_DIALOGUE_ANGULAR_DOTNET_GOOGLE_ANALYTICS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2015_NG_BOOTSTRAP_MJS_22;\n    } else {\n      i18n_21 = $localize`:@@ngb.datepicker.previous-month:Previous month`;\n    }\n\n    let i18n_23;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @suppress {msgDescriptions}\n       */\n      const MSG__HOME_EDUARD_DESKTOP_COOKIE_DIALOGUE_ANGULAR_DOTNET_GOOGLE_ANALYTICS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2015_NG_BOOTSTRAP_MJS_24 = goog.getMsg(\"Previous month\");\n      i18n_23 = MSG__HOME_EDUARD_DESKTOP_COOKIE_DIALOGUE_ANGULAR_DOTNET_GOOGLE_ANALYTICS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2015_NG_BOOTSTRAP_MJS_24;\n    } else {\n      i18n_23 = $localize`:@@ngb.datepicker.previous-month:Previous month`;\n    }\n\n    let i18n_25;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @suppress {msgDescriptions}\n       */\n      const MSG__HOME_EDUARD_DESKTOP_COOKIE_DIALOGUE_ANGULAR_DOTNET_GOOGLE_ANALYTICS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2015_NG_BOOTSTRAP_MJS_26 = goog.getMsg(\"Next month\");\n      i18n_25 = MSG__HOME_EDUARD_DESKTOP_COOKIE_DIALOGUE_ANGULAR_DOTNET_GOOGLE_ANALYTICS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2015_NG_BOOTSTRAP_MJS_26;\n    } else {\n      i18n_25 = $localize`:@@ngb.datepicker.next-month:Next month`;\n    }\n\n    let i18n_27;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @suppress {msgDescriptions}\n       */\n      const MSG__HOME_EDUARD_DESKTOP_COOKIE_DIALOGUE_ANGULAR_DOTNET_GOOGLE_ANALYTICS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2015_NG_BOOTSTRAP_MJS_28 = goog.getMsg(\"Next month\");\n      i18n_27 = MSG__HOME_EDUARD_DESKTOP_COOKIE_DIALOGUE_ANGULAR_DOTNET_GOOGLE_ANALYTICS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2015_NG_BOOTSTRAP_MJS_28;\n    } else {\n      i18n_27 = $localize`:@@ngb.datepicker.next-month:Next month`;\n    }\n\n    return [[1, \"ngb-dp-arrow\"], [\"type\", \"button\", \"aria-label\", i18n_21, \"title\", i18n_23, 1, \"btn\", \"btn-link\", \"ngb-dp-arrow-btn\", 3, \"disabled\", \"click\"], [1, \"ngb-dp-navigation-chevron\"], [\"class\", \"ngb-dp-navigation-select\", 3, \"date\", \"disabled\", \"months\", \"years\", \"select\", 4, \"ngIf\"], [4, \"ngIf\"], [1, \"ngb-dp-arrow\", \"right\"], [\"type\", \"button\", \"aria-label\", i18n_25, \"title\", i18n_27, 1, \"btn\", \"btn-link\", \"ngb-dp-arrow-btn\", 3, \"disabled\", \"click\"], [1, \"ngb-dp-navigation-select\", 3, \"date\", \"disabled\", \"months\", \"years\", \"select\"], [\"ngFor\", \"\", 3, \"ngForOf\"], [\"class\", \"ngb-dp-arrow\", 4, \"ngIf\"], [1, \"ngb-dp-month-name\"]];\n  },\n  template: function NgbDatepickerNavigation_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"button\", 1);\n      i0.ɵɵlistener(\"click\", function NgbDatepickerNavigation_Template_button_click_1_listener($event) {\n        return ctx.onClickPrev($event);\n      });\n      i0.ɵɵelement(2, \"span\", 2);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(3, NgbDatepickerNavigation_ngb_datepicker_navigation_select_3_Template, 1, 4, \"ngb-datepicker-navigation-select\", 3);\n      i0.ɵɵtemplate(4, NgbDatepickerNavigation_4_Template, 1, 1, null, 4);\n      i0.ɵɵelementStart(5, \"div\", 5)(6, \"button\", 6);\n      i0.ɵɵlistener(\"click\", function NgbDatepickerNavigation_Template_button_click_6_listener($event) {\n        return ctx.onClickNext($event);\n      });\n      i0.ɵɵelement(7, \"span\", 2);\n      i0.ɵɵelementEnd()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"disabled\", ctx.prevDisabled);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.showSelect);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.showSelect);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"disabled\", ctx.nextDisabled);\n    }\n  },\n  directives: [NgbDatepickerNavigationSelect, i2.NgIf, i2.NgForOf],\n  styles: [\"ngb-datepicker-navigation{display:flex;align-items:center}.ngb-dp-navigation-chevron{border-style:solid;border-width:.2em .2em 0 0;display:inline-block;width:.75em;height:.75em;margin-left:.25em;margin-right:.15em;transform:rotate(-135deg)}.ngb-dp-arrow{display:flex;flex:1 1 auto;padding-right:0;padding-left:0;margin:0;width:2rem;height:2rem}.ngb-dp-arrow.right{justify-content:flex-end}.ngb-dp-arrow.right .ngb-dp-navigation-chevron{transform:rotate(45deg);margin-left:.15em;margin-right:.25em}.ngb-dp-arrow-btn{padding:0 .25rem;margin:0 .5rem;border:none;background-color:transparent;z-index:1}.ngb-dp-arrow-btn:focus{outline-width:1px;outline-style:auto}@media all and (-ms-high-contrast: none),(-ms-high-contrast: active){.ngb-dp-arrow-btn:focus{outline-style:solid}}.ngb-dp-month-name{font-size:larger;height:2rem;line-height:2rem;text-align:center}.ngb-dp-navigation-select{display:flex;flex:1 1 9rem}\\n\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbDatepickerNavigation, [{\n    type: Component,\n    args: [{\n      selector: 'ngb-datepicker-navigation',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      template: `\n    <div class=\"ngb-dp-arrow\">\n      <button type=\"button\" class=\"btn btn-link ngb-dp-arrow-btn\" (click)=\"onClickPrev($event)\" [disabled]=\"prevDisabled\"\n              i18n-aria-label=\"@@ngb.datepicker.previous-month\" aria-label=\"Previous month\"\n              i18n-title=\"@@ngb.datepicker.previous-month\" title=\"Previous month\">\n        <span class=\"ngb-dp-navigation-chevron\"></span>\n      </button>\n    </div>\n    <ngb-datepicker-navigation-select *ngIf=\"showSelect\" class=\"ngb-dp-navigation-select\"\n      [date]=\"date\"\n      [disabled] = \"disabled\"\n      [months]=\"selectBoxes.months\"\n      [years]=\"selectBoxes.years\"\n      (select)=\"select.emit($event)\">\n    </ngb-datepicker-navigation-select>\n\n    <ng-template *ngIf=\"!showSelect\" ngFor let-month [ngForOf]=\"months\" let-i=\"index\">\n      <div class=\"ngb-dp-arrow\" *ngIf=\"i > 0\"></div>\n      <div class=\"ngb-dp-month-name\">\n        {{ i18n.getMonthLabel(month.firstDate) }}\n      </div>\n      <div class=\"ngb-dp-arrow\" *ngIf=\"i !== months.length - 1\"></div>\n    </ng-template>\n    <div class=\"ngb-dp-arrow right\">\n      <button type=\"button\" class=\"btn btn-link ngb-dp-arrow-btn\" (click)=\"onClickNext($event)\" [disabled]=\"nextDisabled\"\n              i18n-aria-label=\"@@ngb.datepicker.next-month\" aria-label=\"Next month\"\n              i18n-title=\"@@ngb.datepicker.next-month\" title=\"Next month\">\n        <span class=\"ngb-dp-navigation-chevron\"></span>\n      </button>\n    </div>\n    `,\n      styles: [\"ngb-datepicker-navigation{display:flex;align-items:center}.ngb-dp-navigation-chevron{border-style:solid;border-width:.2em .2em 0 0;display:inline-block;width:.75em;height:.75em;margin-left:.25em;margin-right:.15em;transform:rotate(-135deg)}.ngb-dp-arrow{display:flex;flex:1 1 auto;padding-right:0;padding-left:0;margin:0;width:2rem;height:2rem}.ngb-dp-arrow.right{justify-content:flex-end}.ngb-dp-arrow.right .ngb-dp-navigation-chevron{transform:rotate(45deg);margin-left:.15em;margin-right:.25em}.ngb-dp-arrow-btn{padding:0 .25rem;margin:0 .5rem;border:none;background-color:transparent;z-index:1}.ngb-dp-arrow-btn:focus{outline-width:1px;outline-style:auto}@media all and (-ms-high-contrast: none),(-ms-high-contrast: active){.ngb-dp-arrow-btn:focus{outline-style:solid}}.ngb-dp-month-name{font-size:larger;height:2rem;line-height:2rem;text-align:center}.ngb-dp-navigation-select{display:flex;flex:1 1 9rem}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: NgbDatepickerI18n\n    }];\n  }, {\n    date: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    months: [{\n      type: Input\n    }],\n    showSelect: [{\n      type: Input\n    }],\n    prevDisabled: [{\n      type: Input\n    }],\n    nextDisabled: [{\n      type: Input\n    }],\n    selectBoxes: [{\n      type: Input\n    }],\n    navigate: [{\n      type: Output\n    }],\n    select: [{\n      type: Output\n    }]\n  });\n})();\n\nvar Key;\n\n(function (Key) {\n  Key[Key[\"Tab\"] = 9] = \"Tab\";\n  Key[Key[\"Enter\"] = 13] = \"Enter\";\n  Key[Key[\"Escape\"] = 27] = \"Escape\";\n  Key[Key[\"Space\"] = 32] = \"Space\";\n  Key[Key[\"PageUp\"] = 33] = \"PageUp\";\n  Key[Key[\"PageDown\"] = 34] = \"PageDown\";\n  Key[Key[\"End\"] = 35] = \"End\";\n  Key[Key[\"Home\"] = 36] = \"Home\";\n  Key[Key[\"ArrowLeft\"] = 37] = \"ArrowLeft\";\n  Key[Key[\"ArrowUp\"] = 38] = \"ArrowUp\";\n  Key[Key[\"ArrowRight\"] = 39] = \"ArrowRight\";\n  Key[Key[\"ArrowDown\"] = 40] = \"ArrowDown\";\n})(Key || (Key = {}));\n/**\n * A service that represents the keyboard navigation.\n *\n * Default keyboard shortcuts [are documented in the overview](#/components/datepicker/overview#keyboard-shortcuts)\n *\n * @since 5.2.0\n */\n\n\nclass NgbDatepickerKeyboardService {\n  /**\n   * Processes a keyboard event.\n   */\n  processKey(event, datepicker) {\n    const {\n      state,\n      calendar\n    } = datepicker;\n    /* eslint-disable-next-line deprecation/deprecation */\n\n    switch (event.which) {\n      case Key.PageUp:\n        datepicker.focusDate(calendar.getPrev(state.focusedDate, event.shiftKey ? 'y' : 'm', 1));\n        break;\n\n      case Key.PageDown:\n        datepicker.focusDate(calendar.getNext(state.focusedDate, event.shiftKey ? 'y' : 'm', 1));\n        break;\n\n      case Key.End:\n        datepicker.focusDate(event.shiftKey ? state.maxDate : state.lastDate);\n        break;\n\n      case Key.Home:\n        datepicker.focusDate(event.shiftKey ? state.minDate : state.firstDate);\n        break;\n\n      case Key.ArrowLeft:\n        datepicker.focusDate(calendar.getPrev(state.focusedDate, 'd', 1));\n        break;\n\n      case Key.ArrowUp:\n        datepicker.focusDate(calendar.getPrev(state.focusedDate, 'd', calendar.getDaysPerWeek()));\n        break;\n\n      case Key.ArrowRight:\n        datepicker.focusDate(calendar.getNext(state.focusedDate, 'd', 1));\n        break;\n\n      case Key.ArrowDown:\n        datepicker.focusDate(calendar.getNext(state.focusedDate, 'd', calendar.getDaysPerWeek()));\n        break;\n\n      case Key.Enter:\n      case Key.Space:\n        datepicker.focusSelect();\n        break;\n\n      default:\n        return;\n    }\n\n    event.preventDefault();\n    event.stopPropagation();\n  }\n\n}\n\nNgbDatepickerKeyboardService.ɵfac = function NgbDatepickerKeyboardService_Factory(t) {\n  return new (t || NgbDatepickerKeyboardService)();\n};\n\nNgbDatepickerKeyboardService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: NgbDatepickerKeyboardService,\n  factory: NgbDatepickerKeyboardService.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbDatepickerKeyboardService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\n/**\n * A directive that marks the content template that customizes the way datepicker months are displayed\n *\n * @since 5.3.0\n */\n\n\nclass NgbDatepickerContent {\n  constructor(templateRef) {\n    this.templateRef = templateRef;\n  }\n\n}\n\nNgbDatepickerContent.ɵfac = function NgbDatepickerContent_Factory(t) {\n  return new (t || NgbDatepickerContent)(i0.ɵɵdirectiveInject(i0.TemplateRef));\n};\n\nNgbDatepickerContent.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: NgbDatepickerContent,\n  selectors: [[\"ng-template\", \"ngbDatepickerContent\", \"\"]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbDatepickerContent, [{\n    type: Directive,\n    args: [{\n      selector: 'ng-template[ngbDatepickerContent]'\n    }]\n  }], function () {\n    return [{\n      type: i0.TemplateRef\n    }];\n  }, null);\n})();\n/**\n * A highly configurable component that helps you with selecting calendar dates.\n *\n * `NgbDatepicker` is meant to be displayed inline on a page or put inside a popup.\n */\n\n\nclass NgbDatepicker {\n  constructor(_service, _calendar, i18n, config, cd, _elementRef, _ngbDateAdapter, _ngZone) {\n    this._service = _service;\n    this._calendar = _calendar;\n    this.i18n = i18n;\n    this._elementRef = _elementRef;\n    this._ngbDateAdapter = _ngbDateAdapter;\n    this._ngZone = _ngZone;\n    this._controlValue = null;\n    this._destroyed$ = new Subject();\n    this._publicState = {};\n    /**\n     * An event emitted right before the navigation happens and displayed month changes.\n     *\n     * See [`NgbDatepickerNavigateEvent`](#/components/datepicker/api#NgbDatepickerNavigateEvent) for the payload info.\n     */\n\n    this.navigate = new EventEmitter();\n    /**\n     * An event emitted when user selects a date using keyboard or mouse.\n     *\n     * The payload of the event is currently selected `NgbDate`.\n     *\n     * @since 5.2.0\n     */\n\n    this.dateSelect = new EventEmitter();\n\n    this.onChange = _ => {};\n\n    this.onTouched = () => {};\n\n    ['dayTemplate', 'dayTemplateData', 'displayMonths', 'firstDayOfWeek', 'footerTemplate', 'markDisabled', 'minDate', 'maxDate', 'navigation', 'outsideDays', 'showWeekNumbers', 'startDate', 'weekdays'].forEach(input => this[input] = config[input]);\n\n    _service.dateSelect$.pipe(takeUntil(this._destroyed$)).subscribe(date => {\n      this.dateSelect.emit(date);\n    });\n\n    _service.model$.pipe(takeUntil(this._destroyed$)).subscribe(model => {\n      const newDate = model.firstDate;\n      const oldDate = this.model ? this.model.firstDate : null; // update public state\n\n      this._publicState = {\n        maxDate: model.maxDate,\n        minDate: model.minDate,\n        firstDate: model.firstDate,\n        lastDate: model.lastDate,\n        focusedDate: model.focusDate,\n        months: model.months.map(viewModel => viewModel.firstDate)\n      };\n      let navigationPrevented = false; // emitting navigation event if the first month changes\n\n      if (!newDate.equals(oldDate)) {\n        this.navigate.emit({\n          current: oldDate ? {\n            year: oldDate.year,\n            month: oldDate.month\n          } : null,\n          next: {\n            year: newDate.year,\n            month: newDate.month\n          },\n          preventDefault: () => navigationPrevented = true\n        }); // can't prevent the very first navigation\n\n        if (navigationPrevented && oldDate !== null) {\n          this._service.open(oldDate);\n\n          return;\n        }\n      }\n\n      const newSelectedDate = model.selectedDate;\n      const newFocusedDate = model.focusDate;\n      const oldFocusedDate = this.model ? this.model.focusDate : null;\n      this.model = model; // handling selection change\n\n      if (isChangedDate(newSelectedDate, this._controlValue)) {\n        this._controlValue = newSelectedDate;\n        this.onTouched();\n        this.onChange(this._ngbDateAdapter.toModel(newSelectedDate));\n      } // handling focus change\n\n\n      if (isChangedDate(newFocusedDate, oldFocusedDate) && oldFocusedDate && model.focusVisible) {\n        this.focus();\n      }\n\n      cd.markForCheck();\n    });\n  }\n  /**\n   *  Returns the readonly public state of the datepicker\n   *\n   * @since 5.2.0\n   */\n\n\n  get state() {\n    return this._publicState;\n  }\n  /**\n   *  Returns the calendar service used in the specific datepicker instance.\n   *\n   *  @since 5.3.0\n   */\n\n\n  get calendar() {\n    return this._calendar;\n  }\n  /**\n   *  Focuses on given date.\n   */\n\n\n  focusDate(date) {\n    this._service.focus(NgbDate.from(date));\n  }\n  /**\n   *  Selects focused date.\n   */\n\n\n  focusSelect() {\n    this._service.focusSelect();\n  }\n\n  focus() {\n    this._ngZone.onStable.asObservable().pipe(take(1)).subscribe(() => {\n      const elementToFocus = this._elementRef.nativeElement.querySelector('div.ngb-dp-day[tabindex=\"0\"]');\n\n      if (elementToFocus) {\n        elementToFocus.focus();\n      }\n    });\n  }\n  /**\n   * Navigates to the provided date.\n   *\n   * With the default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n   * If nothing or invalid date provided calendar will open current month.\n   *\n   * Use the `[startDate]` input as an alternative.\n   */\n\n\n  navigateTo(date) {\n    this._service.open(NgbDate.from(date ? date.day ? date : Object.assign(Object.assign({}, date), {\n      day: 1\n    }) : null));\n  }\n\n  ngAfterViewInit() {\n    this._ngZone.runOutsideAngular(() => {\n      const focusIns$ = fromEvent(this._contentEl.nativeElement, 'focusin');\n      const focusOuts$ = fromEvent(this._contentEl.nativeElement, 'focusout');\n      const {\n        nativeElement\n      } = this._elementRef; // we're changing 'focusVisible' only when entering or leaving months view\n      // and ignoring all focus events where both 'target' and 'related' target are day cells\n\n      merge(focusIns$, focusOuts$).pipe(filter(({\n        target,\n        relatedTarget\n      }) => !(hasClassName(target, 'ngb-dp-day') && hasClassName(relatedTarget, 'ngb-dp-day') && nativeElement.contains(target) && nativeElement.contains(relatedTarget))), takeUntil(this._destroyed$)).subscribe(({\n        type\n      }) => this._ngZone.run(() => this._service.set({\n        focusVisible: type === 'focusin'\n      })));\n    });\n  }\n\n  ngOnDestroy() {\n    this._destroyed$.next();\n  }\n\n  ngOnInit() {\n    if (this.model === undefined) {\n      const inputs = {};\n      ['dayTemplateData', 'displayMonths', 'markDisabled', 'firstDayOfWeek', 'navigation', 'minDate', 'maxDate', 'outsideDays', 'weekdays'].forEach(name => inputs[name] = this[name]);\n\n      this._service.set(inputs);\n\n      this.navigateTo(this.startDate);\n    }\n\n    if (!this.dayTemplate) {\n      this.dayTemplate = this._defaultDayTemplate;\n    }\n  }\n\n  ngOnChanges(changes) {\n    const inputs = {};\n    ['dayTemplateData', 'displayMonths', 'markDisabled', 'firstDayOfWeek', 'navigation', 'minDate', 'maxDate', 'outsideDays', 'weekdays'].filter(name => name in changes).forEach(name => inputs[name] = this[name]);\n\n    this._service.set(inputs);\n\n    if ('startDate' in changes) {\n      const {\n        currentValue,\n        previousValue\n      } = changes.startDate;\n\n      if (isChangedMonth(previousValue, currentValue)) {\n        this.navigateTo(this.startDate);\n      }\n    }\n  }\n\n  onDateSelect(date) {\n    this._service.focus(date);\n\n    this._service.select(date, {\n      emitEvent: true\n    });\n  }\n\n  onNavigateDateSelect(date) {\n    this._service.open(date);\n  }\n\n  onNavigateEvent(event) {\n    switch (event) {\n      case NavigationEvent.PREV:\n        this._service.open(this._calendar.getPrev(this.model.firstDate, 'm', 1));\n\n        break;\n\n      case NavigationEvent.NEXT:\n        this._service.open(this._calendar.getNext(this.model.firstDate, 'm', 1));\n\n        break;\n    }\n  }\n\n  registerOnChange(fn) {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn) {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(disabled) {\n    this._service.set({\n      disabled\n    });\n  }\n\n  writeValue(value) {\n    this._controlValue = NgbDate.from(this._ngbDateAdapter.fromModel(value));\n\n    this._service.select(this._controlValue);\n  }\n\n}\n\nNgbDatepicker.ɵfac = function NgbDatepicker_Factory(t) {\n  return new (t || NgbDatepicker)(i0.ɵɵdirectiveInject(NgbDatepickerService), i0.ɵɵdirectiveInject(NgbCalendar), i0.ɵɵdirectiveInject(NgbDatepickerI18n), i0.ɵɵdirectiveInject(NgbDatepickerConfig), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(NgbDateAdapter), i0.ɵɵdirectiveInject(i0.NgZone));\n};\n\nNgbDatepicker.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NgbDatepicker,\n  selectors: [[\"ngb-datepicker\"]],\n  contentQueries: function NgbDatepicker_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, NgbDatepickerContent, 7);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.contentTemplate = _t.first);\n    }\n  },\n  viewQuery: function NgbDatepicker_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c29, 7);\n      i0.ɵɵviewQuery(_c30, 7);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._defaultDayTemplate = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._contentEl = _t.first);\n    }\n  },\n  inputs: {\n    dayTemplate: \"dayTemplate\",\n    dayTemplateData: \"dayTemplateData\",\n    displayMonths: \"displayMonths\",\n    firstDayOfWeek: \"firstDayOfWeek\",\n    footerTemplate: \"footerTemplate\",\n    markDisabled: \"markDisabled\",\n    maxDate: \"maxDate\",\n    minDate: \"minDate\",\n    navigation: \"navigation\",\n    outsideDays: \"outsideDays\",\n    showWeekNumbers: \"showWeekNumbers\",\n    startDate: \"startDate\",\n    weekdays: \"weekdays\"\n  },\n  outputs: {\n    navigate: \"navigate\",\n    dateSelect: \"dateSelect\"\n  },\n  exportAs: [\"ngbDatepicker\"],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => NgbDatepicker),\n    multi: true\n  }, NgbDatepickerService]), i0.ɵɵNgOnChangesFeature],\n  decls: 10,\n  vars: 5,\n  consts: [[\"defaultDayTemplate\", \"\"], [\"defaultContentTemplate\", \"\"], [1, \"ngb-dp-header\"], [3, \"date\", \"months\", \"disabled\", \"showSelect\", \"prevDisabled\", \"nextDisabled\", \"selectBoxes\", \"navigate\", \"select\", 4, \"ngIf\"], [1, \"ngb-dp-content\"], [\"content\", \"\"], [3, \"ngTemplateOutlet\"], [\"ngbDatepickerDayView\", \"\", 3, \"date\", \"currentMonth\", \"selected\", \"disabled\", \"focused\"], [\"class\", \"ngb-dp-month\", 4, \"ngFor\", \"ngForOf\"], [1, \"ngb-dp-month\"], [\"class\", \"ngb-dp-month-name\", 4, \"ngIf\"], [3, \"month\"], [1, \"ngb-dp-month-name\"], [3, \"date\", \"months\", \"disabled\", \"showSelect\", \"prevDisabled\", \"nextDisabled\", \"selectBoxes\", \"navigate\", \"select\"]],\n  template: function NgbDatepicker_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, NgbDatepicker_ng_template_0_Template, 1, 5, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵtemplate(2, NgbDatepicker_ng_template_2_Template, 1, 1, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵelementStart(4, \"div\", 2);\n      i0.ɵɵtemplate(5, NgbDatepicker_ngb_datepicker_navigation_5_Template, 1, 7, \"ngb-datepicker-navigation\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"div\", 4, 5);\n      i0.ɵɵtemplate(8, NgbDatepicker_ng_template_8_Template, 0, 0, \"ng-template\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(9, NgbDatepicker_ng_template_9_Template, 0, 0, \"ng-template\", 6);\n    }\n\n    if (rf & 2) {\n      const _r2 = i0.ɵɵreference(3);\n\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.navigation !== \"none\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵclassProp(\"ngb-dp-months\", !ctx.contentTemplate);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngTemplateOutlet\", (ctx.contentTemplate == null ? null : ctx.contentTemplate.templateRef) || _r2);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngTemplateOutlet\", ctx.footerTemplate);\n    }\n  },\n  directives: function () {\n    return [NgbDatepickerDayView, NgbDatepickerMonth, NgbDatepickerNavigation, i2.NgForOf, i2.NgIf, i2.NgTemplateOutlet];\n  },\n  styles: [\"ngb-datepicker{border:1px solid #dfdfdf;border-radius:.25rem;display:inline-block}ngb-datepicker-month{pointer-events:auto}ngb-datepicker.dropdown-menu{padding:0}.ngb-dp-body{z-index:1055}.ngb-dp-header{border-bottom:0;border-radius:.25rem .25rem 0 0;padding-top:.25rem;background-color:#f8f9fa;background-color:var(--bs-light)}.ngb-dp-months{display:flex}.ngb-dp-month{pointer-events:none}.ngb-dp-month-name{font-size:larger;height:2rem;line-height:2rem;text-align:center;background-color:#f8f9fa;background-color:var(--bs-light)}.ngb-dp-month+.ngb-dp-month .ngb-dp-month-name,.ngb-dp-month+.ngb-dp-month .ngb-dp-week{padding-left:1rem}.ngb-dp-month:last-child .ngb-dp-week{padding-right:.25rem}.ngb-dp-month:first-child .ngb-dp-week{padding-left:.25rem}.ngb-dp-month .ngb-dp-week:last-child{padding-bottom:.25rem}\\n\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbDatepicker, [{\n    type: Component,\n    args: [{\n      exportAs: 'ngbDatepicker',\n      selector: 'ngb-datepicker',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      template: `\n    <ng-template #defaultDayTemplate let-date=\"date\" let-currentMonth=\"currentMonth\" let-selected=\"selected\"\n                 let-disabled=\"disabled\" let-focused=\"focused\">\n      <div ngbDatepickerDayView\n        [date]=\"date\"\n        [currentMonth]=\"currentMonth\"\n        [selected]=\"selected\"\n        [disabled]=\"disabled\"\n        [focused]=\"focused\">\n      </div>\n    </ng-template>\n\n    <ng-template #defaultContentTemplate>\n      <div *ngFor=\"let month of model.months; let i = index;\" class=\"ngb-dp-month\">\n        <div *ngIf=\"navigation === 'none' || (displayMonths > 1 && navigation === 'select')\" class=\"ngb-dp-month-name\">\n          {{ i18n.getMonthLabel(month.firstDate) }}\n        </div>\n        <ngb-datepicker-month [month]=\"month.firstDate\"></ngb-datepicker-month>\n      </div>\n    </ng-template>\n\n    <div class=\"ngb-dp-header\">\n      <ngb-datepicker-navigation *ngIf=\"navigation !== 'none'\"\n        [date]=\"model.firstDate!\"\n        [months]=\"model.months\"\n        [disabled]=\"model.disabled\"\n        [showSelect]=\"model.navigation === 'select'\"\n        [prevDisabled]=\"model.prevDisabled\"\n        [nextDisabled]=\"model.nextDisabled\"\n        [selectBoxes]=\"model.selectBoxes\"\n        (navigate)=\"onNavigateEvent($event)\"\n        (select)=\"onNavigateDateSelect($event)\">\n      </ngb-datepicker-navigation>\n    </div>\n\n    <div class=\"ngb-dp-content\" [class.ngb-dp-months]=\"!contentTemplate\" #content>\n      <ng-template [ngTemplateOutlet]=\"contentTemplate?.templateRef || defaultContentTemplate\"></ng-template>\n    </div>\n\n    <ng-template [ngTemplateOutlet]=\"footerTemplate\"></ng-template>\n  `,\n      providers: [{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => NgbDatepicker),\n        multi: true\n      }, NgbDatepickerService],\n      styles: [\"ngb-datepicker{border:1px solid #dfdfdf;border-radius:.25rem;display:inline-block}ngb-datepicker-month{pointer-events:auto}ngb-datepicker.dropdown-menu{padding:0}.ngb-dp-body{z-index:1055}.ngb-dp-header{border-bottom:0;border-radius:.25rem .25rem 0 0;padding-top:.25rem;background-color:#f8f9fa;background-color:var(--bs-light)}.ngb-dp-months{display:flex}.ngb-dp-month{pointer-events:none}.ngb-dp-month-name{font-size:larger;height:2rem;line-height:2rem;text-align:center;background-color:#f8f9fa;background-color:var(--bs-light)}.ngb-dp-month+.ngb-dp-month .ngb-dp-month-name,.ngb-dp-month+.ngb-dp-month .ngb-dp-week{padding-left:1rem}.ngb-dp-month:last-child .ngb-dp-week{padding-right:.25rem}.ngb-dp-month:first-child .ngb-dp-week{padding-left:.25rem}.ngb-dp-month .ngb-dp-week:last-child{padding-bottom:.25rem}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: NgbDatepickerService\n    }, {\n      type: NgbCalendar\n    }, {\n      type: NgbDatepickerI18n\n    }, {\n      type: NgbDatepickerConfig\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: NgbDateAdapter\n    }, {\n      type: i0.NgZone\n    }];\n  }, {\n    _defaultDayTemplate: [{\n      type: ViewChild,\n      args: ['defaultDayTemplate', {\n        static: true\n      }]\n    }],\n    _contentEl: [{\n      type: ViewChild,\n      args: ['content', {\n        static: true\n      }]\n    }],\n    contentTemplate: [{\n      type: ContentChild,\n      args: [NgbDatepickerContent, {\n        static: true\n      }]\n    }],\n    dayTemplate: [{\n      type: Input\n    }],\n    dayTemplateData: [{\n      type: Input\n    }],\n    displayMonths: [{\n      type: Input\n    }],\n    firstDayOfWeek: [{\n      type: Input\n    }],\n    footerTemplate: [{\n      type: Input\n    }],\n    markDisabled: [{\n      type: Input\n    }],\n    maxDate: [{\n      type: Input\n    }],\n    minDate: [{\n      type: Input\n    }],\n    navigation: [{\n      type: Input\n    }],\n    outsideDays: [{\n      type: Input\n    }],\n    showWeekNumbers: [{\n      type: Input\n    }],\n    startDate: [{\n      type: Input\n    }],\n    weekdays: [{\n      type: Input\n    }],\n    navigate: [{\n      type: Output\n    }],\n    dateSelect: [{\n      type: Output\n    }]\n  });\n})();\n/**\n * A component that renders one month including all the days, weekdays and week numbers. Can be used inside\n * the `<ng-template ngbDatepickerMonths></ng-template>` when you want to customize months layout.\n *\n * For a usage example, see [custom month layout demo](#/components/datepicker/examples#custommonth)\n *\n * @since 5.3.0\n */\n\n\nclass NgbDatepickerMonth {\n  constructor(i18n, datepicker, _keyboardService, _service) {\n    this.i18n = i18n;\n    this.datepicker = datepicker;\n    this._keyboardService = _keyboardService;\n    this._service = _service;\n  }\n  /**\n   * The first date of month to be rendered.\n   *\n   * This month must one of the months present in the\n   * [datepicker state](#/components/datepicker/api#NgbDatepickerState).\n   */\n\n\n  set month(month) {\n    this.viewModel = this._service.getMonth(month);\n  }\n\n  onKeyDown(event) {\n    this._keyboardService.processKey(event, this.datepicker);\n  }\n\n  doSelect(day) {\n    if (!day.context.disabled && !day.hidden) {\n      this.datepicker.onDateSelect(day.date);\n    }\n  }\n\n}\n\nNgbDatepickerMonth.ɵfac = function NgbDatepickerMonth_Factory(t) {\n  return new (t || NgbDatepickerMonth)(i0.ɵɵdirectiveInject(NgbDatepickerI18n), i0.ɵɵdirectiveInject(NgbDatepicker), i0.ɵɵdirectiveInject(NgbDatepickerKeyboardService), i0.ɵɵdirectiveInject(NgbDatepickerService));\n};\n\nNgbDatepickerMonth.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NgbDatepickerMonth,\n  selectors: [[\"ngb-datepicker-month\"]],\n  hostAttrs: [\"role\", \"grid\"],\n  hostBindings: function NgbDatepickerMonth_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"keydown\", function NgbDatepickerMonth_keydown_HostBindingHandler($event) {\n        return ctx.onKeyDown($event);\n      });\n    }\n  },\n  inputs: {\n    month: \"month\"\n  },\n  decls: 2,\n  vars: 2,\n  consts: [[\"class\", \"ngb-dp-week ngb-dp-weekdays\", \"role\", \"row\", 4, \"ngIf\"], [\"ngFor\", \"\", 3, \"ngForOf\"], [\"role\", \"row\", 1, \"ngb-dp-week\", \"ngb-dp-weekdays\"], [\"class\", \"ngb-dp-weekday ngb-dp-showweek small\", 4, \"ngIf\"], [\"class\", \"ngb-dp-weekday small\", \"role\", \"columnheader\", 4, \"ngFor\", \"ngForOf\"], [1, \"ngb-dp-weekday\", \"ngb-dp-showweek\", \"small\"], [\"role\", \"columnheader\", 1, \"ngb-dp-weekday\", \"small\"], [\"class\", \"ngb-dp-week\", \"role\", \"row\", 4, \"ngIf\"], [\"role\", \"row\", 1, \"ngb-dp-week\"], [\"class\", \"ngb-dp-week-number small text-muted\", 4, \"ngIf\"], [\"class\", \"ngb-dp-day\", \"role\", \"gridcell\", 3, \"disabled\", \"tabindex\", \"hidden\", \"ngb-dp-today\", \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"ngb-dp-week-number\", \"small\", \"text-muted\"], [\"role\", \"gridcell\", 1, \"ngb-dp-day\", 3, \"tabindex\", \"click\"], [3, \"ngIf\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"]],\n  template: function NgbDatepickerMonth_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, NgbDatepickerMonth_div_0_Template, 3, 2, \"div\", 0);\n      i0.ɵɵtemplate(1, NgbDatepickerMonth_ng_template_1_Template, 1, 1, \"ng-template\", 1);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.viewModel.weekdays.length > 0);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.viewModel.weeks);\n    }\n  },\n  directives: [i2.NgIf, i2.NgForOf, i2.NgTemplateOutlet],\n  styles: [\"ngb-datepicker-month{display:block}.ngb-dp-weekday,.ngb-dp-week-number{line-height:2rem;text-align:center;font-style:italic}.ngb-dp-weekday{color:#0dcaf0;color:var(--bs-info)}.ngb-dp-week{border-radius:.25rem;display:flex}.ngb-dp-weekdays{border-bottom:1px solid rgba(0,0,0,.125);border-radius:0;background-color:#f8f9fa;background-color:var(--bs-light)}.ngb-dp-day,.ngb-dp-weekday,.ngb-dp-week-number{width:2rem;height:2rem}.ngb-dp-day{cursor:pointer}.ngb-dp-day.disabled,.ngb-dp-day.hidden{cursor:default;pointer-events:none}.ngb-dp-day[tabindex=\\\"0\\\"]{z-index:1}\\n\"],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbDatepickerMonth, [{\n    type: Component,\n    args: [{\n      selector: 'ngb-datepicker-month',\n      host: {\n        'role': 'grid',\n        '(keydown)': 'onKeyDown($event)'\n      },\n      encapsulation: ViewEncapsulation.None,\n      template: `\n    <div *ngIf=\"viewModel.weekdays.length > 0\" class=\"ngb-dp-week ngb-dp-weekdays\" role=\"row\">\n      <div *ngIf=\"datepicker.showWeekNumbers\" class=\"ngb-dp-weekday ngb-dp-showweek small\">{{ i18n.getWeekLabel() }}</div>\n      <div *ngFor=\"let weekday of viewModel.weekdays\" class=\"ngb-dp-weekday small\" role=\"columnheader\">{{ weekday }}</div>\n    </div>\n    <ng-template ngFor let-week [ngForOf]=\"viewModel.weeks\">\n      <div *ngIf=\"!week.collapsed\" class=\"ngb-dp-week\" role=\"row\">\n        <div *ngIf=\"datepicker.showWeekNumbers\" class=\"ngb-dp-week-number small text-muted\">{{ i18n.getWeekNumerals(week.number) }}</div>\n        <div *ngFor=\"let day of week.days\" (click)=\"doSelect(day); $event.preventDefault()\" class=\"ngb-dp-day\" role=\"gridcell\"\n             [class.disabled]=\"day.context.disabled\"\n             [tabindex]=\"day.tabindex\"\n             [class.hidden]=\"day.hidden\"\n             [class.ngb-dp-today]=\"day.context.today\"\n             [attr.aria-label]=\"day.ariaLabel\">\n          <ng-template [ngIf]=\"!day.hidden\">\n            <ng-template [ngTemplateOutlet]=\"datepicker.dayTemplate\" [ngTemplateOutletContext]=\"day.context\"></ng-template>\n          </ng-template>\n        </div>\n      </div>\n    </ng-template>\n  `,\n      styles: [\"ngb-datepicker-month{display:block}.ngb-dp-weekday,.ngb-dp-week-number{line-height:2rem;text-align:center;font-style:italic}.ngb-dp-weekday{color:#0dcaf0;color:var(--bs-info)}.ngb-dp-week{border-radius:.25rem;display:flex}.ngb-dp-weekdays{border-bottom:1px solid rgba(0,0,0,.125);border-radius:0;background-color:#f8f9fa;background-color:var(--bs-light)}.ngb-dp-day,.ngb-dp-weekday,.ngb-dp-week-number{width:2rem;height:2rem}.ngb-dp-day{cursor:pointer}.ngb-dp-day.disabled,.ngb-dp-day.hidden{cursor:default;pointer-events:none}.ngb-dp-day[tabindex=\\\"0\\\"]{z-index:1}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: NgbDatepickerI18n\n    }, {\n      type: NgbDatepicker\n    }, {\n      type: NgbDatepickerKeyboardService\n    }, {\n      type: NgbDatepickerService\n    }];\n  }, {\n    month: [{\n      type: Input\n    }]\n  });\n})();\n\nconst isContainedIn = (element, array) => array ? array.some(item => item.contains(element)) : false;\n\nconst matchesSelectorIfAny = (element, selector) => !selector || closest(element, selector) != null; // we have to add a more significant delay to avoid re-opening when handling (click) on a toggling element\n// TODO: use proper Angular platform detection when NgbAutoClose becomes a service and we can inject PLATFORM_ID\n\n\nconst isMobile = (() => {\n  const isIOS = () => /iPad|iPhone|iPod/.test(navigator.userAgent) || /Macintosh/.test(navigator.userAgent) && navigator.maxTouchPoints && navigator.maxTouchPoints > 2;\n\n  const isAndroid = () => /Android/.test(navigator.userAgent);\n\n  return typeof navigator !== 'undefined' ? !!navigator.userAgent && (isIOS() || isAndroid()) : false;\n})(); // setting 'ngbAutoClose' synchronously on mobile results in immediate popup closing\n// when tapping on the triggering element\n\n\nconst wrapAsyncForMobile = fn => isMobile ? () => setTimeout(() => fn(), 100) : fn;\n\nfunction ngbAutoClose(zone, document, type, close, closed$, insideElements, ignoreElements, insideSelector) {\n  // closing on ESC and outside clicks\n  if (type) {\n    zone.runOutsideAngular(wrapAsyncForMobile(() => {\n      const shouldCloseOnClick = event => {\n        const element = event.target;\n\n        if (event.button === 2 || isContainedIn(element, ignoreElements)) {\n          return false;\n        }\n\n        if (type === 'inside') {\n          return isContainedIn(element, insideElements) && matchesSelectorIfAny(element, insideSelector);\n        } else if (type === 'outside') {\n          return !isContainedIn(element, insideElements);\n        } else\n          /* if (type === true) */\n          {\n            return matchesSelectorIfAny(element, insideSelector) || !isContainedIn(element, insideElements);\n          }\n      };\n\n      const escapes$ = fromEvent(document, 'keydown').pipe(takeUntil(closed$),\n      /* eslint-disable-next-line deprecation/deprecation */\n      filter(e => e.which === Key.Escape), tap(e => e.preventDefault())); // we have to pre-calculate 'shouldCloseOnClick' on 'mousedown',\n      // because on 'mouseup' DOM nodes might be detached\n\n      const mouseDowns$ = fromEvent(document, 'mousedown').pipe(map(shouldCloseOnClick), takeUntil(closed$));\n      const closeableClicks$ = fromEvent(document, 'mouseup').pipe(withLatestFrom(mouseDowns$), filter(([_, shouldClose]) => shouldClose), delay(0), takeUntil(closed$));\n      race([escapes$.pipe(map(_ => 0\n      /* ESCAPE */\n      )), closeableClicks$.pipe(map(_ => 1\n      /* CLICK */\n      ))]).subscribe(source => zone.run(() => close(source)));\n    }));\n  }\n}\n\nconst FOCUSABLE_ELEMENTS_SELECTOR = ['a[href]', 'button:not([disabled])', 'input:not([disabled]):not([type=\"hidden\"])', 'select:not([disabled])', 'textarea:not([disabled])', '[contenteditable]', '[tabindex]:not([tabindex=\"-1\"])'].join(', ');\n/**\n * Returns first and last focusable elements inside of a given element based on specific CSS selector\n */\n\nfunction getFocusableBoundaryElements(element) {\n  const list = Array.from(element.querySelectorAll(FOCUSABLE_ELEMENTS_SELECTOR)).filter(el => el.tabIndex !== -1);\n  return [list[0], list[list.length - 1]];\n}\n/**\n * Function that enforces browser focus to be trapped inside a DOM element.\n *\n * Works only for clicks inside the element and navigation with 'Tab', ignoring clicks outside of the element\n *\n * @param zone Angular zone\n * @param element The element around which focus will be trapped inside\n * @param stopFocusTrap$ The observable stream. When completed the focus trap will clean up listeners\n * and free internal resources\n * @param refocusOnClick Put the focus back to the last focused element whenever a click occurs on element (default to\n * false)\n */\n\n\nconst ngbFocusTrap = (zone, element, stopFocusTrap$, refocusOnClick = false) => {\n  zone.runOutsideAngular(() => {\n    // last focused element\n    const lastFocusedElement$ = fromEvent(element, 'focusin').pipe(takeUntil(stopFocusTrap$), map(e => e.target)); // 'tab' / 'shift+tab' stream\n\n    fromEvent(element, 'keydown').pipe(takeUntil(stopFocusTrap$),\n    /* eslint-disable-next-line deprecation/deprecation */\n    filter(e => e.which === Key.Tab), withLatestFrom(lastFocusedElement$)).subscribe(([tabEvent, focusedElement]) => {\n      const [first, last] = getFocusableBoundaryElements(element);\n\n      if ((focusedElement === first || focusedElement === element) && tabEvent.shiftKey) {\n        last.focus();\n        tabEvent.preventDefault();\n      }\n\n      if (focusedElement === last && !tabEvent.shiftKey) {\n        first.focus();\n        tabEvent.preventDefault();\n      }\n    }); // inside click\n\n    if (refocusOnClick) {\n      fromEvent(element, 'click').pipe(takeUntil(stopFocusTrap$), withLatestFrom(lastFocusedElement$), map(arr => arr[1])).subscribe(lastFocusedElement => lastFocusedElement.focus());\n    }\n  });\n};\n\nconst placementSeparator = /\\s+/;\nconst spacesRegExp = /  +/gi;\nconst startPrimaryPlacement = /^start/;\nconst endPrimaryPlacement = /^end/;\nconst startSecondaryPlacement = /-(top|left)$/;\nconst endSecondaryPlacement = /-(bottom|right)$/;\n\nfunction getPopperClassPlacement(placement) {\n  const newPlacement = placement.replace(startPrimaryPlacement, 'left').replace(endPrimaryPlacement, 'right').replace(startSecondaryPlacement, '-start').replace(endSecondaryPlacement, '-end');\n  return newPlacement;\n}\n\nconst popperStartPrimaryPlacement = /^left/;\nconst popperEndPrimaryPlacement = /^right/;\nconst popperStartSecondaryPlacement = /^start/;\nconst popperEndSecondaryPlacement = /^end/;\n\nfunction getBootstrapBaseClassPlacement(baseClass, placement) {\n  let [primary, secondary] = placement.split('-');\n  const newPrimary = primary.replace(popperStartPrimaryPlacement, 'start').replace(popperEndPrimaryPlacement, 'end');\n  let classnames = [newPrimary];\n\n  if (secondary) {\n    let newSecondary = secondary;\n\n    if (primary === 'left' || primary === 'right') {\n      newSecondary = newSecondary.replace(popperStartSecondaryPlacement, 'top').replace(popperEndSecondaryPlacement, 'bottom');\n    }\n\n    classnames.push(`${newPrimary}-${newSecondary}`);\n  }\n\n  if (baseClass) {\n    classnames = classnames.map(classname => `${baseClass}-${classname}`);\n  }\n\n  return classnames.join(' ');\n}\n/*\n * Accept the placement array and applies the appropriate placement dependent on the viewport.\n * Returns the applied placement.\n * In case of auto placement, placements are selected in order\n *   'top', 'bottom', 'start', 'end',\n *   'top-start', 'top-end',\n *   'bottom-start', 'bottom-end',\n *   'start-top', 'start-bottom',\n *   'end-top', 'end-bottom'.\n * */\n\n\nfunction getPopperOptions({\n  placement,\n  baseClass\n}) {\n  let placementVals = Array.isArray(placement) ? placement : placement.split(placementSeparator); // No need to consider left and right here, as start and end are enough, and it is used for 'auto' placement only\n\n  const allowedPlacements = ['top', 'bottom', 'start', 'end', 'top-start', 'top-end', 'bottom-start', 'bottom-end', 'start-top', 'start-bottom', 'end-top', 'end-bottom']; // replace auto placement with other placements\n\n  let hasAuto = placementVals.findIndex(val => val === 'auto');\n\n  if (hasAuto >= 0) {\n    allowedPlacements.forEach(function (obj) {\n      if (placementVals.find(val => val.search('^' + obj) !== -1) == null) {\n        placementVals.splice(hasAuto++, 1, obj);\n      }\n    });\n  }\n\n  const popperPlacements = placementVals.map(_placement => {\n    return getPopperClassPlacement(_placement);\n  });\n  let mainPlacement = popperPlacements.shift();\n  const bsModifier = {\n    name: 'bootstrapClasses',\n    enabled: !!baseClass,\n    phase: 'write',\n\n    fn({\n      state\n    }) {\n      const bsClassRegExp = new RegExp(baseClass + '(-[a-z]+)*', 'gi');\n      const popperElement = state.elements.popper;\n      const popperPlacement = state.placement;\n      let className = popperElement.className; // Remove old bootstrap classes\n\n      className = className.replace(bsClassRegExp, ''); // Add current placements\n\n      className += ` ${getBootstrapBaseClassPlacement(baseClass, popperPlacement)}`; // Remove multiple spaces\n\n      className = className.trim().replace(spacesRegExp, ' '); // Reassign\n\n      popperElement.className = className;\n    }\n\n  };\n  return {\n    placement: mainPlacement,\n    modifiers: [bsModifier, flip, preventOverflow, arrow, {\n      enabled: true,\n      name: 'flip',\n      options: {\n        fallbackPlacements: popperPlacements\n      }\n    }, {\n      enabled: true,\n      name: 'preventOverflow',\n      phase: 'main',\n      fn: function () {}\n    }]\n  };\n}\n\nfunction noop(arg) {\n  return arg;\n}\n\nfunction ngbPositioning() {\n  let popperInstance = null;\n  return {\n    createPopper(positioningOption) {\n      if (!popperInstance) {\n        const updatePopperOptions = positioningOption.updatePopperOptions || noop;\n        let popperOptions = updatePopperOptions(getPopperOptions(positioningOption));\n        popperInstance = createPopperLite(positioningOption.hostElement, positioningOption.targetElement, popperOptions);\n      }\n    },\n\n    update() {\n      if (popperInstance) {\n        popperInstance.update();\n      }\n    },\n\n    setOptions(positioningOption) {\n      if (popperInstance) {\n        const updatePopperOptions = positioningOption.updatePopperOptions || noop;\n        let popperOptions = updatePopperOptions(getPopperOptions(positioningOption));\n        popperInstance.setOptions(popperOptions);\n      }\n    },\n\n    destroy() {\n      if (popperInstance) {\n        popperInstance.destroy();\n        popperInstance = null;\n      }\n    }\n\n  };\n}\n/**\n * A configuration service for the [`NgbDatepickerInput`](#/components/datepicker/api#NgbDatepicker) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the datepicker inputs used in the application.\n *\n * @since 5.2.0\n */\n\n\nclass NgbInputDatepickerConfig extends NgbDatepickerConfig {\n  constructor() {\n    super(...arguments);\n    this.autoClose = true;\n    this.placement = ['bottom-start', 'bottom-end', 'top-start', 'top-end'];\n    this.restoreFocus = true;\n  }\n\n}\n\nNgbInputDatepickerConfig.ɵfac = /* @__PURE__ */function () {\n  let ɵNgbInputDatepickerConfig_BaseFactory;\n  return function NgbInputDatepickerConfig_Factory(t) {\n    return (ɵNgbInputDatepickerConfig_BaseFactory || (ɵNgbInputDatepickerConfig_BaseFactory = i0.ɵɵgetInheritedFactory(NgbInputDatepickerConfig)))(t || NgbInputDatepickerConfig);\n  };\n}();\n\nNgbInputDatepickerConfig.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: NgbInputDatepickerConfig,\n  factory: NgbInputDatepickerConfig.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbInputDatepickerConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\n\nfunction addPopperOffset(offset$1) {\n  return options => {\n    options.modifiers.push(offset, {\n      name: 'offset',\n      options: {\n        offset: () => offset$1\n      }\n    });\n    return options;\n  };\n}\n\nfunction NGB_DATEPICKER_PARSER_FORMATTER_FACTORY() {\n  return new NgbDateISOParserFormatter();\n}\n/**\n * An abstract service for parsing and formatting dates for the\n * [`NgbInputDatepicker`](#/components/datepicker/api#NgbInputDatepicker) directive.\n * Converts between the internal `NgbDateStruct` model presentation and a `string` that is displayed in the\n * input element.\n *\n * When user types something in the input this service attempts to parse it into a `NgbDateStruct` object.\n * And vice versa, when users selects a date in the calendar with the mouse, it must be displayed as a `string`\n * in the input.\n *\n * Default implementation uses the ISO 8601 format, but you can provide another implementation via DI\n * to use an alternative string format or a custom parsing logic.\n *\n * See the [date format overview](#/components/datepicker/overview#date-model) for more details.\n */\n\n\nclass NgbDateParserFormatter {}\n\nNgbDateParserFormatter.ɵfac = function NgbDateParserFormatter_Factory(t) {\n  return new (t || NgbDateParserFormatter)();\n};\n\nNgbDateParserFormatter.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: NgbDateParserFormatter,\n  factory: function () {\n    return NGB_DATEPICKER_PARSER_FORMATTER_FACTORY();\n  },\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbDateParserFormatter, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root',\n      useFactory: NGB_DATEPICKER_PARSER_FORMATTER_FACTORY\n    }]\n  }], null, null);\n})();\n\nclass NgbDateISOParserFormatter extends NgbDateParserFormatter {\n  parse(value) {\n    if (value != null) {\n      const dateParts = value.trim().split('-');\n\n      if (dateParts.length === 1 && isNumber(dateParts[0])) {\n        return {\n          year: toInteger(dateParts[0]),\n          month: null,\n          day: null\n        };\n      } else if (dateParts.length === 2 && isNumber(dateParts[0]) && isNumber(dateParts[1])) {\n        return {\n          year: toInteger(dateParts[0]),\n          month: toInteger(dateParts[1]),\n          day: null\n        };\n      } else if (dateParts.length === 3 && isNumber(dateParts[0]) && isNumber(dateParts[1]) && isNumber(dateParts[2])) {\n        return {\n          year: toInteger(dateParts[0]),\n          month: toInteger(dateParts[1]),\n          day: toInteger(dateParts[2])\n        };\n      }\n    }\n\n    return null;\n  }\n\n  format(date) {\n    return date ? `${date.year}-${isNumber(date.month) ? padNumber(date.month) : ''}-${isNumber(date.day) ? padNumber(date.day) : ''}` : '';\n  }\n\n}\n\nNgbDateISOParserFormatter.ɵfac = /* @__PURE__ */function () {\n  let ɵNgbDateISOParserFormatter_BaseFactory;\n  return function NgbDateISOParserFormatter_Factory(t) {\n    return (ɵNgbDateISOParserFormatter_BaseFactory || (ɵNgbDateISOParserFormatter_BaseFactory = i0.ɵɵgetInheritedFactory(NgbDateISOParserFormatter)))(t || NgbDateISOParserFormatter);\n  };\n}();\n\nNgbDateISOParserFormatter.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: NgbDateISOParserFormatter,\n  factory: NgbDateISOParserFormatter.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbDateISOParserFormatter, [{\n    type: Injectable\n  }], null, null);\n})();\n/**\n * A directive that allows to stick a datepicker popup to an input field.\n *\n * Manages interaction with the input field itself, does value formatting and provides forms integration.\n */\n\n\nclass NgbInputDatepicker {\n  constructor(_parserFormatter, _elRef, _vcRef, _renderer, _ngZone, _calendar, _dateAdapter, _document, _changeDetector, config) {\n    this._parserFormatter = _parserFormatter;\n    this._elRef = _elRef;\n    this._vcRef = _vcRef;\n    this._renderer = _renderer;\n    this._ngZone = _ngZone;\n    this._calendar = _calendar;\n    this._dateAdapter = _dateAdapter;\n    this._document = _document;\n    this._changeDetector = _changeDetector;\n    this._cRef = null;\n    this._disabled = false;\n    this._elWithFocus = null;\n    this._model = null;\n    this._positioning = ngbPositioning();\n    this._destroyCloseHandlers$ = new Subject();\n    /**\n     * An event emitted when user selects a date using keyboard or mouse.\n     *\n     * The payload of the event is currently selected `NgbDate`.\n     *\n     * @since 1.1.1\n     */\n\n    this.dateSelect = new EventEmitter();\n    /**\n     * Event emitted right after the navigation happens and displayed month changes.\n     *\n     * See [`NgbDatepickerNavigateEvent`](#/components/datepicker/api#NgbDatepickerNavigateEvent) for the payload info.\n     */\n\n    this.navigate = new EventEmitter();\n    /**\n     * An event fired after closing datepicker window.\n     *\n     * @since 4.2.0\n     */\n\n    this.closed = new EventEmitter();\n\n    this._onChange = _ => {};\n\n    this._onTouched = () => {};\n\n    this._validatorChange = () => {};\n\n    ['autoClose', 'container', 'positionTarget', 'placement'].forEach(input => this[input] = config[input]);\n  }\n\n  get disabled() {\n    return this._disabled;\n  }\n\n  set disabled(value) {\n    this._disabled = value === '' || value && value !== 'false';\n\n    if (this.isOpen()) {\n      this._cRef.instance.setDisabledState(this._disabled);\n    }\n  }\n\n  registerOnChange(fn) {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn) {\n    this._onTouched = fn;\n  }\n\n  registerOnValidatorChange(fn) {\n    this._validatorChange = fn;\n  }\n\n  setDisabledState(isDisabled) {\n    this.disabled = isDisabled;\n  }\n\n  validate(c) {\n    const {\n      value\n    } = c;\n\n    if (value != null) {\n      const ngbDate = this._fromDateStruct(this._dateAdapter.fromModel(value));\n\n      if (!ngbDate) {\n        return {\n          'ngbDate': {\n            invalid: value\n          }\n        };\n      }\n\n      if (this.minDate && ngbDate.before(NgbDate.from(this.minDate))) {\n        return {\n          'ngbDate': {\n            minDate: {\n              minDate: this.minDate,\n              actual: value\n            }\n          }\n        };\n      }\n\n      if (this.maxDate && ngbDate.after(NgbDate.from(this.maxDate))) {\n        return {\n          'ngbDate': {\n            maxDate: {\n              maxDate: this.maxDate,\n              actual: value\n            }\n          }\n        };\n      }\n    }\n\n    return null;\n  }\n\n  writeValue(value) {\n    this._model = this._fromDateStruct(this._dateAdapter.fromModel(value));\n\n    this._writeModelValue(this._model);\n  }\n\n  manualDateChange(value, updateView = false) {\n    const inputValueChanged = value !== this._inputValue;\n\n    if (inputValueChanged) {\n      this._inputValue = value;\n      this._model = this._fromDateStruct(this._parserFormatter.parse(value));\n    }\n\n    if (inputValueChanged || !updateView) {\n      this._onChange(this._model ? this._dateAdapter.toModel(this._model) : value === '' ? null : value);\n    }\n\n    if (updateView && this._model) {\n      this._writeModelValue(this._model);\n    }\n  }\n\n  isOpen() {\n    return !!this._cRef;\n  }\n  /**\n   * Opens the datepicker popup.\n   *\n   * If the related form control contains a valid date, the corresponding month will be opened.\n   */\n\n\n  open() {\n    if (!this.isOpen()) {\n      this._cRef = this._vcRef.createComponent(NgbDatepicker);\n\n      this._applyPopupStyling(this._cRef.location.nativeElement);\n\n      this._applyDatepickerInputs(this._cRef.instance);\n\n      this._subscribeForDatepickerOutputs(this._cRef.instance);\n\n      this._cRef.instance.ngOnInit();\n\n      this._cRef.instance.writeValue(this._dateAdapter.toModel(this._model)); // date selection event handling\n\n\n      this._cRef.instance.registerOnChange(selectedDate => {\n        this.writeValue(selectedDate);\n\n        this._onChange(selectedDate);\n\n        this._onTouched();\n      });\n\n      this._cRef.changeDetectorRef.detectChanges();\n\n      this._cRef.instance.setDisabledState(this.disabled);\n\n      if (this.container === 'body') {\n        this._document.querySelector(this.container).appendChild(this._cRef.location.nativeElement);\n      } // focus handling\n\n\n      this._elWithFocus = this._document.activeElement;\n      ngbFocusTrap(this._ngZone, this._cRef.location.nativeElement, this.closed, true);\n      setTimeout(() => {\n        var _a;\n\n        return (_a = this._cRef) === null || _a === void 0 ? void 0 : _a.instance.focus();\n      });\n      let hostElement;\n\n      if (isString(this.positionTarget)) {\n        hostElement = this._document.querySelector(this.positionTarget);\n      } else if (this.positionTarget instanceof HTMLElement) {\n        hostElement = this.positionTarget;\n      } else {\n        hostElement = this._elRef.nativeElement;\n      } // Setting up popper and scheduling updates when zone is stable\n\n\n      this._ngZone.runOutsideAngular(() => {\n        if (this._cRef) {\n          this._positioning.createPopper({\n            hostElement,\n            targetElement: this._cRef.location.nativeElement,\n            placement: this.placement,\n            appendToBody: this.container === 'body',\n            updatePopperOptions: addPopperOffset([0, 2])\n          });\n\n          this._zoneSubscription = this._ngZone.onStable.subscribe(() => this._positioning.update());\n        }\n      });\n\n      if (this.positionTarget && !hostElement) {\n        throw new Error('ngbDatepicker could not find element declared in [positionTarget] to position against.');\n      }\n\n      this._setCloseHandlers();\n    }\n  }\n  /**\n   * Closes the datepicker popup.\n   */\n\n\n  close() {\n    var _a;\n\n    if (this.isOpen()) {\n      this._vcRef.remove(this._vcRef.indexOf(this._cRef.hostView));\n\n      this._cRef = null;\n\n      this._positioning.destroy();\n\n      (_a = this._zoneSubscription) === null || _a === void 0 ? void 0 : _a.unsubscribe();\n\n      this._destroyCloseHandlers$.next();\n\n      this.closed.emit();\n\n      this._changeDetector.markForCheck(); // restore focus\n\n\n      let elementToFocus = this._elWithFocus;\n\n      if (isString(this.restoreFocus)) {\n        elementToFocus = this._document.querySelector(this.restoreFocus);\n      } else if (this.restoreFocus !== undefined) {\n        elementToFocus = this.restoreFocus;\n      } // in IE document.activeElement can contain an object without 'focus()' sometimes\n\n\n      if (elementToFocus && elementToFocus['focus']) {\n        elementToFocus.focus();\n      } else {\n        this._document.body.focus();\n      }\n    }\n  }\n  /**\n   * Toggles the datepicker popup.\n   */\n\n\n  toggle() {\n    if (this.isOpen()) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n  /**\n   * Navigates to the provided date.\n   *\n   * With the default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n   * If nothing or invalid date provided calendar will open current month.\n   *\n   * Use the `[startDate]` input as an alternative.\n   */\n\n\n  navigateTo(date) {\n    if (this.isOpen()) {\n      this._cRef.instance.navigateTo(date);\n    }\n  }\n\n  onBlur() {\n    this._onTouched();\n  }\n\n  onFocus() {\n    this._elWithFocus = this._elRef.nativeElement;\n  }\n\n  ngOnChanges(changes) {\n    if (changes['minDate'] || changes['maxDate']) {\n      this._validatorChange();\n\n      if (this.isOpen()) {\n        if (changes['minDate']) {\n          this._cRef.instance.minDate = this.minDate;\n        }\n\n        if (changes['maxDate']) {\n          this._cRef.instance.maxDate = this.maxDate;\n        }\n\n        this._cRef.instance.ngOnChanges(changes);\n      }\n    }\n\n    if (changes['datepickerClass']) {\n      const {\n        currentValue,\n        previousValue\n      } = changes['datepickerClass'];\n\n      this._applyPopupClass(currentValue, previousValue);\n    }\n\n    if (changes['autoClose'] && this.isOpen()) {\n      this._setCloseHandlers();\n    }\n  }\n\n  ngOnDestroy() {\n    this.close();\n  }\n\n  _applyDatepickerInputs(datepickerInstance) {\n    ['dayTemplate', 'dayTemplateData', 'displayMonths', 'firstDayOfWeek', 'footerTemplate', 'markDisabled', 'minDate', 'maxDate', 'navigation', 'outsideDays', 'showNavigation', 'showWeekNumbers', 'weekdays'].forEach(optionName => {\n      if (this[optionName] !== undefined) {\n        datepickerInstance[optionName] = this[optionName];\n      }\n    });\n    datepickerInstance.startDate = this.startDate || this._model;\n  }\n\n  _applyPopupClass(newClass, oldClass) {\n    var _a;\n\n    const popupEl = (_a = this._cRef) === null || _a === void 0 ? void 0 : _a.location.nativeElement;\n\n    if (popupEl) {\n      if (newClass) {\n        this._renderer.addClass(popupEl, newClass);\n      }\n\n      if (oldClass) {\n        this._renderer.removeClass(popupEl, oldClass);\n      }\n    }\n  }\n\n  _applyPopupStyling(nativeElement) {\n    this._renderer.addClass(nativeElement, 'dropdown-menu');\n\n    this._renderer.addClass(nativeElement, 'show');\n\n    if (this.container === 'body') {\n      this._renderer.addClass(nativeElement, 'ngb-dp-body');\n    }\n\n    this._applyPopupClass(this.datepickerClass);\n  }\n\n  _subscribeForDatepickerOutputs(datepickerInstance) {\n    datepickerInstance.navigate.subscribe(navigateEvent => this.navigate.emit(navigateEvent));\n    datepickerInstance.dateSelect.subscribe(date => {\n      this.dateSelect.emit(date);\n\n      if (this.autoClose === true || this.autoClose === 'inside') {\n        this.close();\n      }\n    });\n  }\n\n  _writeModelValue(model) {\n    const value = this._parserFormatter.format(model);\n\n    this._inputValue = value;\n\n    this._renderer.setProperty(this._elRef.nativeElement, 'value', value);\n\n    if (this.isOpen()) {\n      this._cRef.instance.writeValue(this._dateAdapter.toModel(model));\n\n      this._onTouched();\n    }\n  }\n\n  _fromDateStruct(date) {\n    const ngbDate = date ? new NgbDate(date.year, date.month, date.day) : null;\n    return this._calendar.isValid(ngbDate) ? ngbDate : null;\n  }\n\n  _setCloseHandlers() {\n    this._destroyCloseHandlers$.next();\n\n    ngbAutoClose(this._ngZone, this._document, this.autoClose, () => this.close(), this._destroyCloseHandlers$, [], [this._elRef.nativeElement, this._cRef.location.nativeElement]);\n  }\n\n}\n\nNgbInputDatepicker.ɵfac = function NgbInputDatepicker_Factory(t) {\n  return new (t || NgbInputDatepicker)(i0.ɵɵdirectiveInject(NgbDateParserFormatter), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(NgbCalendar), i0.ɵɵdirectiveInject(NgbDateAdapter), i0.ɵɵdirectiveInject(DOCUMENT), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(NgbInputDatepickerConfig));\n};\n\nNgbInputDatepicker.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: NgbInputDatepicker,\n  selectors: [[\"input\", \"ngbDatepicker\", \"\"]],\n  hostVars: 1,\n  hostBindings: function NgbInputDatepicker_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"input\", function NgbInputDatepicker_input_HostBindingHandler($event) {\n        return ctx.manualDateChange($event.target.value);\n      })(\"change\", function NgbInputDatepicker_change_HostBindingHandler($event) {\n        return ctx.manualDateChange($event.target.value, true);\n      })(\"focus\", function NgbInputDatepicker_focus_HostBindingHandler() {\n        return ctx.onFocus();\n      })(\"blur\", function NgbInputDatepicker_blur_HostBindingHandler() {\n        return ctx.onBlur();\n      });\n    }\n\n    if (rf & 2) {\n      i0.ɵɵhostProperty(\"disabled\", ctx.disabled);\n    }\n  },\n  inputs: {\n    autoClose: \"autoClose\",\n    datepickerClass: \"datepickerClass\",\n    dayTemplate: \"dayTemplate\",\n    dayTemplateData: \"dayTemplateData\",\n    displayMonths: \"displayMonths\",\n    firstDayOfWeek: \"firstDayOfWeek\",\n    footerTemplate: \"footerTemplate\",\n    markDisabled: \"markDisabled\",\n    minDate: \"minDate\",\n    maxDate: \"maxDate\",\n    navigation: \"navigation\",\n    outsideDays: \"outsideDays\",\n    placement: \"placement\",\n    restoreFocus: \"restoreFocus\",\n    showWeekNumbers: \"showWeekNumbers\",\n    startDate: \"startDate\",\n    container: \"container\",\n    positionTarget: \"positionTarget\",\n    weekdays: \"weekdays\",\n    disabled: \"disabled\"\n  },\n  outputs: {\n    dateSelect: \"dateSelect\",\n    navigate: \"navigate\",\n    closed: \"closed\"\n  },\n  exportAs: [\"ngbDatepicker\"],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => NgbInputDatepicker),\n    multi: true\n  }, {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => NgbInputDatepicker),\n    multi: true\n  }, {\n    provide: NgbDatepickerConfig,\n    useExisting: NgbInputDatepickerConfig\n  }]), i0.ɵɵNgOnChangesFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbInputDatepicker, [{\n    type: Directive,\n    args: [{\n      selector: 'input[ngbDatepicker]',\n      exportAs: 'ngbDatepicker',\n      host: {\n        '(input)': 'manualDateChange($event.target.value)',\n        '(change)': 'manualDateChange($event.target.value, true)',\n        '(focus)': 'onFocus()',\n        '(blur)': 'onBlur()',\n        '[disabled]': 'disabled'\n      },\n      providers: [{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => NgbInputDatepicker),\n        multi: true\n      }, {\n        provide: NG_VALIDATORS,\n        useExisting: forwardRef(() => NgbInputDatepicker),\n        multi: true\n      }, {\n        provide: NgbDatepickerConfig,\n        useExisting: NgbInputDatepickerConfig\n      }]\n    }]\n  }], function () {\n    return [{\n      type: NgbDateParserFormatter\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.ViewContainerRef\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: i0.NgZone\n    }, {\n      type: NgbCalendar\n    }, {\n      type: NgbDateAdapter\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: NgbInputDatepickerConfig\n    }];\n  }, {\n    autoClose: [{\n      type: Input\n    }],\n    datepickerClass: [{\n      type: Input\n    }],\n    dayTemplate: [{\n      type: Input\n    }],\n    dayTemplateData: [{\n      type: Input\n    }],\n    displayMonths: [{\n      type: Input\n    }],\n    firstDayOfWeek: [{\n      type: Input\n    }],\n    footerTemplate: [{\n      type: Input\n    }],\n    markDisabled: [{\n      type: Input\n    }],\n    minDate: [{\n      type: Input\n    }],\n    maxDate: [{\n      type: Input\n    }],\n    navigation: [{\n      type: Input\n    }],\n    outsideDays: [{\n      type: Input\n    }],\n    placement: [{\n      type: Input\n    }],\n    restoreFocus: [{\n      type: Input\n    }],\n    showWeekNumbers: [{\n      type: Input\n    }],\n    startDate: [{\n      type: Input\n    }],\n    container: [{\n      type: Input\n    }],\n    positionTarget: [{\n      type: Input\n    }],\n    weekdays: [{\n      type: Input\n    }],\n    dateSelect: [{\n      type: Output\n    }],\n    navigate: [{\n      type: Output\n    }],\n    closed: [{\n      type: Output\n    }],\n    disabled: [{\n      type: Input\n    }]\n  });\n})();\n\nclass NgbCalendarHijri extends NgbCalendar {\n  getDaysPerWeek() {\n    return 7;\n  }\n\n  getMonths() {\n    return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n  }\n\n  getWeeksPerMonth() {\n    return 6;\n  }\n\n  getNext(date, period = 'd', number = 1) {\n    date = new NgbDate(date.year, date.month, date.day);\n\n    switch (period) {\n      case 'y':\n        date = this._setYear(date, date.year + number);\n        date.month = 1;\n        date.day = 1;\n        return date;\n\n      case 'm':\n        date = this._setMonth(date, date.month + number);\n        date.day = 1;\n        return date;\n\n      case 'd':\n        return this._setDay(date, date.day + number);\n\n      default:\n        return date;\n    }\n  }\n\n  getPrev(date, period = 'd', number = 1) {\n    return this.getNext(date, period, -number);\n  }\n\n  getWeekday(date) {\n    const day = this.toGregorian(date).getDay(); // in JS Date Sun=0, in ISO 8601 Sun=7\n\n    return day === 0 ? 7 : day;\n  }\n\n  getWeekNumber(week, firstDayOfWeek) {\n    // in JS Date Sun=0, in ISO 8601 Sun=7\n    if (firstDayOfWeek === 7) {\n      firstDayOfWeek = 0;\n    }\n\n    const thursdayIndex = (4 + 7 - firstDayOfWeek) % 7;\n    const date = week[thursdayIndex];\n    const jsDate = this.toGregorian(date);\n    jsDate.setDate(jsDate.getDate() + 4 - (jsDate.getDay() || 7)); // Thursday\n\n    const time = jsDate.getTime();\n    const MuhDate = this.toGregorian(new NgbDate(date.year, 1, 1)); // Compare with Muharram 1\n\n    return Math.floor(Math.round((time - MuhDate.getTime()) / 86400000) / 7) + 1;\n  }\n\n  getToday() {\n    return this.fromGregorian(new Date());\n  }\n\n  isValid(date) {\n    return date != null && isNumber(date.year) && isNumber(date.month) && isNumber(date.day) && !isNaN(this.toGregorian(date).getTime());\n  }\n\n  _setDay(date, day) {\n    day = +day;\n    let mDays = this.getDaysPerMonth(date.month, date.year);\n\n    if (day <= 0) {\n      while (day <= 0) {\n        date = this._setMonth(date, date.month - 1);\n        mDays = this.getDaysPerMonth(date.month, date.year);\n        day += mDays;\n      }\n    } else if (day > mDays) {\n      while (day > mDays) {\n        day -= mDays;\n        date = this._setMonth(date, date.month + 1);\n        mDays = this.getDaysPerMonth(date.month, date.year);\n      }\n    }\n\n    date.day = day;\n    return date;\n  }\n\n  _setMonth(date, month) {\n    month = +month;\n    date.year = date.year + Math.floor((month - 1) / 12);\n    date.month = Math.floor(((month - 1) % 12 + 12) % 12) + 1;\n    return date;\n  }\n\n  _setYear(date, year) {\n    date.year = +year;\n    return date;\n  }\n\n}\n\nNgbCalendarHijri.ɵfac = /* @__PURE__ */function () {\n  let ɵNgbCalendarHijri_BaseFactory;\n  return function NgbCalendarHijri_Factory(t) {\n    return (ɵNgbCalendarHijri_BaseFactory || (ɵNgbCalendarHijri_BaseFactory = i0.ɵɵgetInheritedFactory(NgbCalendarHijri)))(t || NgbCalendarHijri);\n  };\n}();\n\nNgbCalendarHijri.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: NgbCalendarHijri,\n  factory: NgbCalendarHijri.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbCalendarHijri, [{\n    type: Injectable\n  }], null, null);\n})();\n/**\n * Checks if islamic year is a leap year\n */\n\n\nfunction isIslamicLeapYear(hYear) {\n  return (14 + 11 * hYear) % 30 < 11;\n}\n/**\n * Checks if gregorian years is a leap year\n */\n\n\nfunction isGregorianLeapYear$1(gDate) {\n  const year = gDate.getFullYear();\n  return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n}\n/**\n * Returns the start of Hijri Month.\n * `hMonth` is 0 for Muharram, 1 for Safar, etc.\n * `hYear` is any Hijri hYear.\n */\n\n\nfunction getIslamicMonthStart(hYear, hMonth) {\n  return Math.ceil(29.5 * hMonth) + (hYear - 1) * 354 + Math.floor((3 + 11 * hYear) / 30.0);\n}\n/**\n * Returns the start of Hijri year.\n * `year` is any Hijri year.\n */\n\n\nfunction getIslamicYearStart(year) {\n  return (year - 1) * 354 + Math.floor((3 + 11 * year) / 30.0);\n}\n\nfunction mod$1(a, b) {\n  return a - b * Math.floor(a / b);\n}\n/**\n * The civil calendar is one type of Hijri calendars used in islamic countries.\n * Uses a fixed cycle of alternating 29- and 30-day months,\n * with a leap day added to the last month of 11 out of every 30 years.\n * http://cldr.unicode.org/development/development-process/design-proposals/islamic-calendar-types\n * All the calculations here are based on the equations from \"Calendrical Calculations\" By Edward M. Reingold, Nachum\n * Dershowitz.\n */\n\n\nconst GREGORIAN_EPOCH$1 = 1721425.5;\nconst ISLAMIC_EPOCH = 1948439.5;\n\nclass NgbCalendarIslamicCivil extends NgbCalendarHijri {\n  /**\n   * Returns the equivalent islamic(civil) date value for a give input Gregorian date.\n   * `gDate` is a JS Date to be converted to Hijri.\n   */\n  fromGregorian(gDate) {\n    const gYear = gDate.getFullYear(),\n          gMonth = gDate.getMonth(),\n          gDay = gDate.getDate();\n    let julianDay = GREGORIAN_EPOCH$1 - 1 + 365 * (gYear - 1) + Math.floor((gYear - 1) / 4) + -Math.floor((gYear - 1) / 100) + Math.floor((gYear - 1) / 400) + Math.floor((367 * (gMonth + 1) - 362) / 12 + (gMonth + 1 <= 2 ? 0 : isGregorianLeapYear$1(gDate) ? -1 : -2) + gDay);\n    julianDay = Math.floor(julianDay) + 0.5;\n    const days = julianDay - ISLAMIC_EPOCH;\n    const hYear = Math.floor((30 * days + 10646) / 10631.0);\n    let hMonth = Math.ceil((days - 29 - getIslamicYearStart(hYear)) / 29.5);\n    hMonth = Math.min(hMonth, 11);\n    const hDay = Math.ceil(days - getIslamicMonthStart(hYear, hMonth)) + 1;\n    return new NgbDate(hYear, hMonth + 1, hDay);\n  }\n  /**\n   * Returns the equivalent JS date value for a give input islamic(civil) date.\n   * `hDate` is an islamic(civil) date to be converted to Gregorian.\n   */\n\n\n  toGregorian(hDate) {\n    const hYear = hDate.year;\n    const hMonth = hDate.month - 1;\n    const hDay = hDate.day;\n    const julianDay = hDay + Math.ceil(29.5 * hMonth) + (hYear - 1) * 354 + Math.floor((3 + 11 * hYear) / 30) + ISLAMIC_EPOCH - 1;\n    const wjd = Math.floor(julianDay - 0.5) + 0.5,\n          depoch = wjd - GREGORIAN_EPOCH$1,\n          quadricent = Math.floor(depoch / 146097),\n          dqc = mod$1(depoch, 146097),\n          cent = Math.floor(dqc / 36524),\n          dcent = mod$1(dqc, 36524),\n          quad = Math.floor(dcent / 1461),\n          dquad = mod$1(dcent, 1461),\n          yindex = Math.floor(dquad / 365);\n    let year = quadricent * 400 + cent * 100 + quad * 4 + yindex;\n\n    if (!(cent === 4 || yindex === 4)) {\n      year++;\n    }\n\n    const gYearStart = GREGORIAN_EPOCH$1 + 365 * (year - 1) + Math.floor((year - 1) / 4) - Math.floor((year - 1) / 100) + Math.floor((year - 1) / 400);\n    const yearday = wjd - gYearStart;\n    const tjd = GREGORIAN_EPOCH$1 - 1 + 365 * (year - 1) + Math.floor((year - 1) / 4) - Math.floor((year - 1) / 100) + Math.floor((year - 1) / 400) + Math.floor(739 / 12 + (isGregorianLeapYear$1(new Date(year, 3, 1)) ? -1 : -2) + 1);\n    const leapadj = wjd < tjd ? 0 : isGregorianLeapYear$1(new Date(year, 3, 1)) ? 1 : 2;\n    const month = Math.floor(((yearday + leapadj) * 12 + 373) / 367);\n    const tjd2 = GREGORIAN_EPOCH$1 - 1 + 365 * (year - 1) + Math.floor((year - 1) / 4) - Math.floor((year - 1) / 100) + Math.floor((year - 1) / 400) + Math.floor((367 * month - 362) / 12 + (month <= 2 ? 0 : isGregorianLeapYear$1(new Date(year, month - 1, 1)) ? -1 : -2) + 1);\n    const day = wjd - tjd2 + 1;\n    return new Date(year, month - 1, day);\n  }\n  /**\n   * Returns the number of days in a specific Hijri month.\n   * `month` is 1 for Muharram, 2 for Safar, etc.\n   * `year` is any Hijri year.\n   */\n\n\n  getDaysPerMonth(month, year) {\n    year = year + Math.floor(month / 13);\n    month = (month - 1) % 12 + 1;\n    let length = 29 + month % 2;\n\n    if (month === 12 && isIslamicLeapYear(year)) {\n      length++;\n    }\n\n    return length;\n  }\n\n}\n\nNgbCalendarIslamicCivil.ɵfac = /* @__PURE__ */function () {\n  let ɵNgbCalendarIslamicCivil_BaseFactory;\n  return function NgbCalendarIslamicCivil_Factory(t) {\n    return (ɵNgbCalendarIslamicCivil_BaseFactory || (ɵNgbCalendarIslamicCivil_BaseFactory = i0.ɵɵgetInheritedFactory(NgbCalendarIslamicCivil)))(t || NgbCalendarIslamicCivil);\n  };\n}();\n\nNgbCalendarIslamicCivil.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: NgbCalendarIslamicCivil,\n  factory: NgbCalendarIslamicCivil.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbCalendarIslamicCivil, [{\n    type: Injectable\n  }], null, null);\n})();\n/**\n * Umalqura calendar is one type of Hijri calendars used in islamic countries.\n * This Calendar is used by Saudi Arabia for administrative purpose.\n * Unlike tabular calendars, the algorithm involves astronomical calculation, but it's still deterministic.\n * http://cldr.unicode.org/development/development-process/design-proposals/islamic-calendar-types\n */\n\n\nconst GREGORIAN_FIRST_DATE = new Date(1882, 10, 12);\nconst GREGORIAN_LAST_DATE = new Date(2174, 10, 25);\nconst HIJRI_BEGIN = 1300;\nconst HIJRI_END = 1600;\nconst ONE_DAY = 1000 * 60 * 60 * 24;\nconst MONTH_LENGTH = [// 1300-1304\n'101010101010', '110101010100', '111011001001', '011011010100', '011011101010', // 1305-1309\n'001101101100', '101010101101', '010101010101', '011010101001', '011110010010', // 1310-1314\n'101110101001', '010111010100', '101011011010', '010101011100', '110100101101', // 1315-1319\n'011010010101', '011101001010', '101101010100', '101101101010', '010110101101', // 1320-1324\n'010010101110', '101001001111', '010100010111', '011010001011', '011010100101', // 1325-1329\n'101011010101', '001011010110', '100101011011', '010010011101', '101001001101', // 1330-1334\n'110100100110', '110110010101', '010110101100', '100110110110', '001010111010', // 1335-1339\n'101001011011', '010100101011', '101010010101', '011011001010', '101011101001', // 1340-1344\n'001011110100', '100101110110', '001010110110', '100101010110', '101011001010', // 1345-1349\n'101110100100', '101111010010', '010111011001', '001011011100', '100101101101', // 1350-1354\n'010101001101', '101010100101', '101101010010', '101110100101', '010110110100', // 1355-1359\n'100110110110', '010101010111', '001010010111', '010101001011', '011010100011', // 1360-1364\n'011101010010', '101101100101', '010101101010', '101010101011', '010100101011', // 1365-1369\n'110010010101', '110101001010', '110110100101', '010111001010', '101011010110', // 1370-1374\n'100101010111', '010010101011', '100101001011', '101010100101', '101101010010', // 1375-1379\n'101101101010', '010101110101', '001001110110', '100010110111', '010001011011', // 1380-1384\n'010101010101', '010110101001', '010110110100', '100111011010', '010011011101', // 1385-1389\n'001001101110', '100100110110', '101010101010', '110101010100', '110110110010', // 1390-1394\n'010111010101', '001011011010', '100101011011', '010010101011', '101001010101', // 1395-1399\n'101101001001', '101101100100', '101101110001', '010110110100', '101010110101', // 1400-1404\n'101001010101', '110100100101', '111010010010', '111011001001', '011011010100', // 1405-1409\n'101011101001', '100101101011', '010010101011', '101010010011', '110101001001', // 1410-1414\n'110110100100', '110110110010', '101010111001', '010010111010', '101001011011', // 1415-1419\n'010100101011', '101010010101', '101100101010', '101101010101', '010101011100', // 1420-1424\n'010010111101', '001000111101', '100100011101', '101010010101', '101101001010', // 1425-1429\n'101101011010', '010101101101', '001010110110', '100100111011', '010010011011', // 1430-1434\n'011001010101', '011010101001', '011101010100', '101101101010', '010101101100', // 1435-1439\n'101010101101', '010101010101', '101100101001', '101110010010', '101110101001', // 1440-1444\n'010111010100', '101011011010', '010101011010', '101010101011', '010110010101', // 1445-1449\n'011101001001', '011101100100', '101110101010', '010110110101', '001010110110', // 1450-1454\n'101001010110', '111001001101', '101100100101', '101101010010', '101101101010', // 1455-1459\n'010110101101', '001010101110', '100100101111', '010010010111', '011001001011', // 1460-1464\n'011010100101', '011010101100', '101011010110', '010101011101', '010010011101', // 1465-1469\n'101001001101', '110100010110', '110110010101', '010110101010', '010110110101', // 1470-1474\n'001011011010', '100101011011', '010010101101', '010110010101', '011011001010', // 1475-1479\n'011011100100', '101011101010', '010011110101', '001010110110', '100101010110', // 1480-1484\n'101010101010', '101101010100', '101111010010', '010111011001', '001011101010', // 1485-1489\n'100101101101', '010010101101', '101010010101', '101101001010', '101110100101', // 1490-1494\n'010110110010', '100110110101', '010011010110', '101010010111', '010101000111', // 1495-1499\n'011010010011', '011101001001', '101101010101', '010101101010', '101001101011', // 1500-1504\n'010100101011', '101010001011', '110101000110', '110110100011', '010111001010', // 1505-1509\n'101011010110', '010011011011', '001001101011', '100101001011', '101010100101', // 1510-1514\n'101101010010', '101101101001', '010101110101', '000101110110', '100010110111', // 1515-1519\n'001001011011', '010100101011', '010101100101', '010110110100', '100111011010', // 1520-1524\n'010011101101', '000101101101', '100010110110', '101010100110', '110101010010', // 1525-1529\n'110110101001', '010111010100', '101011011010', '100101011011', '010010101011', // 1530-1534\n'011001010011', '011100101001', '011101100010', '101110101001', '010110110010', // 1535-1539\n'101010110101', '010101010101', '101100100101', '110110010010', '111011001001', // 1540-1544\n'011011010010', '101011101001', '010101101011', '010010101011', '101001010101', // 1545-1549\n'110100101001', '110101010100', '110110101010', '100110110101', '010010111010', // 1550-1554\n'101000111011', '010010011011', '101001001101', '101010101010', '101011010101', // 1555-1559\n'001011011010', '100101011101', '010001011110', '101000101110', '110010011010', // 1560-1564\n'110101010101', '011010110010', '011010111001', '010010111010', '101001011101', // 1565-1569\n'010100101101', '101010010101', '101101010010', '101110101000', '101110110100', // 1570-1574\n'010110111001', '001011011010', '100101011010', '101101001010', '110110100100', // 1575-1579\n'111011010001', '011011101000', '101101101010', '010101101101', '010100110101', // 1580-1584\n'011010010101', '110101001010', '110110101000', '110111010100', '011011011010', // 1585-1589\n'010101011011', '001010011101', '011000101011', '101100010101', '101101001010', // 1590-1594\n'101110010101', '010110101010', '101010101110', '100100101110', '110010001111', // 1595-1599\n'010100100111', '011010010101', '011010101010', '101011010110', '010101011101', // 1600\n'001010011101'];\n\nfunction getDaysDiff(date1, date2) {\n  // Ignores the time part in date1 and date2:\n  const time1 = Date.UTC(date1.getFullYear(), date1.getMonth(), date1.getDate());\n  const time2 = Date.UTC(date2.getFullYear(), date2.getMonth(), date2.getDate());\n  const diff = Math.abs(time1 - time2);\n  return Math.round(diff / ONE_DAY);\n}\n\nclass NgbCalendarIslamicUmalqura extends NgbCalendarIslamicCivil {\n  /**\n  * Returns the equivalent islamic(Umalqura) date value for a give input Gregorian date.\n  * `gdate` is s JS Date to be converted to Hijri.\n  */\n  fromGregorian(gDate) {\n    let hDay = 1,\n        hMonth = 0,\n        hYear = 1300;\n    let daysDiff = getDaysDiff(gDate, GREGORIAN_FIRST_DATE);\n\n    if (gDate.getTime() - GREGORIAN_FIRST_DATE.getTime() >= 0 && gDate.getTime() - GREGORIAN_LAST_DATE.getTime() <= 0) {\n      let year = 1300;\n\n      for (let i = 0; i < MONTH_LENGTH.length; i++, year++) {\n        for (let j = 0; j < 12; j++) {\n          let numOfDays = +MONTH_LENGTH[i][j] + 29;\n\n          if (daysDiff <= numOfDays) {\n            hDay = daysDiff + 1;\n\n            if (hDay > numOfDays) {\n              hDay = 1;\n              j++;\n            }\n\n            if (j > 11) {\n              j = 0;\n              year++;\n            }\n\n            hMonth = j;\n            hYear = year;\n            return new NgbDate(hYear, hMonth + 1, hDay);\n          }\n\n          daysDiff = daysDiff - numOfDays;\n        }\n      }\n\n      return null;\n    } else {\n      return super.fromGregorian(gDate);\n    }\n  }\n  /**\n  * Converts the current Hijri date to Gregorian.\n  */\n\n\n  toGregorian(hDate) {\n    const hYear = hDate.year;\n    const hMonth = hDate.month - 1;\n    const hDay = hDate.day;\n    let gDate = new Date(GREGORIAN_FIRST_DATE);\n    let dayDiff = hDay - 1;\n\n    if (hYear >= HIJRI_BEGIN && hYear <= HIJRI_END) {\n      for (let y = 0; y < hYear - HIJRI_BEGIN; y++) {\n        for (let m = 0; m < 12; m++) {\n          dayDiff += +MONTH_LENGTH[y][m] + 29;\n        }\n      }\n\n      for (let m = 0; m < hMonth; m++) {\n        dayDiff += +MONTH_LENGTH[hYear - HIJRI_BEGIN][m] + 29;\n      }\n\n      gDate.setDate(GREGORIAN_FIRST_DATE.getDate() + dayDiff);\n    } else {\n      gDate = super.toGregorian(hDate);\n    }\n\n    return gDate;\n  }\n  /**\n  * Returns the number of days in a specific Hijri hMonth.\n  * `hMonth` is 1 for Muharram, 2 for Safar, etc.\n  * `hYear` is any Hijri hYear.\n  */\n\n\n  getDaysPerMonth(hMonth, hYear) {\n    if (hYear >= HIJRI_BEGIN && hYear <= HIJRI_END) {\n      const pos = hYear - HIJRI_BEGIN;\n      return +MONTH_LENGTH[pos][hMonth - 1] + 29;\n    }\n\n    return super.getDaysPerMonth(hMonth, hYear);\n  }\n\n}\n\nNgbCalendarIslamicUmalqura.ɵfac = /* @__PURE__ */function () {\n  let ɵNgbCalendarIslamicUmalqura_BaseFactory;\n  return function NgbCalendarIslamicUmalqura_Factory(t) {\n    return (ɵNgbCalendarIslamicUmalqura_BaseFactory || (ɵNgbCalendarIslamicUmalqura_BaseFactory = i0.ɵɵgetInheritedFactory(NgbCalendarIslamicUmalqura)))(t || NgbCalendarIslamicUmalqura);\n  };\n}();\n\nNgbCalendarIslamicUmalqura.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: NgbCalendarIslamicUmalqura,\n  factory: NgbCalendarIslamicUmalqura.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbCalendarIslamicUmalqura, [{\n    type: Injectable\n  }], null, null);\n})();\n/**\n * Returns the equivalent JS date value for a give input Jalali date.\n * `jalaliDate` is an Jalali date to be converted to Gregorian.\n */\n\n\nfunction toGregorian$2(jalaliDate) {\n  let jdn = jalaliToJulian(jalaliDate.year, jalaliDate.month, jalaliDate.day);\n  let date = julianToGregorian(jdn);\n  date.setHours(6, 30, 3, 200);\n  return date;\n}\n/**\n * Returns the equivalent jalali date value for a give input Gregorian date.\n * `gdate` is a JS Date to be converted to jalali.\n * utc to local\n */\n\n\nfunction fromGregorian$2(gdate) {\n  let g2d = gregorianToJulian(gdate.getFullYear(), gdate.getMonth() + 1, gdate.getDate());\n  return julianToJalali(g2d);\n}\n\nfunction setJalaliYear(date, yearValue) {\n  date.year = +yearValue;\n  return date;\n}\n\nfunction setJalaliMonth(date, month) {\n  month = +month;\n  date.year = date.year + Math.floor((month - 1) / 12);\n  date.month = Math.floor(((month - 1) % 12 + 12) % 12) + 1;\n  return date;\n}\n\nfunction setJalaliDay(date, day) {\n  let mDays = getDaysPerMonth(date.month, date.year);\n\n  if (day <= 0) {\n    while (day <= 0) {\n      date = setJalaliMonth(date, date.month - 1);\n      mDays = getDaysPerMonth(date.month, date.year);\n      day += mDays;\n    }\n  } else if (day > mDays) {\n    while (day > mDays) {\n      day -= mDays;\n      date = setJalaliMonth(date, date.month + 1);\n      mDays = getDaysPerMonth(date.month, date.year);\n    }\n  }\n\n  date.day = day;\n  return date;\n}\n\nfunction mod(a, b) {\n  return a - b * Math.floor(a / b);\n}\n\nfunction div(a, b) {\n  return Math.trunc(a / b);\n}\n/*\n This function determines if the Jalali (Persian) year is\n leap (366-day long) or is the common year (365 days), and\n finds the day in March (Gregorian calendar) of the first\n day of the Jalali year (jalaliYear).\n @param jalaliYear Jalali calendar year (-61 to 3177)\n @return\n leap: number of years since the last leap year (0 to 4)\n gYear: Gregorian year of the beginning of Jalali year\n march: the March day of Farvardin the 1st (1st day of jalaliYear)\n @see: http://www.astro.uni.torun.pl/~kb/Papers/EMP/PersianC-EMP.htm\n @see: http://www.fourmilab.ch/documents/calendar/\n */\n\n\nfunction jalCal(jalaliYear) {\n  // Jalali years starting the 33-year rule.\n  let breaks = [-61, 9, 38, 199, 426, 686, 756, 818, 1111, 1181, 1210, 1635, 2060, 2097, 2192, 2262, 2324, 2394, 2456, 3178];\n  const breaksLength = breaks.length;\n  const gYear = jalaliYear + 621;\n  let leapJ = -14;\n  let jp = breaks[0];\n\n  if (jalaliYear < jp || jalaliYear >= breaks[breaksLength - 1]) {\n    throw new Error('Invalid Jalali year ' + jalaliYear);\n  } // Find the limiting years for the Jalali year jalaliYear.\n\n\n  let jump;\n\n  for (let i = 1; i < breaksLength; i += 1) {\n    const jm = breaks[i];\n    jump = jm - jp;\n\n    if (jalaliYear < jm) {\n      break;\n    }\n\n    leapJ = leapJ + div(jump, 33) * 8 + div(mod(jump, 33), 4);\n    jp = jm;\n  }\n\n  let n = jalaliYear - jp; // Find the number of leap years from AD 621 to the beginning\n  // of the current Jalali year in the Persian calendar.\n\n  leapJ = leapJ + div(n, 33) * 8 + div(mod(n, 33) + 3, 4);\n\n  if (mod(jump, 33) === 4 && jump - n === 4) {\n    leapJ += 1;\n  } // And the same in the Gregorian calendar (until the year gYear).\n\n\n  const leapG = div(gYear, 4) - div((div(gYear, 100) + 1) * 3, 4) - 150; // Determine the Gregorian date of Farvardin the 1st.\n\n  const march = 20 + leapJ - leapG; // Find how many years have passed since the last leap year.\n\n  if (jump - n < 6) {\n    n = n - jump + div(jump + 4, 33) * 33;\n  }\n\n  let leap = mod(mod(n + 1, 33) - 1, 4);\n\n  if (leap === -1) {\n    leap = 4;\n  }\n\n  return {\n    leap: leap,\n    gy: gYear,\n    march: march\n  };\n}\n/*\n Calculates Gregorian and Julian calendar dates from the Julian Day number\n (jdn) for the period since jdn=-34839655 (i.e. the year -100100 of both\n calendars) to some millions years ahead of the present.\n @param jdn Julian Day number\n @return\n gYear: Calendar year (years BC numbered 0, -1, -2, ...)\n gMonth: Calendar month (1 to 12)\n gDay: Calendar day of the month M (1 to 28/29/30/31)\n */\n\n\nfunction julianToGregorian(julianDayNumber) {\n  let j = 4 * julianDayNumber + 139361631;\n  j = j + div(div(4 * julianDayNumber + 183187720, 146097) * 3, 4) * 4 - 3908;\n  const i = div(mod(j, 1461), 4) * 5 + 308;\n  const gDay = div(mod(i, 153), 5) + 1;\n  const gMonth = mod(div(i, 153), 12) + 1;\n  const gYear = div(j, 1461) - 100100 + div(8 - gMonth, 6);\n  return new Date(gYear, gMonth - 1, gDay);\n}\n/*\n Converts a date of the Jalali calendar to the Julian Day number.\n @param jy Jalali year (1 to 3100)\n @param jm Jalali month (1 to 12)\n @param jd Jalali day (1 to 29/31)\n @return Julian Day number\n */\n\n\nfunction gregorianToJulian(gy, gm, gd) {\n  let d = div((gy + div(gm - 8, 6) + 100100) * 1461, 4) + div(153 * mod(gm + 9, 12) + 2, 5) + gd - 34840408;\n  d = d - div(div(gy + 100100 + div(gm - 8, 6), 100) * 3, 4) + 752;\n  return d;\n}\n/*\n Converts the Julian Day number to a date in the Jalali calendar.\n @param julianDayNumber Julian Day number\n @return\n jalaliYear: Jalali year (1 to 3100)\n jalaliMonth: Jalali month (1 to 12)\n jalaliDay: Jalali day (1 to 29/31)\n */\n\n\nfunction julianToJalali(julianDayNumber) {\n  let gy = julianToGregorian(julianDayNumber).getFullYear() // Calculate Gregorian year (gy).\n  ,\n      jalaliYear = gy - 621,\n      r = jalCal(jalaliYear),\n      gregorianDay = gregorianToJulian(gy, 3, r.march),\n      jalaliDay,\n      jalaliMonth,\n      numberOfDays; // Find number of days that passed since 1 Farvardin.\n\n  numberOfDays = julianDayNumber - gregorianDay;\n\n  if (numberOfDays >= 0) {\n    if (numberOfDays <= 185) {\n      // The first 6 months.\n      jalaliMonth = 1 + div(numberOfDays, 31);\n      jalaliDay = mod(numberOfDays, 31) + 1;\n      return new NgbDate(jalaliYear, jalaliMonth, jalaliDay);\n    } else {\n      // The remaining months.\n      numberOfDays -= 186;\n    }\n  } else {\n    // Previous Jalali year.\n    jalaliYear -= 1;\n    numberOfDays += 179;\n\n    if (r.leap === 1) {\n      numberOfDays += 1;\n    }\n  }\n\n  jalaliMonth = 7 + div(numberOfDays, 30);\n  jalaliDay = mod(numberOfDays, 30) + 1;\n  return new NgbDate(jalaliYear, jalaliMonth, jalaliDay);\n}\n/*\n Converts a date of the Jalali calendar to the Julian Day number.\n @param jYear Jalali year (1 to 3100)\n @param jMonth Jalali month (1 to 12)\n @param jDay Jalali day (1 to 29/31)\n @return Julian Day number\n */\n\n\nfunction jalaliToJulian(jYear, jMonth, jDay) {\n  let r = jalCal(jYear);\n  return gregorianToJulian(r.gy, 3, r.march) + (jMonth - 1) * 31 - div(jMonth, 7) * (jMonth - 7) + jDay - 1;\n}\n/**\n * Returns the number of days in a specific jalali month.\n */\n\n\nfunction getDaysPerMonth(month, year) {\n  if (month <= 6) {\n    return 31;\n  }\n\n  if (month <= 11) {\n    return 30;\n  }\n\n  if (jalCal(year).leap === 0) {\n    return 30;\n  }\n\n  return 29;\n}\n\nclass NgbCalendarPersian extends NgbCalendar {\n  getDaysPerWeek() {\n    return 7;\n  }\n\n  getMonths() {\n    return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n  }\n\n  getWeeksPerMonth() {\n    return 6;\n  }\n\n  getNext(date, period = 'd', number = 1) {\n    date = new NgbDate(date.year, date.month, date.day);\n\n    switch (period) {\n      case 'y':\n        date = setJalaliYear(date, date.year + number);\n        date.month = 1;\n        date.day = 1;\n        return date;\n\n      case 'm':\n        date = setJalaliMonth(date, date.month + number);\n        date.day = 1;\n        return date;\n\n      case 'd':\n        return setJalaliDay(date, date.day + number);\n\n      default:\n        return date;\n    }\n  }\n\n  getPrev(date, period = 'd', number = 1) {\n    return this.getNext(date, period, -number);\n  }\n\n  getWeekday(date) {\n    const day = toGregorian$2(date).getDay(); // in JS Date Sun=0, in ISO 8601 Sun=7\n\n    return day === 0 ? 7 : day;\n  }\n\n  getWeekNumber(week, firstDayOfWeek) {\n    // in JS Date Sun=0, in ISO 8601 Sun=7\n    if (firstDayOfWeek === 7) {\n      firstDayOfWeek = 0;\n    }\n\n    const thursdayIndex = (4 + 7 - firstDayOfWeek) % 7;\n    const date = week[thursdayIndex];\n    const jsDate = toGregorian$2(date);\n    jsDate.setDate(jsDate.getDate() + 4 - (jsDate.getDay() || 7)); // Thursday\n\n    const time = jsDate.getTime();\n    const startDate = toGregorian$2(new NgbDate(date.year, 1, 1));\n    return Math.floor(Math.round((time - startDate.getTime()) / 86400000) / 7) + 1;\n  }\n\n  getToday() {\n    return fromGregorian$2(new Date());\n  }\n\n  isValid(date) {\n    return date != null && isInteger(date.year) && isInteger(date.month) && isInteger(date.day) && !isNaN(toGregorian$2(date).getTime());\n  }\n\n}\n\nNgbCalendarPersian.ɵfac = /* @__PURE__ */function () {\n  let ɵNgbCalendarPersian_BaseFactory;\n  return function NgbCalendarPersian_Factory(t) {\n    return (ɵNgbCalendarPersian_BaseFactory || (ɵNgbCalendarPersian_BaseFactory = i0.ɵɵgetInheritedFactory(NgbCalendarPersian)))(t || NgbCalendarPersian);\n  };\n}();\n\nNgbCalendarPersian.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: NgbCalendarPersian,\n  factory: NgbCalendarPersian.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbCalendarPersian, [{\n    type: Injectable\n  }], null, null);\n})();\n\nconst PARTS_PER_HOUR = 1080;\nconst PARTS_PER_DAY = 24 * PARTS_PER_HOUR;\nconst PARTS_FRACTIONAL_MONTH = 12 * PARTS_PER_HOUR + 793;\nconst PARTS_PER_MONTH = 29 * PARTS_PER_DAY + PARTS_FRACTIONAL_MONTH;\nconst BAHARAD = 11 * PARTS_PER_HOUR + 204;\nconst HEBREW_DAY_ON_JAN_1_1970 = 2092591;\nconst GREGORIAN_EPOCH = 1721425.5;\n\nfunction isGregorianLeapYear(year) {\n  return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n}\n\nfunction numberOfFirstDayInYear(year) {\n  let monthsBeforeYear = Math.floor((235 * year - 234) / 19);\n  let fractionalMonthsBeforeYear = monthsBeforeYear * PARTS_FRACTIONAL_MONTH + BAHARAD;\n  let dayNumber = monthsBeforeYear * 29 + Math.floor(fractionalMonthsBeforeYear / PARTS_PER_DAY);\n  let timeOfDay = fractionalMonthsBeforeYear % PARTS_PER_DAY;\n  let dayOfWeek = dayNumber % 7; // 0 == Monday\n\n  if (dayOfWeek === 2 || dayOfWeek === 4 || dayOfWeek === 6) {\n    dayNumber++;\n    dayOfWeek = dayNumber % 7;\n  }\n\n  if (dayOfWeek === 1 && timeOfDay > 15 * PARTS_PER_HOUR + 204 && !isHebrewLeapYear(year)) {\n    dayNumber += 2;\n  } else if (dayOfWeek === 0 && timeOfDay > 21 * PARTS_PER_HOUR + 589 && isHebrewLeapYear(year - 1)) {\n    dayNumber++;\n  }\n\n  return dayNumber;\n}\n\nfunction getDaysInGregorianMonth(month, year) {\n  let days = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\n  if (isGregorianLeapYear(year)) {\n    days[1]++;\n  }\n\n  return days[month - 1];\n}\n\nfunction getHebrewMonths(year) {\n  return isHebrewLeapYear(year) ? 13 : 12;\n}\n/**\n * Returns the number of days in a specific Hebrew year.\n * `year` is any Hebrew year.\n */\n\n\nfunction getDaysInHebrewYear(year) {\n  return numberOfFirstDayInYear(year + 1) - numberOfFirstDayInYear(year);\n}\n\nfunction isHebrewLeapYear(year) {\n  if (year != null) {\n    let b = (year * 12 + 17) % 19;\n    return b >= (b < 0 ? -7 : 12);\n  }\n\n  return false;\n}\n/**\n * Returns the number of days in a specific Hebrew month.\n * `month` is 1 for Nisan, 2 for Iyar etc. Note: Hebrew leap year contains 13 months.\n * `year` is any Hebrew year.\n */\n\n\nfunction getDaysInHebrewMonth(month, year) {\n  let yearLength = numberOfFirstDayInYear(year + 1) - numberOfFirstDayInYear(year);\n  let yearType = (yearLength <= 380 ? yearLength : yearLength - 30) - 353;\n  let leapYear = isHebrewLeapYear(year);\n  let daysInMonth = leapYear ? [30, 29, 29, 29, 30, 30, 29, 30, 29, 30, 29, 30, 29] : [30, 29, 29, 29, 30, 29, 30, 29, 30, 29, 30, 29];\n\n  if (yearType > 0) {\n    daysInMonth[2]++; // Kislev gets an extra day in normal or complete years.\n  }\n\n  if (yearType > 1) {\n    daysInMonth[1]++; // Heshvan gets an extra day in complete years only.\n  }\n\n  return daysInMonth[month - 1];\n}\n\nfunction getDayNumberInHebrewYear(date) {\n  let numberOfDay = 0;\n\n  for (let i = 1; i < date.month; i++) {\n    numberOfDay += getDaysInHebrewMonth(i, date.year);\n  }\n\n  return numberOfDay + date.day;\n}\n\nfunction setHebrewMonth(date, val) {\n  let after = val >= 0;\n\n  if (!after) {\n    val = -val;\n  }\n\n  while (val > 0) {\n    if (after) {\n      if (val > getHebrewMonths(date.year) - date.month) {\n        val -= getHebrewMonths(date.year) - date.month + 1;\n        date.year++;\n        date.month = 1;\n      } else {\n        date.month += val;\n        val = 0;\n      }\n    } else {\n      if (val >= date.month) {\n        date.year--;\n        val -= date.month;\n        date.month = getHebrewMonths(date.year);\n      } else {\n        date.month -= val;\n        val = 0;\n      }\n    }\n  }\n\n  return date;\n}\n\nfunction setHebrewDay(date, val) {\n  let after = val >= 0;\n\n  if (!after) {\n    val = -val;\n  }\n\n  while (val > 0) {\n    if (after) {\n      if (val > getDaysInHebrewYear(date.year) - getDayNumberInHebrewYear(date)) {\n        val -= getDaysInHebrewYear(date.year) - getDayNumberInHebrewYear(date) + 1;\n        date.year++;\n        date.month = 1;\n        date.day = 1;\n      } else if (val > getDaysInHebrewMonth(date.month, date.year) - date.day) {\n        val -= getDaysInHebrewMonth(date.month, date.year) - date.day + 1;\n        date.month++;\n        date.day = 1;\n      } else {\n        date.day += val;\n        val = 0;\n      }\n    } else {\n      if (val >= date.day) {\n        val -= date.day;\n        date.month--;\n\n        if (date.month === 0) {\n          date.year--;\n          date.month = getHebrewMonths(date.year);\n        }\n\n        date.day = getDaysInHebrewMonth(date.month, date.year);\n      } else {\n        date.day -= val;\n        val = 0;\n      }\n    }\n  }\n\n  return date;\n}\n/**\n * Returns the equivalent Hebrew date value for a give input Gregorian date.\n * `gdate` is a JS Date to be converted to Hebrew date.\n */\n\n\nfunction fromGregorian$1(gdate) {\n  const date = new Date(gdate);\n  const gYear = date.getFullYear(),\n        gMonth = date.getMonth(),\n        gDay = date.getDate();\n  let julianDay = GREGORIAN_EPOCH - 1 + 365 * (gYear - 1) + Math.floor((gYear - 1) / 4) - Math.floor((gYear - 1) / 100) + Math.floor((gYear - 1) / 400) + Math.floor((367 * (gMonth + 1) - 362) / 12 + (gMonth + 1 <= 2 ? 0 : isGregorianLeapYear(gYear) ? -1 : -2) + gDay);\n  julianDay = Math.floor(julianDay + 0.5);\n  let daysSinceHebEpoch = julianDay - 347997;\n  let monthsSinceHebEpoch = Math.floor(daysSinceHebEpoch * PARTS_PER_DAY / PARTS_PER_MONTH);\n  let hYear = Math.floor((monthsSinceHebEpoch * 19 + 234) / 235) + 1;\n  let firstDayOfThisYear = numberOfFirstDayInYear(hYear);\n  let dayOfYear = daysSinceHebEpoch - firstDayOfThisYear;\n\n  while (dayOfYear < 1) {\n    hYear--;\n    firstDayOfThisYear = numberOfFirstDayInYear(hYear);\n    dayOfYear = daysSinceHebEpoch - firstDayOfThisYear;\n  }\n\n  let hMonth = 1;\n  let hDay = dayOfYear;\n\n  while (hDay > getDaysInHebrewMonth(hMonth, hYear)) {\n    hDay -= getDaysInHebrewMonth(hMonth, hYear);\n    hMonth++;\n  }\n\n  return new NgbDate(hYear, hMonth, hDay);\n}\n/**\n * Returns the equivalent JS date value for a given Hebrew date.\n * `hebrewDate` is an Hebrew date to be converted to Gregorian.\n */\n\n\nfunction toGregorian$1(hebrewDate) {\n  const hYear = hebrewDate.year;\n  const hMonth = hebrewDate.month;\n  const hDay = hebrewDate.day;\n  let days = numberOfFirstDayInYear(hYear);\n\n  for (let i = 1; i < hMonth; i++) {\n    days += getDaysInHebrewMonth(i, hYear);\n  }\n\n  days += hDay;\n  let diffDays = days - HEBREW_DAY_ON_JAN_1_1970;\n  let after = diffDays >= 0;\n\n  if (!after) {\n    diffDays = -diffDays;\n  }\n\n  let gYear = 1970;\n  let gMonth = 1;\n  let gDay = 1;\n\n  while (diffDays > 0) {\n    if (after) {\n      if (diffDays >= (isGregorianLeapYear(gYear) ? 366 : 365)) {\n        diffDays -= isGregorianLeapYear(gYear) ? 366 : 365;\n        gYear++;\n      } else if (diffDays >= getDaysInGregorianMonth(gMonth, gYear)) {\n        diffDays -= getDaysInGregorianMonth(gMonth, gYear);\n        gMonth++;\n      } else {\n        gDay += diffDays;\n        diffDays = 0;\n      }\n    } else {\n      if (diffDays >= (isGregorianLeapYear(gYear - 1) ? 366 : 365)) {\n        diffDays -= isGregorianLeapYear(gYear - 1) ? 366 : 365;\n        gYear--;\n      } else {\n        if (gMonth > 1) {\n          gMonth--;\n        } else {\n          gMonth = 12;\n          gYear--;\n        }\n\n        if (diffDays >= getDaysInGregorianMonth(gMonth, gYear)) {\n          diffDays -= getDaysInGregorianMonth(gMonth, gYear);\n        } else {\n          gDay = getDaysInGregorianMonth(gMonth, gYear) - diffDays + 1;\n          diffDays = 0;\n        }\n      }\n    }\n  }\n\n  return new Date(gYear, gMonth - 1, gDay);\n}\n\nfunction hebrewNumerals(numerals) {\n  if (!numerals) {\n    return '';\n  }\n\n  const hArray0_9 = ['', '\\u05d0', '\\u05d1', '\\u05d2', '\\u05d3', '\\u05d4', '\\u05d5', '\\u05d6', '\\u05d7', '\\u05d8'];\n  const hArray10_19 = ['\\u05d9', '\\u05d9\\u05d0', '\\u05d9\\u05d1', '\\u05d9\\u05d2', '\\u05d9\\u05d3', '\\u05d8\\u05d5', '\\u05d8\\u05d6', '\\u05d9\\u05d6', '\\u05d9\\u05d7', '\\u05d9\\u05d8'];\n  const hArray20_90 = ['', '', '\\u05db', '\\u05dc', '\\u05de', '\\u05e0', '\\u05e1', '\\u05e2', '\\u05e4', '\\u05e6'];\n  const hArray100_900 = ['', '\\u05e7', '\\u05e8', '\\u05e9', '\\u05ea', '\\u05ea\\u05e7', '\\u05ea\\u05e8', '\\u05ea\\u05e9', '\\u05ea\\u05ea', '\\u05ea\\u05ea\\u05e7'];\n  const hArray1000_9000 = ['', '\\u05d0', '\\u05d1', '\\u05d1\\u05d0', '\\u05d1\\u05d1', '\\u05d4', '\\u05d4\\u05d0', '\\u05d4\\u05d1', '\\u05d4\\u05d1\\u05d0', '\\u05d4\\u05d1\\u05d1'];\n  const geresh = '\\u05f3',\n        gershaim = '\\u05f4';\n  let mem = 0;\n  let result = [];\n  let step = 0;\n\n  while (numerals > 0) {\n    let m = numerals % 10;\n\n    if (step === 0) {\n      mem = m;\n    } else if (step === 1) {\n      if (m !== 1) {\n        result.unshift(hArray20_90[m], hArray0_9[mem]);\n      } else {\n        result.unshift(hArray10_19[mem]);\n      }\n    } else if (step === 2) {\n      result.unshift(hArray100_900[m]);\n    } else {\n      if (m !== 5) {\n        result.unshift(hArray1000_9000[m], geresh, ' ');\n      }\n\n      break;\n    }\n\n    numerals = Math.floor(numerals / 10);\n\n    if (step === 0 && numerals === 0) {\n      result.unshift(hArray0_9[m]);\n    }\n\n    step++;\n  }\n\n  result = result.join('').split('');\n\n  if (result.length === 1) {\n    result.push(geresh);\n  } else if (result.length > 1) {\n    result.splice(result.length - 1, 0, gershaim);\n  }\n\n  return result.join('');\n}\n/**\n * @since 3.2.0\n */\n\n\nclass NgbCalendarHebrew extends NgbCalendar {\n  getDaysPerWeek() {\n    return 7;\n  }\n\n  getMonths(year) {\n    if (year && isHebrewLeapYear(year)) {\n      return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13];\n    } else {\n      return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n    }\n  }\n\n  getWeeksPerMonth() {\n    return 6;\n  }\n\n  isValid(date) {\n    if (date != null) {\n      let b = isNumber(date.year) && isNumber(date.month) && isNumber(date.day);\n      b = b && date.month > 0 && date.month <= (isHebrewLeapYear(date.year) ? 13 : 12);\n      b = b && date.day > 0 && date.day <= getDaysInHebrewMonth(date.month, date.year);\n      return b && !isNaN(toGregorian$1(date).getTime());\n    }\n\n    return false;\n  }\n\n  getNext(date, period = 'd', number = 1) {\n    date = new NgbDate(date.year, date.month, date.day);\n\n    switch (period) {\n      case 'y':\n        date.year += number;\n        date.month = 1;\n        date.day = 1;\n        return date;\n\n      case 'm':\n        date = setHebrewMonth(date, number);\n        date.day = 1;\n        return date;\n\n      case 'd':\n        return setHebrewDay(date, number);\n\n      default:\n        return date;\n    }\n  }\n\n  getPrev(date, period = 'd', number = 1) {\n    return this.getNext(date, period, -number);\n  }\n\n  getWeekday(date) {\n    const day = toGregorian$1(date).getDay(); // in JS Date Sun=0, in ISO 8601 Sun=7\n\n    return day === 0 ? 7 : day;\n  }\n\n  getWeekNumber(week, firstDayOfWeek) {\n    const date = week[week.length - 1];\n    return Math.ceil(getDayNumberInHebrewYear(date) / 7);\n  }\n\n  getToday() {\n    return fromGregorian$1(new Date());\n  }\n  /**\n   * @since 3.4.0\n   */\n\n\n  toGregorian(date) {\n    return fromJSDate(toGregorian$1(date));\n  }\n  /**\n   * @since 3.4.0\n   */\n\n\n  fromGregorian(date) {\n    return fromGregorian$1(toJSDate(date));\n  }\n\n}\n\nNgbCalendarHebrew.ɵfac = /* @__PURE__ */function () {\n  let ɵNgbCalendarHebrew_BaseFactory;\n  return function NgbCalendarHebrew_Factory(t) {\n    return (ɵNgbCalendarHebrew_BaseFactory || (ɵNgbCalendarHebrew_BaseFactory = i0.ɵɵgetInheritedFactory(NgbCalendarHebrew)))(t || NgbCalendarHebrew);\n  };\n}();\n\nNgbCalendarHebrew.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: NgbCalendarHebrew,\n  factory: NgbCalendarHebrew.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbCalendarHebrew, [{\n    type: Injectable\n  }], null, null);\n})();\n\nconst WEEKDAYS = ['שני', 'שלישי', 'רביעי', 'חמישי', 'שישי', 'שבת', 'ראשון'];\nconst MONTHS = ['תשרי', 'חשון', 'כסלו', 'טבת', 'שבט', 'אדר', 'ניסן', 'אייר', 'סיון', 'תמוז', 'אב', 'אלול'];\nconst MONTHS_LEAP = ['תשרי', 'חשון', 'כסלו', 'טבת', 'שבט', 'אדר א׳', 'אדר ב׳', 'ניסן', 'אייר', 'סיון', 'תמוז', 'אב', 'אלול'];\n/**\n * @since 3.2.0\n */\n\nclass NgbDatepickerI18nHebrew extends NgbDatepickerI18n {\n  getMonthShortName(month, year) {\n    return this.getMonthFullName(month, year);\n  }\n\n  getMonthFullName(month, year) {\n    return isHebrewLeapYear(year) ? MONTHS_LEAP[month - 1] || '' : MONTHS[month - 1] || '';\n  }\n\n  getWeekdayLabel(weekday, width) {\n    return WEEKDAYS[weekday - 1] || '';\n  }\n\n  getDayAriaLabel(date) {\n    return `${hebrewNumerals(date.day)} ${this.getMonthFullName(date.month, date.year)} ${hebrewNumerals(date.year)}`;\n  }\n\n  getDayNumerals(date) {\n    return hebrewNumerals(date.day);\n  }\n\n  getWeekNumerals(weekNumber) {\n    return hebrewNumerals(weekNumber);\n  }\n\n  getYearNumerals(year) {\n    return hebrewNumerals(year);\n  }\n\n}\n\nNgbDatepickerI18nHebrew.ɵfac = /* @__PURE__ */function () {\n  let ɵNgbDatepickerI18nHebrew_BaseFactory;\n  return function NgbDatepickerI18nHebrew_Factory(t) {\n    return (ɵNgbDatepickerI18nHebrew_BaseFactory || (ɵNgbDatepickerI18nHebrew_BaseFactory = i0.ɵɵgetInheritedFactory(NgbDatepickerI18nHebrew)))(t || NgbDatepickerI18nHebrew);\n  };\n}();\n\nNgbDatepickerI18nHebrew.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: NgbDatepickerI18nHebrew,\n  factory: NgbDatepickerI18nHebrew.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbDatepickerI18nHebrew, [{\n    type: Injectable\n  }], null, null);\n})();\n/**\n * Returns the equivalent JS date value for a give input Buddhist date.\n * `date` is an Buddhist date to be converted to Gregorian.\n */\n\n\nfunction toGregorian(date) {\n  return new Date(date.year - 543, date.month - 1, date.day);\n}\n/**\n * Returns the equivalent Buddhist date value for a give input Gregorian date.\n * `gdate` is a JS Date to be converted to Buddhist.\n * utc to local\n */\n\n\nfunction fromGregorian(gdate) {\n  return new NgbDate(gdate.getFullYear() + 543, gdate.getMonth() + 1, gdate.getDate());\n}\n/**\n * @since 9.1.0\n */\n\n\nclass NgbCalendarBuddhist extends NgbCalendarGregorian {\n  getToday() {\n    return fromGregorian(new Date());\n  }\n\n  getNext(date, period = 'd', number = 1) {\n    let jsDate = toGregorian(date);\n    let checkMonth = true;\n    let expectedMonth = jsDate.getMonth();\n\n    switch (period) {\n      case 'y':\n        jsDate.setFullYear(jsDate.getFullYear() + number);\n        break;\n\n      case 'm':\n        expectedMonth += number;\n        jsDate.setMonth(expectedMonth);\n        expectedMonth = expectedMonth % 12;\n\n        if (expectedMonth < 0) {\n          expectedMonth = expectedMonth + 12;\n        }\n\n        break;\n\n      case 'd':\n        jsDate.setDate(jsDate.getDate() + number);\n        checkMonth = false;\n        break;\n\n      default:\n        return date;\n    }\n\n    if (checkMonth && jsDate.getMonth() !== expectedMonth) {\n      // this means the destination month has less days than the initial month\n      // let's go back to the end of the previous month:\n      jsDate.setDate(0);\n    }\n\n    return fromGregorian(jsDate);\n  }\n\n  getPrev(date, period = 'd', number = 1) {\n    return this.getNext(date, period, -number);\n  }\n\n  getWeekday(date) {\n    let jsDate = toGregorian(date);\n    let day = jsDate.getDay(); // in JS Date Sun=0, in ISO 8601 Sun=7\n\n    return day === 0 ? 7 : day;\n  }\n\n  getWeekNumber(week, firstDayOfWeek) {\n    // in JS Date Sun=0, in ISO 8601 Sun=7\n    if (firstDayOfWeek === 7) {\n      firstDayOfWeek = 0;\n    }\n\n    const thursdayIndex = (4 + 7 - firstDayOfWeek) % 7;\n    let date = week[thursdayIndex];\n    const jsDate = toGregorian(date);\n    jsDate.setDate(jsDate.getDate() + 4 - (jsDate.getDay() || 7)); // Thursday\n\n    const time = jsDate.getTime();\n    jsDate.setMonth(0); // Compare with Jan 1\n\n    jsDate.setDate(1);\n    return Math.floor(Math.round((time - jsDate.getTime()) / 86400000) / 7) + 1;\n  }\n\n  isValid(date) {\n    if (!date || !isInteger(date.year) || !isInteger(date.month) || !isInteger(date.day)) {\n      return false;\n    } // year 0 doesn't exist in Gregorian calendar\n\n\n    if (date.year === 0) {\n      return false;\n    }\n\n    const jsDate = toGregorian(date);\n    return !isNaN(jsDate.getTime()) && jsDate.getFullYear() === date.year - 543 && jsDate.getMonth() + 1 === date.month && jsDate.getDate() === date.day;\n  }\n\n}\n\nNgbCalendarBuddhist.ɵfac = /* @__PURE__ */function () {\n  let ɵNgbCalendarBuddhist_BaseFactory;\n  return function NgbCalendarBuddhist_Factory(t) {\n    return (ɵNgbCalendarBuddhist_BaseFactory || (ɵNgbCalendarBuddhist_BaseFactory = i0.ɵɵgetInheritedFactory(NgbCalendarBuddhist)))(t || NgbCalendarBuddhist);\n  };\n}();\n\nNgbCalendarBuddhist.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: NgbCalendarBuddhist,\n  factory: NgbCalendarBuddhist.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbCalendarBuddhist, [{\n    type: Injectable\n  }], null, null);\n})();\n/**\n * [`NgbDateAdapter`](#/components/datepicker/api#NgbDateAdapter) implementation that uses\n * native javascript dates as a user date model.\n */\n\n\nclass NgbDateNativeAdapter extends NgbDateAdapter {\n  /**\n   * Converts a native `Date` to a `NgbDateStruct`.\n   */\n  fromModel(date) {\n    return date instanceof Date && !isNaN(date.getTime()) ? this._fromNativeDate(date) : null;\n  }\n  /**\n   * Converts a `NgbDateStruct` to a native `Date`.\n   */\n\n\n  toModel(date) {\n    return date && isInteger(date.year) && isInteger(date.month) && isInteger(date.day) ? this._toNativeDate(date) : null;\n  }\n\n  _fromNativeDate(date) {\n    return {\n      year: date.getFullYear(),\n      month: date.getMonth() + 1,\n      day: date.getDate()\n    };\n  }\n\n  _toNativeDate(date) {\n    const jsDate = new Date(date.year, date.month - 1, date.day, 12); // avoid 30 -> 1930 conversion\n\n    jsDate.setFullYear(date.year);\n    return jsDate;\n  }\n\n}\n\nNgbDateNativeAdapter.ɵfac = /* @__PURE__ */function () {\n  let ɵNgbDateNativeAdapter_BaseFactory;\n  return function NgbDateNativeAdapter_Factory(t) {\n    return (ɵNgbDateNativeAdapter_BaseFactory || (ɵNgbDateNativeAdapter_BaseFactory = i0.ɵɵgetInheritedFactory(NgbDateNativeAdapter)))(t || NgbDateNativeAdapter);\n  };\n}();\n\nNgbDateNativeAdapter.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: NgbDateNativeAdapter,\n  factory: NgbDateNativeAdapter.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbDateNativeAdapter, [{\n    type: Injectable\n  }], null, null);\n})();\n/**\n * Same as [`NgbDateNativeAdapter`](#/components/datepicker/api#NgbDateNativeAdapter), but with UTC dates.\n *\n * @since 3.2.0\n */\n\n\nclass NgbDateNativeUTCAdapter extends NgbDateNativeAdapter {\n  _fromNativeDate(date) {\n    return {\n      year: date.getUTCFullYear(),\n      month: date.getUTCMonth() + 1,\n      day: date.getUTCDate()\n    };\n  }\n\n  _toNativeDate(date) {\n    const jsDate = new Date(Date.UTC(date.year, date.month - 1, date.day)); // avoid 30 -> 1930 conversion\n\n    jsDate.setUTCFullYear(date.year);\n    return jsDate;\n  }\n\n}\n\nNgbDateNativeUTCAdapter.ɵfac = /* @__PURE__ */function () {\n  let ɵNgbDateNativeUTCAdapter_BaseFactory;\n  return function NgbDateNativeUTCAdapter_Factory(t) {\n    return (ɵNgbDateNativeUTCAdapter_BaseFactory || (ɵNgbDateNativeUTCAdapter_BaseFactory = i0.ɵɵgetInheritedFactory(NgbDateNativeUTCAdapter)))(t || NgbDateNativeUTCAdapter);\n  };\n}();\n\nNgbDateNativeUTCAdapter.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: NgbDateNativeUTCAdapter,\n  factory: NgbDateNativeUTCAdapter.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbDateNativeUTCAdapter, [{\n    type: Injectable\n  }], null, null);\n})();\n\nclass NgbDatepickerModule {}\n\nNgbDatepickerModule.ɵfac = function NgbDatepickerModule_Factory(t) {\n  return new (t || NgbDatepickerModule)();\n};\n\nNgbDatepickerModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: NgbDatepickerModule\n});\nNgbDatepickerModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule, FormsModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbDatepickerModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [NgbDatepicker, NgbDatepickerContent, NgbDatepickerMonth, NgbDatepickerNavigation, NgbDatepickerNavigationSelect, NgbDatepickerDayView, NgbInputDatepicker],\n      exports: [NgbDatepicker, NgbDatepickerContent, NgbInputDatepicker, NgbDatepickerMonth],\n      imports: [CommonModule, FormsModule]\n    }]\n  }], null, null);\n})();\n/**\n * A configuration service for the [`NgbDropdown`](#/components/dropdown/api#NgbDropdown) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the dropdowns used in the application.\n */\n\n\nclass NgbDropdownConfig {\n  constructor() {\n    this.autoClose = true;\n    this.placement = ['bottom-start', 'bottom-end', 'top-start', 'top-end'];\n  }\n\n}\n\nNgbDropdownConfig.ɵfac = function NgbDropdownConfig_Factory(t) {\n  return new (t || NgbDropdownConfig)();\n};\n\nNgbDropdownConfig.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: NgbDropdownConfig,\n  factory: NgbDropdownConfig.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbDropdownConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\n\nclass NgbNavbar {}\n\nNgbNavbar.ɵfac = function NgbNavbar_Factory(t) {\n  return new (t || NgbNavbar)();\n};\n\nNgbNavbar.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: NgbNavbar,\n  selectors: [[\"\", 8, \"navbar\"]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbNavbar, [{\n    type: Directive,\n    args: [{\n      selector: '.navbar'\n    }]\n  }], null, null);\n})();\n/**\n * A directive you should put on a dropdown item to enable keyboard navigation.\n * Arrow keys will move focus between items marked with this directive.\n *\n * @since 4.1.0\n */\n\n\nclass NgbDropdownItem {\n  constructor(elementRef, _renderer) {\n    this.elementRef = elementRef;\n    this._renderer = _renderer;\n    this._disabled = false;\n  }\n\n  set disabled(value) {\n    this._disabled = value === '' || value === true; // accept an empty attribute as true\n    // note: we don't use a host binding for disabled because when used on links, it fails because links don't have a\n    // disabled property\n    // setting the property using the renderer, OTOH, works fine in both cases.\n\n    this._renderer.setProperty(this.elementRef.nativeElement, 'disabled', this._disabled);\n  }\n\n  get disabled() {\n    return this._disabled;\n  }\n\n}\n\nNgbDropdownItem.ɵfac = function NgbDropdownItem_Factory(t) {\n  return new (t || NgbDropdownItem)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2));\n};\n\nNgbDropdownItem.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: NgbDropdownItem,\n  selectors: [[\"\", \"ngbDropdownItem\", \"\"]],\n  hostAttrs: [1, \"dropdown-item\"],\n  hostVars: 3,\n  hostBindings: function NgbDropdownItem_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵhostProperty(\"tabIndex\", ctx.disabled ? -1 : 0);\n      i0.ɵɵclassProp(\"disabled\", ctx.disabled);\n    }\n  },\n  inputs: {\n    disabled: \"disabled\"\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbDropdownItem, [{\n    type: Directive,\n    args: [{\n      selector: '[ngbDropdownItem]',\n      host: {\n        'class': 'dropdown-item',\n        '[class.disabled]': 'disabled',\n        '[tabIndex]': 'disabled ? -1 : 0'\n      }\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.Renderer2\n    }];\n  }, {\n    disabled: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * A directive that wraps dropdown menu content and dropdown items.\n */\n\n\nclass NgbDropdownMenu {\n  constructor(dropdown, _elementRef) {\n    this.dropdown = dropdown;\n    this.placement = 'bottom';\n    this.isOpen = false;\n    this.nativeElement = _elementRef.nativeElement;\n  }\n\n}\n\nNgbDropdownMenu.ɵfac = function NgbDropdownMenu_Factory(t) {\n  return new (t || NgbDropdownMenu)(i0.ɵɵdirectiveInject(forwardRef(() => NgbDropdown)), i0.ɵɵdirectiveInject(i0.ElementRef));\n};\n\nNgbDropdownMenu.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: NgbDropdownMenu,\n  selectors: [[\"\", \"ngbDropdownMenu\", \"\"]],\n  contentQueries: function NgbDropdownMenu_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, NgbDropdownItem, 4);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.menuItems = _t);\n    }\n  },\n  hostVars: 4,\n  hostBindings: function NgbDropdownMenu_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"keydown.ArrowUp\", function NgbDropdownMenu_keydown_ArrowUp_HostBindingHandler($event) {\n        return ctx.dropdown.onKeyDown($event);\n      })(\"keydown.ArrowDown\", function NgbDropdownMenu_keydown_ArrowDown_HostBindingHandler($event) {\n        return ctx.dropdown.onKeyDown($event);\n      })(\"keydown.Home\", function NgbDropdownMenu_keydown_Home_HostBindingHandler($event) {\n        return ctx.dropdown.onKeyDown($event);\n      })(\"keydown.End\", function NgbDropdownMenu_keydown_End_HostBindingHandler($event) {\n        return ctx.dropdown.onKeyDown($event);\n      })(\"keydown.Enter\", function NgbDropdownMenu_keydown_Enter_HostBindingHandler($event) {\n        return ctx.dropdown.onKeyDown($event);\n      })(\"keydown.Space\", function NgbDropdownMenu_keydown_Space_HostBindingHandler($event) {\n        return ctx.dropdown.onKeyDown($event);\n      })(\"keydown.Tab\", function NgbDropdownMenu_keydown_Tab_HostBindingHandler($event) {\n        return ctx.dropdown.onKeyDown($event);\n      })(\"keydown.Shift.Tab\", function NgbDropdownMenu_keydown_Shift_Tab_HostBindingHandler($event) {\n        return ctx.dropdown.onKeyDown($event);\n      });\n    }\n\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"dropdown-menu\", true)(\"show\", ctx.dropdown.isOpen());\n    }\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbDropdownMenu, [{\n    type: Directive,\n    args: [{\n      selector: '[ngbDropdownMenu]',\n      host: {\n        '[class.dropdown-menu]': 'true',\n        '[class.show]': 'dropdown.isOpen()',\n        '(keydown.ArrowUp)': 'dropdown.onKeyDown($event)',\n        '(keydown.ArrowDown)': 'dropdown.onKeyDown($event)',\n        '(keydown.Home)': 'dropdown.onKeyDown($event)',\n        '(keydown.End)': 'dropdown.onKeyDown($event)',\n        '(keydown.Enter)': 'dropdown.onKeyDown($event)',\n        '(keydown.Space)': 'dropdown.onKeyDown($event)',\n        '(keydown.Tab)': 'dropdown.onKeyDown($event)',\n        '(keydown.Shift.Tab)': 'dropdown.onKeyDown($event)'\n      }\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [forwardRef(() => NgbDropdown)]\n      }]\n    }, {\n      type: i0.ElementRef\n    }];\n  }, {\n    menuItems: [{\n      type: ContentChildren,\n      args: [NgbDropdownItem]\n    }]\n  });\n})();\n/**\n * A directive to mark an element to which dropdown menu will be anchored.\n *\n * This is a simple version of the `NgbDropdownToggle` directive.\n * It plays the same role, but doesn't listen to click events to toggle dropdown menu thus enabling support\n * for events other than click.\n *\n * @since 1.1.0\n */\n\n\nclass NgbDropdownAnchor {\n  constructor(dropdown, _elementRef) {\n    this.dropdown = dropdown;\n    this.nativeElement = _elementRef.nativeElement;\n  }\n\n}\n\nNgbDropdownAnchor.ɵfac = function NgbDropdownAnchor_Factory(t) {\n  return new (t || NgbDropdownAnchor)(i0.ɵɵdirectiveInject(forwardRef(() => NgbDropdown)), i0.ɵɵdirectiveInject(i0.ElementRef));\n};\n\nNgbDropdownAnchor.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: NgbDropdownAnchor,\n  selectors: [[\"\", \"ngbDropdownAnchor\", \"\"]],\n  hostAttrs: [1, \"dropdown-toggle\"],\n  hostVars: 1,\n  hostBindings: function NgbDropdownAnchor_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵattribute(\"aria-expanded\", ctx.dropdown.isOpen());\n    }\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbDropdownAnchor, [{\n    type: Directive,\n    args: [{\n      selector: '[ngbDropdownAnchor]',\n      host: {\n        'class': 'dropdown-toggle',\n        '[attr.aria-expanded]': 'dropdown.isOpen()'\n      }\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [forwardRef(() => NgbDropdown)]\n      }]\n    }, {\n      type: i0.ElementRef\n    }];\n  }, null);\n})();\n/**\n * A directive to mark an element that will toggle dropdown via the `click` event.\n *\n * You can also use `NgbDropdownAnchor` as an alternative.\n */\n\n\nclass NgbDropdownToggle extends NgbDropdownAnchor {\n  constructor(dropdown, elementRef) {\n    super(dropdown, elementRef);\n  }\n\n}\n\nNgbDropdownToggle.ɵfac = function NgbDropdownToggle_Factory(t) {\n  return new (t || NgbDropdownToggle)(i0.ɵɵdirectiveInject(forwardRef(() => NgbDropdown)), i0.ɵɵdirectiveInject(i0.ElementRef));\n};\n\nNgbDropdownToggle.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: NgbDropdownToggle,\n  selectors: [[\"\", \"ngbDropdownToggle\", \"\"]],\n  hostAttrs: [1, \"dropdown-toggle\"],\n  hostVars: 1,\n  hostBindings: function NgbDropdownToggle_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"click\", function NgbDropdownToggle_click_HostBindingHandler() {\n        return ctx.dropdown.toggle();\n      })(\"keydown.ArrowUp\", function NgbDropdownToggle_keydown_ArrowUp_HostBindingHandler($event) {\n        return ctx.dropdown.onKeyDown($event);\n      })(\"keydown.ArrowDown\", function NgbDropdownToggle_keydown_ArrowDown_HostBindingHandler($event) {\n        return ctx.dropdown.onKeyDown($event);\n      })(\"keydown.Home\", function NgbDropdownToggle_keydown_Home_HostBindingHandler($event) {\n        return ctx.dropdown.onKeyDown($event);\n      })(\"keydown.End\", function NgbDropdownToggle_keydown_End_HostBindingHandler($event) {\n        return ctx.dropdown.onKeyDown($event);\n      })(\"keydown.Tab\", function NgbDropdownToggle_keydown_Tab_HostBindingHandler($event) {\n        return ctx.dropdown.onKeyDown($event);\n      })(\"keydown.Shift.Tab\", function NgbDropdownToggle_keydown_Shift_Tab_HostBindingHandler($event) {\n        return ctx.dropdown.onKeyDown($event);\n      });\n    }\n\n    if (rf & 2) {\n      i0.ɵɵattribute(\"aria-expanded\", ctx.dropdown.isOpen());\n    }\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: NgbDropdownAnchor,\n    useExisting: forwardRef(() => NgbDropdownToggle)\n  }]), i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbDropdownToggle, [{\n    type: Directive,\n    args: [{\n      selector: '[ngbDropdownToggle]',\n      host: {\n        'class': 'dropdown-toggle',\n        '[attr.aria-expanded]': 'dropdown.isOpen()',\n        '(click)': 'dropdown.toggle()',\n        '(keydown.ArrowUp)': 'dropdown.onKeyDown($event)',\n        '(keydown.ArrowDown)': 'dropdown.onKeyDown($event)',\n        '(keydown.Home)': 'dropdown.onKeyDown($event)',\n        '(keydown.End)': 'dropdown.onKeyDown($event)',\n        '(keydown.Tab)': 'dropdown.onKeyDown($event)',\n        '(keydown.Shift.Tab)': 'dropdown.onKeyDown($event)'\n      },\n      providers: [{\n        provide: NgbDropdownAnchor,\n        useExisting: forwardRef(() => NgbDropdownToggle)\n      }]\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [forwardRef(() => NgbDropdown)]\n      }]\n    }, {\n      type: i0.ElementRef\n    }];\n  }, null);\n})();\n/**\n * A directive that provides contextual overlays for displaying lists of links and more.\n */\n\n\nclass NgbDropdown {\n  constructor(_changeDetector, config, _document, _ngZone, _elementRef, _renderer, ngbNavbar) {\n    this._changeDetector = _changeDetector;\n    this._document = _document;\n    this._ngZone = _ngZone;\n    this._elementRef = _elementRef;\n    this._renderer = _renderer;\n    this._destroyCloseHandlers$ = new Subject();\n    this._bodyContainer = null;\n    this._positioning = ngbPositioning();\n    /**\n     * Defines whether or not the dropdown menu is opened initially.\n     */\n\n    this._open = false;\n    /**\n     * An event fired when the dropdown is opened or closed.\n     *\n     * The event payload is a `boolean`:\n     * * `true` - the dropdown was opened\n     * * `false` - the dropdown was closed\n     */\n\n    this.openChange = new EventEmitter();\n    this.placement = config.placement;\n    this.container = config.container;\n    this.autoClose = config.autoClose;\n    this.display = ngbNavbar ? 'static' : 'dynamic';\n  }\n\n  ngAfterContentInit() {\n    this._ngZone.onStable.pipe(take(1)).subscribe(() => {\n      this._applyPlacementClasses();\n\n      if (this._open) {\n        this._setCloseHandlers();\n      }\n    });\n  }\n\n  ngOnChanges(changes) {\n    if (changes.container && this._open) {\n      this._applyContainer(this.container);\n    }\n\n    if (changes.placement && !changes.placement.firstChange) {\n      this._positioning.setOptions({\n        hostElement: this._anchor.nativeElement,\n        targetElement: this._bodyContainer || this._menu.nativeElement,\n        placement: this.placement,\n        appendToBody: this.container === 'body'\n      });\n\n      this._applyPlacementClasses();\n    }\n\n    if (changes.dropdownClass) {\n      const {\n        currentValue,\n        previousValue\n      } = changes.dropdownClass;\n\n      this._applyCustomDropdownClass(currentValue, previousValue);\n    }\n\n    if (changes.autoClose && this._open) {\n      this.autoClose = changes.autoClose.currentValue;\n\n      this._setCloseHandlers();\n    }\n  }\n  /**\n   * Checks if the dropdown menu is open.\n   */\n\n\n  isOpen() {\n    return this._open;\n  }\n  /**\n   * Opens the dropdown menu.\n   */\n\n\n  open() {\n    if (!this._open) {\n      this._open = true;\n\n      this._applyContainer(this.container);\n\n      this.openChange.emit(true);\n\n      this._setCloseHandlers();\n\n      if (this._anchor) {\n        this._anchor.nativeElement.focus();\n\n        if (this.display === 'dynamic') {\n          this._ngZone.runOutsideAngular(() => {\n            this._positioning.createPopper({\n              hostElement: this._anchor.nativeElement,\n              targetElement: this._bodyContainer || this._menu.nativeElement,\n              placement: this.placement,\n              appendToBody: this.container === 'body',\n              updatePopperOptions: addPopperOffset([0, 2])\n            });\n\n            this._applyPlacementClasses();\n\n            this._zoneSubscription = this._ngZone.onStable.subscribe(() => this._positionMenu());\n          });\n        }\n      }\n    }\n  }\n\n  _setCloseHandlers() {\n    this._destroyCloseHandlers$.next(); // destroy any existing close handlers\n\n\n    ngbAutoClose(this._ngZone, this._document, this.autoClose, source => {\n      this.close();\n\n      if (source === 0\n      /* ESCAPE */\n      ) {\n        this._anchor.nativeElement.focus();\n      }\n    }, this._destroyCloseHandlers$, this._menu ? [this._menu.nativeElement] : [], this._anchor ? [this._anchor.nativeElement] : [], '.dropdown-item,.dropdown-divider');\n  }\n  /**\n   * Closes the dropdown menu.\n   */\n\n\n  close() {\n    var _a;\n\n    if (this._open) {\n      this._open = false;\n\n      this._resetContainer();\n\n      this._positioning.destroy();\n\n      (_a = this._zoneSubscription) === null || _a === void 0 ? void 0 : _a.unsubscribe();\n\n      this._destroyCloseHandlers$.next();\n\n      this.openChange.emit(false);\n\n      this._changeDetector.markForCheck();\n    }\n  }\n  /**\n   * Toggles the dropdown menu.\n   */\n\n\n  toggle() {\n    if (this.isOpen()) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  ngOnDestroy() {\n    this.close();\n  }\n\n  onKeyDown(event) {\n    /* eslint-disable-next-line deprecation/deprecation */\n    const key = event.which;\n\n    const itemElements = this._getMenuElements();\n\n    let position = -1;\n    let itemElement = null;\n\n    const isEventFromToggle = this._isEventFromToggle(event);\n\n    if (!isEventFromToggle && itemElements.length) {\n      itemElements.forEach((item, index) => {\n        if (item.contains(event.target)) {\n          itemElement = item;\n        }\n\n        if (item === this._document.activeElement) {\n          position = index;\n        }\n      });\n    } // closing on Enter / Space\n\n\n    if (key === Key.Space || key === Key.Enter) {\n      if (itemElement && (this.autoClose === true || this.autoClose === 'inside')) {\n        // Item is either a button or a link, so click will be triggered by the browser on Enter or Space.\n        // So we have to register a one-time click handler that will fire after any user defined click handlers\n        // to close the dropdown\n        fromEvent(itemElement, 'click').pipe(take(1)).subscribe(() => this.close());\n      }\n\n      return;\n    }\n\n    if (key === Key.Tab) {\n      if (event.target && this.isOpen() && this.autoClose) {\n        if (this._anchor.nativeElement === event.target) {\n          if (this.container === 'body' && !event.shiftKey) {\n            /* This case is special: user is using [Tab] from the anchor/toggle.\n               User expects the next focusable element in the dropdown menu to get focus.\n               But the menu is not a sibling to anchor/toggle, it is at the end of the body.\n               Trick is to synchronously focus the menu element, and let the [keydown.Tab] go\n               so that browser will focus the proper element (first one focusable in the menu) */\n            this._renderer.setAttribute(this._menu.nativeElement, 'tabindex', '0');\n\n            this._menu.nativeElement.focus();\n\n            this._renderer.removeAttribute(this._menu.nativeElement, 'tabindex');\n          } else if (event.shiftKey) {\n            this.close();\n          }\n\n          return;\n        } else if (this.container === 'body') {\n          const focusableElements = this._menu.nativeElement.querySelectorAll(FOCUSABLE_ELEMENTS_SELECTOR);\n\n          if (event.shiftKey && event.target === focusableElements[0]) {\n            this._anchor.nativeElement.focus();\n\n            event.preventDefault();\n          } else if (!event.shiftKey && event.target === focusableElements[focusableElements.length - 1]) {\n            this._anchor.nativeElement.focus();\n\n            this.close();\n          }\n        } else {\n          fromEvent(event.target, 'focusout').pipe(take(1)).subscribe(({\n            relatedTarget\n          }) => {\n            if (!this._elementRef.nativeElement.contains(relatedTarget)) {\n              this.close();\n            }\n          });\n        }\n      }\n\n      return;\n    } // opening / navigating\n\n\n    if (isEventFromToggle || itemElement) {\n      this.open();\n\n      if (itemElements.length) {\n        switch (key) {\n          case Key.ArrowDown:\n            position = Math.min(position + 1, itemElements.length - 1);\n            break;\n\n          case Key.ArrowUp:\n            if (this._isDropup() && position === -1) {\n              position = itemElements.length - 1;\n              break;\n            }\n\n            position = Math.max(position - 1, 0);\n            break;\n\n          case Key.Home:\n            position = 0;\n            break;\n\n          case Key.End:\n            position = itemElements.length - 1;\n            break;\n        }\n\n        itemElements[position].focus();\n      }\n\n      event.preventDefault();\n    }\n  }\n\n  _isDropup() {\n    return this._elementRef.nativeElement.classList.contains('dropup');\n  }\n\n  _isEventFromToggle(event) {\n    return this._anchor.nativeElement.contains(event.target);\n  }\n\n  _getMenuElements() {\n    const menu = this._menu;\n\n    if (menu == null) {\n      return [];\n    }\n\n    return menu.menuItems.filter(item => !item.disabled).map(item => item.elementRef.nativeElement);\n  }\n\n  _positionMenu() {\n    const menu = this._menu;\n\n    if (this.isOpen() && menu) {\n      if (this.display === 'dynamic') {\n        this._positioning.update();\n\n        this._applyPlacementClasses();\n      } else {\n        this._applyPlacementClasses(this._getFirstPlacement(this.placement));\n      }\n    }\n  }\n\n  _getFirstPlacement(placement) {\n    return Array.isArray(placement) ? placement[0] : placement.split(' ')[0];\n  }\n\n  _resetContainer() {\n    const renderer = this._renderer;\n\n    if (this._menu) {\n      const dropdownElement = this._elementRef.nativeElement;\n      const dropdownMenuElement = this._menu.nativeElement;\n      renderer.appendChild(dropdownElement, dropdownMenuElement);\n    }\n\n    if (this._bodyContainer) {\n      renderer.removeChild(this._document.body, this._bodyContainer);\n      this._bodyContainer = null;\n    }\n  }\n\n  _applyContainer(container = null) {\n    this._resetContainer();\n\n    if (container === 'body') {\n      const renderer = this._renderer;\n      const dropdownMenuElement = this._menu.nativeElement;\n      const bodyContainer = this._bodyContainer = this._bodyContainer || renderer.createElement('div'); // Override some styles to have the positioning working\n\n      renderer.setStyle(bodyContainer, 'position', 'absolute');\n      renderer.setStyle(dropdownMenuElement, 'position', 'static');\n      renderer.setStyle(bodyContainer, 'z-index', '1055');\n      renderer.appendChild(bodyContainer, dropdownMenuElement);\n      renderer.appendChild(this._document.body, bodyContainer);\n    }\n\n    this._applyCustomDropdownClass(this.dropdownClass);\n  }\n\n  _applyCustomDropdownClass(newClass, oldClass) {\n    const targetElement = this.container === 'body' ? this._bodyContainer : this._elementRef.nativeElement;\n\n    if (targetElement) {\n      if (oldClass) {\n        this._renderer.removeClass(targetElement, oldClass);\n      }\n\n      if (newClass) {\n        this._renderer.addClass(targetElement, newClass);\n      }\n    }\n  }\n\n  _applyPlacementClasses(placement) {\n    const menu = this._menu;\n\n    if (menu) {\n      if (!placement) {\n        placement = this._getFirstPlacement(this.placement);\n      }\n\n      const renderer = this._renderer;\n      const dropdownElement = this._elementRef.nativeElement; // remove the current placement classes\n\n      renderer.removeClass(dropdownElement, 'dropup');\n      renderer.removeClass(dropdownElement, 'dropdown');\n      const {\n        nativeElement\n      } = menu;\n\n      if (this.display === 'static') {\n        menu.placement = null;\n        renderer.setAttribute(nativeElement, 'data-bs-popper', 'static');\n      } else {\n        menu.placement = placement;\n        renderer.removeAttribute(nativeElement, 'data-bs-popper');\n      }\n      /*\n      * apply the new placement\n      * in case of top use up-arrow or down-arrow otherwise\n      */\n\n\n      const dropdownClass = placement.search('^top') !== -1 ? 'dropup' : 'dropdown';\n      renderer.addClass(dropdownElement, dropdownClass);\n      const bodyContainer = this._bodyContainer;\n\n      if (bodyContainer) {\n        renderer.removeClass(bodyContainer, 'dropup');\n        renderer.removeClass(bodyContainer, 'dropdown');\n        renderer.addClass(bodyContainer, dropdownClass);\n      }\n    }\n  }\n\n}\n\nNgbDropdown.ɵfac = function NgbDropdown_Factory(t) {\n  return new (t || NgbDropdown)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(NgbDropdownConfig), i0.ɵɵdirectiveInject(DOCUMENT), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(NgbNavbar, 8));\n};\n\nNgbDropdown.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: NgbDropdown,\n  selectors: [[\"\", \"ngbDropdown\", \"\"]],\n  contentQueries: function NgbDropdown_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, NgbDropdownMenu, 5);\n      i0.ɵɵcontentQuery(dirIndex, NgbDropdownAnchor, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._menu = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._anchor = _t.first);\n    }\n  },\n  hostVars: 2,\n  hostBindings: function NgbDropdown_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"show\", ctx.isOpen());\n    }\n  },\n  inputs: {\n    autoClose: \"autoClose\",\n    dropdownClass: \"dropdownClass\",\n    _open: [\"open\", \"_open\"],\n    placement: \"placement\",\n    container: \"container\",\n    display: \"display\"\n  },\n  outputs: {\n    openChange: \"openChange\"\n  },\n  exportAs: [\"ngbDropdown\"],\n  features: [i0.ɵɵNgOnChangesFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbDropdown, [{\n    type: Directive,\n    args: [{\n      selector: '[ngbDropdown]',\n      exportAs: 'ngbDropdown',\n      host: {\n        '[class.show]': 'isOpen()'\n      }\n    }]\n  }], function () {\n    return [{\n      type: i0.ChangeDetectorRef\n    }, {\n      type: NgbDropdownConfig\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: i0.NgZone\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: NgbNavbar,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, {\n    _menu: [{\n      type: ContentChild,\n      args: [NgbDropdownMenu, {\n        static: false\n      }]\n    }],\n    _anchor: [{\n      type: ContentChild,\n      args: [NgbDropdownAnchor, {\n        static: false\n      }]\n    }],\n    autoClose: [{\n      type: Input\n    }],\n    dropdownClass: [{\n      type: Input\n    }],\n    _open: [{\n      type: Input,\n      args: ['open']\n    }],\n    placement: [{\n      type: Input\n    }],\n    container: [{\n      type: Input\n    }],\n    display: [{\n      type: Input\n    }],\n    openChange: [{\n      type: Output\n    }]\n  });\n})();\n\nconst NGB_DROPDOWN_DIRECTIVES = [NgbDropdown, NgbDropdownAnchor, NgbDropdownToggle, NgbDropdownMenu, NgbDropdownItem, NgbNavbar];\n\nclass NgbDropdownModule {}\n\nNgbDropdownModule.ɵfac = function NgbDropdownModule_Factory(t) {\n  return new (t || NgbDropdownModule)();\n};\n\nNgbDropdownModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: NgbDropdownModule\n});\nNgbDropdownModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbDropdownModule, [{\n    type: NgModule,\n    args: [{\n      declarations: NGB_DROPDOWN_DIRECTIVES,\n      exports: NGB_DROPDOWN_DIRECTIVES\n    }]\n  }], null, null);\n})();\n\nclass ContentRef {\n  constructor(nodes, viewRef, componentRef) {\n    this.nodes = nodes;\n    this.viewRef = viewRef;\n    this.componentRef = componentRef;\n  }\n\n}\n\nclass PopupService {\n  constructor(_type, _injector, _viewContainerRef, _renderer, _ngZone, _applicationRef) {\n    this._type = _type;\n    this._injector = _injector;\n    this._viewContainerRef = _viewContainerRef;\n    this._renderer = _renderer;\n    this._ngZone = _ngZone;\n    this._applicationRef = _applicationRef;\n    this._windowRef = null;\n    this._contentRef = null;\n  }\n\n  open(content, context, animation = false) {\n    if (!this._windowRef) {\n      this._contentRef = this._getContentRef(content, context);\n      this._windowRef = this._viewContainerRef.createComponent(this._type, {\n        index: this._viewContainerRef.length,\n        injector: this._injector,\n        projectableNodes: this._contentRef.nodes\n      });\n    }\n\n    const {\n      nativeElement\n    } = this._windowRef.location;\n\n    const transition$ = this._ngZone.onStable.pipe(take(1), mergeMap(() => ngbRunTransition(this._ngZone, nativeElement, ({\n      classList\n    }) => classList.add('show'), {\n      animation,\n      runningTransition: 'continue'\n    })));\n\n    return {\n      windowRef: this._windowRef,\n      transition$\n    };\n  }\n\n  close(animation = false) {\n    if (!this._windowRef) {\n      return of(undefined);\n    }\n\n    return ngbRunTransition(this._ngZone, this._windowRef.location.nativeElement, ({\n      classList\n    }) => classList.remove('show'), {\n      animation,\n      runningTransition: 'stop'\n    }).pipe(tap(() => {\n      var _a;\n\n      if (this._windowRef) {\n        // this is required because of the container='body' option\n        this._viewContainerRef.remove(this._viewContainerRef.indexOf(this._windowRef.hostView));\n\n        this._windowRef = null;\n      }\n\n      if ((_a = this._contentRef) === null || _a === void 0 ? void 0 : _a.viewRef) {\n        this._applicationRef.detachView(this._contentRef.viewRef);\n\n        this._contentRef.viewRef.destroy();\n\n        this._contentRef = null;\n      }\n    }));\n  }\n\n  _getContentRef(content, context) {\n    if (!content) {\n      return new ContentRef([]);\n    } else if (content instanceof TemplateRef) {\n      const viewRef = content.createEmbeddedView(context);\n\n      this._applicationRef.attachView(viewRef);\n\n      return new ContentRef([viewRef.rootNodes], viewRef);\n    } else {\n      return new ContentRef([[this._renderer.createText(`${content}`)]]);\n    }\n  }\n\n}\n\nclass NgbModalBackdrop {\n  constructor(_el, _zone) {\n    this._el = _el;\n    this._zone = _zone;\n  }\n\n  ngOnInit() {\n    this._zone.onStable.asObservable().pipe(take(1)).subscribe(() => {\n      ngbRunTransition(this._zone, this._el.nativeElement, (element, animation) => {\n        if (animation) {\n          reflow(element);\n        }\n\n        element.classList.add('show');\n      }, {\n        animation: this.animation,\n        runningTransition: 'continue'\n      });\n    });\n  }\n\n  hide() {\n    return ngbRunTransition(this._zone, this._el.nativeElement, ({\n      classList\n    }) => classList.remove('show'), {\n      animation: this.animation,\n      runningTransition: 'stop'\n    });\n  }\n\n}\n\nNgbModalBackdrop.ɵfac = function NgbModalBackdrop_Factory(t) {\n  return new (t || NgbModalBackdrop)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone));\n};\n\nNgbModalBackdrop.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NgbModalBackdrop,\n  selectors: [[\"ngb-modal-backdrop\"]],\n  hostAttrs: [2, \"z-index\", \"1055\"],\n  hostVars: 6,\n  hostBindings: function NgbModalBackdrop_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassMap(\"modal-backdrop\" + (ctx.backdropClass ? \" \" + ctx.backdropClass : \"\"));\n      i0.ɵɵclassProp(\"show\", !ctx.animation)(\"fade\", ctx.animation);\n    }\n  },\n  inputs: {\n    animation: \"animation\",\n    backdropClass: \"backdropClass\"\n  },\n  decls: 0,\n  vars: 0,\n  template: function NgbModalBackdrop_Template(rf, ctx) {},\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbModalBackdrop, [{\n    type: Component,\n    args: [{\n      selector: 'ngb-modal-backdrop',\n      encapsulation: ViewEncapsulation.None,\n      template: '',\n      host: {\n        '[class]': '\"modal-backdrop\" + (backdropClass ? \" \" + backdropClass : \"\")',\n        '[class.show]': '!animation',\n        '[class.fade]': 'animation',\n        'style': 'z-index: 1055'\n      }\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.NgZone\n    }];\n  }, {\n    animation: [{\n      type: Input\n    }],\n    backdropClass: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * A reference to the currently opened (active) modal.\n *\n * Instances of this class can be injected into your component passed as modal content.\n * So you can `.close()` or `.dismiss()` the modal window from your component.\n */\n\n\nclass NgbActiveModal {\n  /**\n   * Closes the modal with an optional `result` value.\n   *\n   * The `NgbModalRef.result` promise will be resolved with the provided value.\n   */\n  close(result) {}\n  /**\n   * Dismisses the modal with an optional `reason` value.\n   *\n   * The `NgbModalRef.result` promise will be rejected with the provided value.\n   */\n\n\n  dismiss(reason) {}\n\n}\n/**\n * A reference to the newly opened modal returned by the `NgbModal.open()` method.\n */\n\n\nclass NgbModalRef {\n  constructor(_windowCmptRef, _contentRef, _backdropCmptRef, _beforeDismiss) {\n    this._windowCmptRef = _windowCmptRef;\n    this._contentRef = _contentRef;\n    this._backdropCmptRef = _backdropCmptRef;\n    this._beforeDismiss = _beforeDismiss;\n    this._closed = new Subject();\n    this._dismissed = new Subject();\n    this._hidden = new Subject();\n\n    _windowCmptRef.instance.dismissEvent.subscribe(reason => {\n      this.dismiss(reason);\n    });\n\n    this.result = new Promise((resolve, reject) => {\n      this._resolve = resolve;\n      this._reject = reject;\n    });\n    this.result.then(null, () => {});\n  }\n  /**\n   * The instance of a component used for the modal content.\n   *\n   * When a `TemplateRef` is used as the content or when the modal is closed, will return `undefined`.\n   */\n\n\n  get componentInstance() {\n    if (this._contentRef && this._contentRef.componentRef) {\n      return this._contentRef.componentRef.instance;\n    }\n  }\n  /**\n   * The observable that emits when the modal is closed via the `.close()` method.\n   *\n   * It will emit the result passed to the `.close()` method.\n   *\n   * @since 8.0.0\n   */\n\n\n  get closed() {\n    return this._closed.asObservable().pipe(takeUntil(this._hidden));\n  }\n  /**\n   * The observable that emits when the modal is dismissed via the `.dismiss()` method.\n   *\n   * It will emit the reason passed to the `.dismissed()` method by the user, or one of the internal\n   * reasons like backdrop click or ESC key press.\n   *\n   * @since 8.0.0\n   */\n\n\n  get dismissed() {\n    return this._dismissed.asObservable().pipe(takeUntil(this._hidden));\n  }\n  /**\n   * The observable that emits when both modal window and backdrop are closed and animations were finished.\n   * At this point modal and backdrop elements will be removed from the DOM tree.\n   *\n   * This observable will be completed after emitting.\n   *\n   * @since 8.0.0\n   */\n\n\n  get hidden() {\n    return this._hidden.asObservable();\n  }\n  /**\n   * The observable that emits when modal is fully visible and animation was finished.\n   * Modal DOM element is always available synchronously after calling 'modal.open()' service.\n   *\n   * This observable will be completed after emitting.\n   * It will not emit, if modal is closed before open animation is finished.\n   *\n   * @since 8.0.0\n   */\n\n\n  get shown() {\n    return this._windowCmptRef.instance.shown.asObservable();\n  }\n  /**\n   * Closes the modal with an optional `result` value.\n   *\n   * The `NgbMobalRef.result` promise will be resolved with the provided value.\n   */\n\n\n  close(result) {\n    if (this._windowCmptRef) {\n      this._closed.next(result);\n\n      this._resolve(result);\n\n      this._removeModalElements();\n    }\n  }\n\n  _dismiss(reason) {\n    this._dismissed.next(reason);\n\n    this._reject(reason);\n\n    this._removeModalElements();\n  }\n  /**\n   * Dismisses the modal with an optional `reason` value.\n   *\n   * The `NgbModalRef.result` promise will be rejected with the provided value.\n   */\n\n\n  dismiss(reason) {\n    if (this._windowCmptRef) {\n      if (!this._beforeDismiss) {\n        this._dismiss(reason);\n      } else {\n        const dismiss = this._beforeDismiss();\n\n        if (isPromise(dismiss)) {\n          dismiss.then(result => {\n            if (result !== false) {\n              this._dismiss(reason);\n            }\n          }, () => {});\n        } else if (dismiss !== false) {\n          this._dismiss(reason);\n        }\n      }\n    }\n  }\n\n  _removeModalElements() {\n    const windowTransition$ = this._windowCmptRef.instance.hide();\n\n    const backdropTransition$ = this._backdropCmptRef ? this._backdropCmptRef.instance.hide() : of(undefined); // hiding window\n\n    windowTransition$.subscribe(() => {\n      const {\n        nativeElement\n      } = this._windowCmptRef.location;\n      nativeElement.parentNode.removeChild(nativeElement);\n\n      this._windowCmptRef.destroy();\n\n      if (this._contentRef && this._contentRef.viewRef) {\n        this._contentRef.viewRef.destroy();\n      }\n\n      this._windowCmptRef = null;\n      this._contentRef = null;\n    }); // hiding backdrop\n\n    backdropTransition$.subscribe(() => {\n      if (this._backdropCmptRef) {\n        const {\n          nativeElement\n        } = this._backdropCmptRef.location;\n        nativeElement.parentNode.removeChild(nativeElement);\n\n        this._backdropCmptRef.destroy();\n\n        this._backdropCmptRef = null;\n      }\n    }); // all done\n\n    zip(windowTransition$, backdropTransition$).subscribe(() => {\n      this._hidden.next();\n\n      this._hidden.complete();\n    });\n  }\n\n}\n\nvar ModalDismissReasons;\n\n(function (ModalDismissReasons) {\n  ModalDismissReasons[ModalDismissReasons[\"BACKDROP_CLICK\"] = 0] = \"BACKDROP_CLICK\";\n  ModalDismissReasons[ModalDismissReasons[\"ESC\"] = 1] = \"ESC\";\n})(ModalDismissReasons || (ModalDismissReasons = {}));\n\nclass NgbModalWindow {\n  constructor(_document, _elRef, _zone) {\n    this._document = _document;\n    this._elRef = _elRef;\n    this._zone = _zone;\n    this._closed$ = new Subject();\n    this._elWithFocus = null; // element that is focused prior to modal opening\n\n    this.backdrop = true;\n    this.keyboard = true;\n    this.dismissEvent = new EventEmitter();\n    this.shown = new Subject();\n    this.hidden = new Subject();\n  }\n\n  get fullscreenClass() {\n    return this.fullscreen === true ? ' modal-fullscreen' : isString(this.fullscreen) ? ` modal-fullscreen-${this.fullscreen}-down` : '';\n  }\n\n  dismiss(reason) {\n    this.dismissEvent.emit(reason);\n  }\n\n  ngOnInit() {\n    this._elWithFocus = this._document.activeElement;\n\n    this._zone.onStable.asObservable().pipe(take(1)).subscribe(() => {\n      this._show();\n    });\n  }\n\n  ngOnDestroy() {\n    this._disableEventHandling();\n  }\n\n  hide() {\n    const {\n      nativeElement\n    } = this._elRef;\n    const context = {\n      animation: this.animation,\n      runningTransition: 'stop'\n    };\n    const windowTransition$ = ngbRunTransition(this._zone, nativeElement, () => nativeElement.classList.remove('show'), context);\n    const dialogTransition$ = ngbRunTransition(this._zone, this._dialogEl.nativeElement, () => {}, context);\n    const transitions$ = zip(windowTransition$, dialogTransition$);\n    transitions$.subscribe(() => {\n      this.hidden.next();\n      this.hidden.complete();\n    });\n\n    this._disableEventHandling();\n\n    this._restoreFocus();\n\n    return transitions$;\n  }\n\n  _show() {\n    const context = {\n      animation: this.animation,\n      runningTransition: 'continue'\n    };\n    const windowTransition$ = ngbRunTransition(this._zone, this._elRef.nativeElement, (element, animation) => {\n      if (animation) {\n        reflow(element);\n      }\n\n      element.classList.add('show');\n    }, context);\n    const dialogTransition$ = ngbRunTransition(this._zone, this._dialogEl.nativeElement, () => {}, context);\n    zip(windowTransition$, dialogTransition$).subscribe(() => {\n      this.shown.next();\n      this.shown.complete();\n    });\n\n    this._enableEventHandling();\n\n    this._setFocus();\n  }\n\n  _enableEventHandling() {\n    const {\n      nativeElement\n    } = this._elRef;\n\n    this._zone.runOutsideAngular(() => {\n      fromEvent(nativeElement, 'keydown').pipe(takeUntil(this._closed$),\n      /* eslint-disable-next-line deprecation/deprecation */\n      filter(e => e.which === Key.Escape)).subscribe(event => {\n        if (this.keyboard) {\n          requestAnimationFrame(() => {\n            if (!event.defaultPrevented) {\n              this._zone.run(() => this.dismiss(ModalDismissReasons.ESC));\n            }\n          });\n        } else if (this.backdrop === 'static') {\n          this._bumpBackdrop();\n        }\n      }); // We're listening to 'mousedown' and 'mouseup' to prevent modal from closing when pressing the mouse\n      // inside the modal dialog and releasing it outside\n\n      let preventClose = false;\n      fromEvent(this._dialogEl.nativeElement, 'mousedown').pipe(takeUntil(this._closed$), tap(() => preventClose = false), switchMap(() => fromEvent(nativeElement, 'mouseup').pipe(takeUntil(this._closed$), take(1))), filter(({\n        target\n      }) => nativeElement === target)).subscribe(() => {\n        preventClose = true;\n      }); // We're listening to 'click' to dismiss modal on modal window click, except when:\n      // 1. clicking on modal dialog itself\n      // 2. closing was prevented by mousedown/up handlers\n      // 3. clicking on scrollbar when the viewport is too small and modal doesn't fit (click is not triggered at all)\n\n      fromEvent(nativeElement, 'click').pipe(takeUntil(this._closed$)).subscribe(({\n        target\n      }) => {\n        if (nativeElement === target) {\n          if (this.backdrop === 'static') {\n            this._bumpBackdrop();\n          } else if (this.backdrop === true && !preventClose) {\n            this._zone.run(() => this.dismiss(ModalDismissReasons.BACKDROP_CLICK));\n          }\n        }\n\n        preventClose = false;\n      });\n    });\n  }\n\n  _disableEventHandling() {\n    this._closed$.next();\n  }\n\n  _setFocus() {\n    const {\n      nativeElement\n    } = this._elRef;\n\n    if (!nativeElement.contains(document.activeElement)) {\n      const autoFocusable = nativeElement.querySelector(`[ngbAutofocus]`);\n      const firstFocusable = getFocusableBoundaryElements(nativeElement)[0];\n      const elementToFocus = autoFocusable || firstFocusable || nativeElement;\n      elementToFocus.focus();\n    }\n  }\n\n  _restoreFocus() {\n    const body = this._document.body;\n    const elWithFocus = this._elWithFocus;\n    let elementToFocus;\n\n    if (elWithFocus && elWithFocus['focus'] && body.contains(elWithFocus)) {\n      elementToFocus = elWithFocus;\n    } else {\n      elementToFocus = body;\n    }\n\n    this._zone.runOutsideAngular(() => {\n      setTimeout(() => elementToFocus.focus());\n      this._elWithFocus = null;\n    });\n  }\n\n  _bumpBackdrop() {\n    if (this.backdrop === 'static') {\n      ngbRunTransition(this._zone, this._elRef.nativeElement, ({\n        classList\n      }) => {\n        classList.add('modal-static');\n        return () => classList.remove('modal-static');\n      }, {\n        animation: this.animation,\n        runningTransition: 'continue'\n      });\n    }\n  }\n\n}\n\nNgbModalWindow.ɵfac = function NgbModalWindow_Factory(t) {\n  return new (t || NgbModalWindow)(i0.ɵɵdirectiveInject(DOCUMENT), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone));\n};\n\nNgbModalWindow.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NgbModalWindow,\n  selectors: [[\"ngb-modal-window\"]],\n  viewQuery: function NgbModalWindow_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c31, 7);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._dialogEl = _t.first);\n    }\n  },\n  hostAttrs: [\"role\", \"dialog\", \"tabindex\", \"-1\"],\n  hostVars: 7,\n  hostBindings: function NgbModalWindow_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵattribute(\"aria-modal\", true)(\"aria-labelledby\", ctx.ariaLabelledBy)(\"aria-describedby\", ctx.ariaDescribedBy);\n      i0.ɵɵclassMap(\"modal d-block\" + (ctx.windowClass ? \" \" + ctx.windowClass : \"\"));\n      i0.ɵɵclassProp(\"fade\", ctx.animation);\n    }\n  },\n  inputs: {\n    animation: \"animation\",\n    ariaLabelledBy: \"ariaLabelledBy\",\n    ariaDescribedBy: \"ariaDescribedBy\",\n    backdrop: \"backdrop\",\n    centered: \"centered\",\n    fullscreen: \"fullscreen\",\n    keyboard: \"keyboard\",\n    scrollable: \"scrollable\",\n    size: \"size\",\n    windowClass: \"windowClass\",\n    modalDialogClass: \"modalDialogClass\"\n  },\n  outputs: {\n    dismissEvent: \"dismiss\"\n  },\n  ngContentSelectors: _c3,\n  decls: 4,\n  vars: 2,\n  consts: [[\"role\", \"document\"], [\"dialog\", \"\"], [1, \"modal-content\"]],\n  template: function NgbModalWindow_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵelementStart(0, \"div\", 0, 1)(2, \"div\", 2);\n      i0.ɵɵprojection(3);\n      i0.ɵɵelementEnd()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵclassMap(\"modal-dialog\" + (ctx.size ? \" modal-\" + ctx.size : \"\") + (ctx.centered ? \" modal-dialog-centered\" : \"\") + ctx.fullscreenClass + (ctx.scrollable ? \" modal-dialog-scrollable\" : \"\") + (ctx.modalDialogClass ? \" \" + ctx.modalDialogClass : \"\"));\n    }\n  },\n  styles: [\"ngb-modal-window .component-host-scrollable{display:flex;flex-direction:column;overflow:hidden}\\n\"],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbModalWindow, [{\n    type: Component,\n    args: [{\n      selector: 'ngb-modal-window',\n      host: {\n        '[class]': '\"modal d-block\" + (windowClass ? \" \" + windowClass : \"\")',\n        '[class.fade]': 'animation',\n        'role': 'dialog',\n        'tabindex': '-1',\n        '[attr.aria-modal]': 'true',\n        '[attr.aria-labelledby]': 'ariaLabelledBy',\n        '[attr.aria-describedby]': 'ariaDescribedBy'\n      },\n      template: `\n    <div #dialog [class]=\"'modal-dialog' + (size ? ' modal-' + size : '') + (centered ? ' modal-dialog-centered' : '') +\n     fullscreenClass + (scrollable ? ' modal-dialog-scrollable' : '') + (modalDialogClass ? ' ' + modalDialogClass : '')\" role=\"document\">\n        <div class=\"modal-content\"><ng-content></ng-content></div>\n    </div>\n    `,\n      encapsulation: ViewEncapsulation.None,\n      styles: [\"ngb-modal-window .component-host-scrollable{display:flex;flex-direction:column;overflow:hidden}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.NgZone\n    }];\n  }, {\n    _dialogEl: [{\n      type: ViewChild,\n      args: ['dialog', {\n        static: true\n      }]\n    }],\n    animation: [{\n      type: Input\n    }],\n    ariaLabelledBy: [{\n      type: Input\n    }],\n    ariaDescribedBy: [{\n      type: Input\n    }],\n    backdrop: [{\n      type: Input\n    }],\n    centered: [{\n      type: Input\n    }],\n    fullscreen: [{\n      type: Input\n    }],\n    keyboard: [{\n      type: Input\n    }],\n    scrollable: [{\n      type: Input\n    }],\n    size: [{\n      type: Input\n    }],\n    windowClass: [{\n      type: Input\n    }],\n    modalDialogClass: [{\n      type: Input\n    }],\n    dismissEvent: [{\n      type: Output,\n      args: ['dismiss']\n    }]\n  });\n})();\n/**\n * Utility to handle the scrollbar.\n *\n * It allows to hide the scrollbar and compensate the lack of a vertical scrollbar\n * by adding an equivalent padding on the right of the body, and to revert this change.\n */\n\n\nclass ScrollBar {\n  constructor(_document) {\n    this._document = _document;\n  }\n  /**\n   * To be called to hide a potential vertical scrollbar:\n   * - if a scrollbar is there and has a width greater than 0, adds some compensation\n   * padding to the body to keep the same layout as when the scrollbar is there\n   * - adds overflow: hidden\n   *\n   * @return a callback used to revert the change\n   */\n\n\n  hide() {\n    const scrollbarWidth = Math.abs(window.innerWidth - this._document.documentElement.clientWidth);\n    const body = this._document.body;\n    const bodyStyle = body.style;\n    const {\n      overflow,\n      paddingRight\n    } = bodyStyle;\n\n    if (scrollbarWidth > 0) {\n      const actualPadding = parseFloat(window.getComputedStyle(body).paddingRight);\n      bodyStyle.paddingRight = `${actualPadding + scrollbarWidth}px`;\n    }\n\n    bodyStyle.overflow = 'hidden';\n    return () => {\n      if (scrollbarWidth > 0) {\n        bodyStyle.paddingRight = paddingRight;\n      }\n\n      bodyStyle.overflow = overflow;\n    };\n  }\n\n}\n\nScrollBar.ɵfac = function ScrollBar_Factory(t) {\n  return new (t || ScrollBar)(i0.ɵɵinject(DOCUMENT));\n};\n\nScrollBar.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: ScrollBar,\n  factory: ScrollBar.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ScrollBar, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, null);\n})();\n\nclass NgbModalStack {\n  constructor(_applicationRef, _injector, _document, _scrollBar, _rendererFactory, _ngZone) {\n    this._applicationRef = _applicationRef;\n    this._injector = _injector;\n    this._document = _document;\n    this._scrollBar = _scrollBar;\n    this._rendererFactory = _rendererFactory;\n    this._ngZone = _ngZone;\n    this._activeWindowCmptHasChanged = new Subject();\n    this._ariaHiddenValues = new Map();\n    this._scrollBarRestoreFn = null;\n    this._backdropAttributes = ['animation', 'backdropClass'];\n    this._modalRefs = [];\n    this._windowAttributes = ['animation', 'ariaLabelledBy', 'ariaDescribedBy', 'backdrop', 'centered', 'fullscreen', 'keyboard', 'scrollable', 'size', 'windowClass', 'modalDialogClass'];\n    this._windowCmpts = [];\n    this._activeInstances = new EventEmitter(); // Trap focus on active WindowCmpt\n\n    this._activeWindowCmptHasChanged.subscribe(() => {\n      if (this._windowCmpts.length) {\n        const activeWindowCmpt = this._windowCmpts[this._windowCmpts.length - 1];\n        ngbFocusTrap(this._ngZone, activeWindowCmpt.location.nativeElement, this._activeWindowCmptHasChanged);\n\n        this._revertAriaHidden();\n\n        this._setAriaHidden(activeWindowCmpt.location.nativeElement);\n      }\n    });\n  }\n\n  _restoreScrollBar() {\n    const scrollBarRestoreFn = this._scrollBarRestoreFn;\n\n    if (scrollBarRestoreFn) {\n      this._scrollBarRestoreFn = null;\n      scrollBarRestoreFn();\n    }\n  }\n\n  _hideScrollBar() {\n    if (!this._scrollBarRestoreFn) {\n      this._scrollBarRestoreFn = this._scrollBar.hide();\n    }\n  }\n\n  open(moduleCFR, contentInjector, content, options) {\n    const containerEl = options.container instanceof HTMLElement ? options.container : isDefined(options.container) ? this._document.querySelector(options.container) : this._document.body;\n\n    const renderer = this._rendererFactory.createRenderer(null, null);\n\n    if (!containerEl) {\n      throw new Error(`The specified modal container \"${options.container || 'body'}\" was not found in the DOM.`);\n    }\n\n    this._hideScrollBar();\n\n    const activeModal = new NgbActiveModal();\n\n    const contentRef = this._getContentRef(moduleCFR, options.injector || contentInjector, content, activeModal, options);\n\n    let backdropCmptRef = options.backdrop !== false ? this._attachBackdrop(moduleCFR, containerEl) : undefined;\n\n    let windowCmptRef = this._attachWindowComponent(moduleCFR, containerEl, contentRef);\n\n    let ngbModalRef = new NgbModalRef(windowCmptRef, contentRef, backdropCmptRef, options.beforeDismiss);\n\n    this._registerModalRef(ngbModalRef);\n\n    this._registerWindowCmpt(windowCmptRef); // We have to cleanup DOM after the last modal when BOTH 'hidden' was emitted and 'result' promise was resolved:\n    // - with animations OFF, 'hidden' emits synchronously, then 'result' is resolved asynchronously\n    // - with animations ON, 'result' is resolved asynchronously, then 'hidden' emits asynchronously\n\n\n    ngbModalRef.hidden.pipe(take(1)).subscribe(() => Promise.resolve(true).then(() => {\n      if (!this._modalRefs.length) {\n        renderer.removeClass(this._document.body, 'modal-open');\n\n        this._restoreScrollBar();\n\n        this._revertAriaHidden();\n      }\n    }));\n\n    activeModal.close = result => {\n      ngbModalRef.close(result);\n    };\n\n    activeModal.dismiss = reason => {\n      ngbModalRef.dismiss(reason);\n    };\n\n    this._applyWindowOptions(windowCmptRef.instance, options);\n\n    if (this._modalRefs.length === 1) {\n      renderer.addClass(this._document.body, 'modal-open');\n    }\n\n    if (backdropCmptRef && backdropCmptRef.instance) {\n      this._applyBackdropOptions(backdropCmptRef.instance, options);\n\n      backdropCmptRef.changeDetectorRef.detectChanges();\n    }\n\n    windowCmptRef.changeDetectorRef.detectChanges();\n    return ngbModalRef;\n  }\n\n  get activeInstances() {\n    return this._activeInstances;\n  }\n\n  dismissAll(reason) {\n    this._modalRefs.forEach(ngbModalRef => ngbModalRef.dismiss(reason));\n  }\n\n  hasOpenModals() {\n    return this._modalRefs.length > 0;\n  }\n\n  _attachBackdrop(moduleCFR, containerEl) {\n    let backdropFactory = moduleCFR.resolveComponentFactory(NgbModalBackdrop);\n    let backdropCmptRef = backdropFactory.create(this._injector);\n\n    this._applicationRef.attachView(backdropCmptRef.hostView);\n\n    containerEl.appendChild(backdropCmptRef.location.nativeElement);\n    return backdropCmptRef;\n  }\n\n  _attachWindowComponent(moduleCFR, containerEl, contentRef) {\n    let windowFactory = moduleCFR.resolveComponentFactory(NgbModalWindow);\n    let windowCmptRef = windowFactory.create(this._injector, contentRef.nodes);\n\n    this._applicationRef.attachView(windowCmptRef.hostView);\n\n    containerEl.appendChild(windowCmptRef.location.nativeElement);\n    return windowCmptRef;\n  }\n\n  _applyWindowOptions(windowInstance, options) {\n    this._windowAttributes.forEach(optionName => {\n      if (isDefined(options[optionName])) {\n        windowInstance[optionName] = options[optionName];\n      }\n    });\n  }\n\n  _applyBackdropOptions(backdropInstance, options) {\n    this._backdropAttributes.forEach(optionName => {\n      if (isDefined(options[optionName])) {\n        backdropInstance[optionName] = options[optionName];\n      }\n    });\n  }\n\n  _getContentRef(moduleCFR, contentInjector, content, activeModal, options) {\n    if (!content) {\n      return new ContentRef([]);\n    } else if (content instanceof TemplateRef) {\n      return this._createFromTemplateRef(content, activeModal);\n    } else if (isString(content)) {\n      return this._createFromString(content);\n    } else {\n      return this._createFromComponent(moduleCFR, contentInjector, content, activeModal, options);\n    }\n  }\n\n  _createFromTemplateRef(content, activeModal) {\n    const context = {\n      $implicit: activeModal,\n\n      close(result) {\n        activeModal.close(result);\n      },\n\n      dismiss(reason) {\n        activeModal.dismiss(reason);\n      }\n\n    };\n    const viewRef = content.createEmbeddedView(context);\n\n    this._applicationRef.attachView(viewRef);\n\n    return new ContentRef([viewRef.rootNodes], viewRef);\n  }\n\n  _createFromString(content) {\n    const component = this._document.createTextNode(`${content}`);\n\n    return new ContentRef([[component]]);\n  }\n\n  _createFromComponent(moduleCFR, contentInjector, content, context, options) {\n    const contentCmptFactory = moduleCFR.resolveComponentFactory(content);\n    const modalContentInjector = Injector.create({\n      providers: [{\n        provide: NgbActiveModal,\n        useValue: context\n      }],\n      parent: contentInjector\n    });\n    const componentRef = contentCmptFactory.create(modalContentInjector);\n    const componentNativeEl = componentRef.location.nativeElement;\n\n    if (options.scrollable) {\n      componentNativeEl.classList.add('component-host-scrollable');\n    }\n\n    this._applicationRef.attachView(componentRef.hostView); // FIXME: we should here get rid of the component nativeElement\n    // and use `[Array.from(componentNativeEl.childNodes)]` instead and remove the above CSS class.\n\n\n    return new ContentRef([[componentNativeEl]], componentRef.hostView, componentRef);\n  }\n\n  _setAriaHidden(element) {\n    const parent = element.parentElement;\n\n    if (parent && element !== this._document.body) {\n      Array.from(parent.children).forEach(sibling => {\n        if (sibling !== element && sibling.nodeName !== 'SCRIPT') {\n          this._ariaHiddenValues.set(sibling, sibling.getAttribute('aria-hidden'));\n\n          sibling.setAttribute('aria-hidden', 'true');\n        }\n      });\n\n      this._setAriaHidden(parent);\n    }\n  }\n\n  _revertAriaHidden() {\n    this._ariaHiddenValues.forEach((value, element) => {\n      if (value) {\n        element.setAttribute('aria-hidden', value);\n      } else {\n        element.removeAttribute('aria-hidden');\n      }\n    });\n\n    this._ariaHiddenValues.clear();\n  }\n\n  _registerModalRef(ngbModalRef) {\n    const unregisterModalRef = () => {\n      const index = this._modalRefs.indexOf(ngbModalRef);\n\n      if (index > -1) {\n        this._modalRefs.splice(index, 1);\n\n        this._activeInstances.emit(this._modalRefs);\n      }\n    };\n\n    this._modalRefs.push(ngbModalRef);\n\n    this._activeInstances.emit(this._modalRefs);\n\n    ngbModalRef.result.then(unregisterModalRef, unregisterModalRef);\n  }\n\n  _registerWindowCmpt(ngbWindowCmpt) {\n    this._windowCmpts.push(ngbWindowCmpt);\n\n    this._activeWindowCmptHasChanged.next();\n\n    ngbWindowCmpt.onDestroy(() => {\n      const index = this._windowCmpts.indexOf(ngbWindowCmpt);\n\n      if (index > -1) {\n        this._windowCmpts.splice(index, 1);\n\n        this._activeWindowCmptHasChanged.next();\n      }\n    });\n  }\n\n}\n\nNgbModalStack.ɵfac = function NgbModalStack_Factory(t) {\n  return new (t || NgbModalStack)(i0.ɵɵinject(i0.ApplicationRef), i0.ɵɵinject(i0.Injector), i0.ɵɵinject(DOCUMENT), i0.ɵɵinject(ScrollBar), i0.ɵɵinject(i0.RendererFactory2), i0.ɵɵinject(i0.NgZone));\n};\n\nNgbModalStack.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: NgbModalStack,\n  factory: NgbModalStack.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbModalStack, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: i0.ApplicationRef\n    }, {\n      type: i0.Injector\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: ScrollBar\n    }, {\n      type: i0.RendererFactory2\n    }, {\n      type: i0.NgZone\n    }];\n  }, null);\n})();\n/**\n * A configuration service for the [`NgbModal`](#/components/modal/api#NgbModal) service.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all modals used in the application.\n*\n* @since 3.1.0\n*/\n\n\nclass NgbModalConfig {\n  constructor(_ngbConfig) {\n    this._ngbConfig = _ngbConfig;\n    this.backdrop = true;\n    this.fullscreen = false;\n    this.keyboard = true;\n  }\n\n  get animation() {\n    return this._animation === undefined ? this._ngbConfig.animation : this._animation;\n  }\n\n  set animation(animation) {\n    this._animation = animation;\n  }\n\n}\n\nNgbModalConfig.ɵfac = function NgbModalConfig_Factory(t) {\n  return new (t || NgbModalConfig)(i0.ɵɵinject(NgbConfig));\n};\n\nNgbModalConfig.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: NgbModalConfig,\n  factory: NgbModalConfig.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbModalConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: NgbConfig\n    }];\n  }, null);\n})();\n/**\n * A service for opening modal windows.\n *\n * Creating a modal is straightforward: create a component or a template and pass it as an argument to\n * the `.open()` method.\n */\n\n\nclass NgbModal {\n  constructor(_moduleCFR, _injector, _modalStack, _config) {\n    this._moduleCFR = _moduleCFR;\n    this._injector = _injector;\n    this._modalStack = _modalStack;\n    this._config = _config;\n  }\n  /**\n   * Opens a new modal window with the specified content and supplied options.\n   *\n   * Content can be provided as a `TemplateRef` or a component type. If you pass a component type as content,\n   * then instances of those components can be injected with an instance of the `NgbActiveModal` class. You can then\n   * use `NgbActiveModal` methods to close / dismiss modals from \"inside\" of your component.\n   *\n   * Also see the [`NgbModalOptions`](#/components/modal/api#NgbModalOptions) for the list of supported options.\n   */\n\n\n  open(content, options = {}) {\n    const combinedOptions = Object.assign(Object.assign(Object.assign({}, this._config), {\n      animation: this._config.animation\n    }), options);\n    return this._modalStack.open(this._moduleCFR, this._injector, content, combinedOptions);\n  }\n  /**\n   * Returns an observable that holds the active modal instances.\n   */\n\n\n  get activeInstances() {\n    return this._modalStack.activeInstances;\n  }\n  /**\n   * Dismisses all currently displayed modal windows with the supplied reason.\n   *\n   * @since 3.1.0\n   */\n\n\n  dismissAll(reason) {\n    this._modalStack.dismissAll(reason);\n  }\n  /**\n   * Indicates if there are currently any open modal windows in the application.\n   *\n   * @since 3.3.0\n   */\n\n\n  hasOpenModals() {\n    return this._modalStack.hasOpenModals();\n  }\n\n}\n\nNgbModal.ɵfac = function NgbModal_Factory(t) {\n  return new (t || NgbModal)(i0.ɵɵinject(i0.ComponentFactoryResolver), i0.ɵɵinject(i0.Injector), i0.ɵɵinject(NgbModalStack), i0.ɵɵinject(NgbModalConfig));\n};\n\nNgbModal.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: NgbModal,\n  factory: NgbModal.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbModal, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: i0.ComponentFactoryResolver\n    }, {\n      type: i0.Injector\n    }, {\n      type: NgbModalStack\n    }, {\n      type: NgbModalConfig\n    }];\n  }, null);\n})();\n\nclass NgbModalModule {}\n\nNgbModalModule.ɵfac = function NgbModalModule_Factory(t) {\n  return new (t || NgbModalModule)();\n};\n\nNgbModalModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: NgbModalModule\n});\nNgbModalModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  providers: [NgbModal]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbModalModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [NgbModalBackdrop, NgbModalWindow],\n      providers: [NgbModal]\n    }]\n  }], null, null);\n})();\n/**\n * A configuration service for the [`NgbNav`](#/components/nav/api#NgbNav) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the navs used in the application.\n *\n * @since 5.2.0\n */\n\n\nclass NgbNavConfig {\n  constructor(_ngbConfig) {\n    this._ngbConfig = _ngbConfig;\n    this.destroyOnHide = true;\n    this.orientation = 'horizontal';\n    this.roles = 'tablist';\n    this.keyboard = false;\n  }\n\n  get animation() {\n    return this._animation === undefined ? this._ngbConfig.animation : this._animation;\n  }\n\n  set animation(animation) {\n    this._animation = animation;\n  }\n\n}\n\nNgbNavConfig.ɵfac = function NgbNavConfig_Factory(t) {\n  return new (t || NgbNavConfig)(i0.ɵɵinject(NgbConfig));\n};\n\nNgbNavConfig.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: NgbNavConfig,\n  factory: NgbNavConfig.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbNavConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: NgbConfig\n    }];\n  }, null);\n})();\n\nconst isValidNavId = id => isDefined(id) && id !== '';\n\nlet navCounter = 0;\n/**\n * This directive must be used to wrap content to be displayed in the nav.\n *\n * @since 5.2.0\n */\n\nclass NgbNavContent {\n  constructor(templateRef) {\n    this.templateRef = templateRef;\n  }\n\n}\n\nNgbNavContent.ɵfac = function NgbNavContent_Factory(t) {\n  return new (t || NgbNavContent)(i0.ɵɵdirectiveInject(i0.TemplateRef));\n};\n\nNgbNavContent.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: NgbNavContent,\n  selectors: [[\"ng-template\", \"ngbNavContent\", \"\"]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbNavContent, [{\n    type: Directive,\n    args: [{\n      selector: 'ng-template[ngbNavContent]'\n    }]\n  }], function () {\n    return [{\n      type: i0.TemplateRef\n    }];\n  }, null);\n})();\n/**\n * The directive used to group nav link and related nav content. As well as set nav identifier and some options.\n *\n * @since 5.2.0\n */\n\n\nclass NgbNavItem {\n  constructor(nav, elementRef) {\n    this.elementRef = elementRef;\n    /**\n     * If `true`, the current nav item is disabled and can't be toggled by user.\n     *\n     * Nevertheless disabled nav can be selected programmatically via the `.select()` method and the `[activeId]` binding.\n     */\n\n    this.disabled = false;\n    /**\n     * An event emitted when the fade in transition is finished on the related nav content\n     *\n     * @since 8.0.0\n     */\n\n    this.shown = new EventEmitter();\n    /**\n     * An event emitted when the fade out transition is finished on the related nav content\n     *\n     * @since 8.0.0\n     */\n\n    this.hidden = new EventEmitter(); // TODO: cf https://github.com/angular/angular/issues/30106\n\n    this._nav = nav;\n  }\n\n  ngAfterContentChecked() {\n    // We are using @ContentChildren instead of @ContentChild as in the Angular version being used\n    // only @ContentChildren allows us to specify the {descendants: false} option.\n    // Without {descendants: false} we are hitting bugs described in:\n    // https://github.com/ng-bootstrap/ng-bootstrap/issues/2240\n    this.contentTpl = this.contentTpls.first;\n  }\n\n  ngOnInit() {\n    if (!isDefined(this.domId)) {\n      this.domId = `ngb-nav-${navCounter++}`;\n    }\n  }\n\n  get active() {\n    return this._nav.activeId === this.id;\n  }\n\n  get id() {\n    return isValidNavId(this._id) ? this._id : this.domId;\n  }\n\n  get panelDomId() {\n    return `${this.domId}-panel`;\n  }\n\n  isPanelInDom() {\n    return (isDefined(this.destroyOnHide) ? !this.destroyOnHide : !this._nav.destroyOnHide) || this.active;\n  }\n\n}\n\nNgbNavItem.ɵfac = function NgbNavItem_Factory(t) {\n  return new (t || NgbNavItem)(i0.ɵɵdirectiveInject(forwardRef(() => NgbNav)), i0.ɵɵdirectiveInject(i0.ElementRef));\n};\n\nNgbNavItem.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: NgbNavItem,\n  selectors: [[\"\", \"ngbNavItem\", \"\"]],\n  contentQueries: function NgbNavItem_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, NgbNavContent, 4);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.contentTpls = _t);\n    }\n  },\n  hostVars: 2,\n  hostBindings: function NgbNavItem_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"nav-item\", true);\n    }\n  },\n  inputs: {\n    destroyOnHide: \"destroyOnHide\",\n    disabled: \"disabled\",\n    domId: \"domId\",\n    _id: [\"ngbNavItem\", \"_id\"]\n  },\n  outputs: {\n    shown: \"shown\",\n    hidden: \"hidden\"\n  },\n  exportAs: [\"ngbNavItem\"]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbNavItem, [{\n    type: Directive,\n    args: [{\n      selector: '[ngbNavItem]',\n      exportAs: 'ngbNavItem',\n      host: {\n        '[class.nav-item]': 'true'\n      }\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [forwardRef(() => NgbNav)]\n      }]\n    }, {\n      type: i0.ElementRef\n    }];\n  }, {\n    destroyOnHide: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    domId: [{\n      type: Input\n    }],\n    _id: [{\n      type: Input,\n      args: ['ngbNavItem']\n    }],\n    shown: [{\n      type: Output\n    }],\n    hidden: [{\n      type: Output\n    }],\n    contentTpls: [{\n      type: ContentChildren,\n      args: [NgbNavContent, {\n        descendants: false\n      }]\n    }]\n  });\n})();\n/**\n * A nav directive that helps with implementing tabbed navigation components.\n *\n * @since 5.2.0\n */\n\n\nclass NgbNav {\n  constructor(role, config, _cd, _document) {\n    this.role = role;\n    this._cd = _cd;\n    this._document = _document;\n    /**\n     * The event emitted after the active nav changes\n     * The payload of the event is the newly active nav id\n     *\n     * If you want to prevent nav change, you should use `(navChange)` event\n     */\n\n    this.activeIdChange = new EventEmitter();\n    /**\n     * An event emitted when the fade in transition is finished for one of the items.\n     *\n     * Payload of the event is the nav id that was just shown.\n     *\n     * @since 8.0.0\n     */\n\n    this.shown = new EventEmitter();\n    /**\n     * An event emitted when the fade out transition is finished for one of the items.\n     *\n     * Payload of the event is the nav id that was just hidden.\n     *\n     * @since 8.0.0\n     */\n\n    this.hidden = new EventEmitter();\n    this.destroy$ = new Subject();\n    this.navItemChange$ = new Subject();\n    /**\n     * The nav change event emitted right before the nav change happens on user click.\n     *\n     * This event won't be emitted if nav is changed programmatically via `[activeId]` or `.select()`.\n     *\n     * See [`NgbNavChangeEvent`](#/components/nav/api#NgbNavChangeEvent) for payload details.\n     */\n\n    this.navChange = new EventEmitter();\n    this.animation = config.animation;\n    this.destroyOnHide = config.destroyOnHide;\n    this.orientation = config.orientation;\n    this.roles = config.roles;\n    this.keyboard = config.keyboard;\n  }\n\n  click(item) {\n    if (!item.disabled) {\n      this._updateActiveId(item.id);\n    }\n  }\n\n  onKeyDown(event) {\n    if (this.roles !== 'tablist' || !this.keyboard) {\n      return;\n    }\n    /* eslint-disable-next-line deprecation/deprecation */\n\n\n    const key = event.which;\n    const enabledLinks = this.links.filter(link => !link.navItem.disabled);\n    const {\n      length\n    } = enabledLinks;\n    let position = -1;\n    enabledLinks.forEach((link, index) => {\n      if (link.elRef.nativeElement === this._document.activeElement) {\n        position = index;\n      }\n    });\n\n    if (length) {\n      switch (key) {\n        case Key.ArrowLeft:\n          if (this.orientation === 'vertical') {\n            return;\n          }\n\n          position = (position - 1 + length) % length;\n          break;\n\n        case Key.ArrowRight:\n          if (this.orientation === 'vertical') {\n            return;\n          }\n\n          position = (position + 1) % length;\n          break;\n\n        case Key.ArrowDown:\n          if (this.orientation === 'horizontal') {\n            return;\n          }\n\n          position = (position + 1) % length;\n          break;\n\n        case Key.ArrowUp:\n          if (this.orientation === 'horizontal') {\n            return;\n          }\n\n          position = (position - 1 + length) % length;\n          break;\n\n        case Key.Home:\n          position = 0;\n          break;\n\n        case Key.End:\n          position = length - 1;\n          break;\n      }\n\n      if (this.keyboard === 'changeWithArrows') {\n        this.select(enabledLinks[position].navItem.id);\n      }\n\n      enabledLinks[position].elRef.nativeElement.focus();\n      event.preventDefault();\n    }\n  }\n  /**\n   * Selects the nav with the given id and shows its associated pane.\n   * Any other nav that was previously selected becomes unselected and its associated pane is hidden.\n   */\n\n\n  select(id) {\n    this._updateActiveId(id, false);\n  }\n\n  ngAfterContentInit() {\n    if (!isDefined(this.activeId)) {\n      const nextId = this.items.first ? this.items.first.id : null;\n\n      if (isValidNavId(nextId)) {\n        this._updateActiveId(nextId, false);\n\n        this._cd.detectChanges();\n      }\n    }\n\n    this.items.changes.pipe(takeUntil(this.destroy$)).subscribe(() => this._notifyItemChanged(this.activeId));\n  }\n\n  ngOnChanges({\n    activeId\n  }) {\n    if (activeId && !activeId.firstChange) {\n      this._notifyItemChanged(activeId.currentValue);\n    }\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n  }\n\n  _updateActiveId(nextId, emitNavChange = true) {\n    if (this.activeId !== nextId) {\n      let defaultPrevented = false;\n\n      if (emitNavChange) {\n        this.navChange.emit({\n          activeId: this.activeId,\n          nextId,\n          preventDefault: () => {\n            defaultPrevented = true;\n          }\n        });\n      }\n\n      if (!defaultPrevented) {\n        this.activeId = nextId;\n        this.activeIdChange.emit(nextId);\n\n        this._notifyItemChanged(nextId);\n      }\n    }\n  }\n\n  _notifyItemChanged(nextItemId) {\n    this.navItemChange$.next(this._getItemById(nextItemId));\n  }\n\n  _getItemById(itemId) {\n    return this.items && this.items.find(item => item.id === itemId) || null;\n  }\n\n}\n\nNgbNav.ɵfac = function NgbNav_Factory(t) {\n  return new (t || NgbNav)(i0.ɵɵinjectAttribute('role'), i0.ɵɵdirectiveInject(NgbNavConfig), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(DOCUMENT));\n};\n\nNgbNav.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: NgbNav,\n  selectors: [[\"\", \"ngbNav\", \"\"]],\n  contentQueries: function NgbNav_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, NgbNavItem, 4);\n      i0.ɵɵcontentQuery(dirIndex, NgbNavLink, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.items = _t);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.links = _t);\n    }\n  },\n  hostVars: 6,\n  hostBindings: function NgbNav_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"keydown.arrowLeft\", function NgbNav_keydown_arrowLeft_HostBindingHandler($event) {\n        return ctx.onKeyDown($event);\n      })(\"keydown.arrowRight\", function NgbNav_keydown_arrowRight_HostBindingHandler($event) {\n        return ctx.onKeyDown($event);\n      })(\"keydown.arrowDown\", function NgbNav_keydown_arrowDown_HostBindingHandler($event) {\n        return ctx.onKeyDown($event);\n      })(\"keydown.arrowUp\", function NgbNav_keydown_arrowUp_HostBindingHandler($event) {\n        return ctx.onKeyDown($event);\n      })(\"keydown.Home\", function NgbNav_keydown_Home_HostBindingHandler($event) {\n        return ctx.onKeyDown($event);\n      })(\"keydown.End\", function NgbNav_keydown_End_HostBindingHandler($event) {\n        return ctx.onKeyDown($event);\n      });\n    }\n\n    if (rf & 2) {\n      i0.ɵɵattribute(\"aria-orientation\", ctx.orientation === \"vertical\" && ctx.roles === \"tablist\" ? \"vertical\" : undefined)(\"role\", ctx.role ? ctx.role : ctx.roles ? \"tablist\" : undefined);\n      i0.ɵɵclassProp(\"nav\", true)(\"flex-column\", ctx.orientation === \"vertical\");\n    }\n  },\n  inputs: {\n    activeId: \"activeId\",\n    animation: \"animation\",\n    destroyOnHide: \"destroyOnHide\",\n    orientation: \"orientation\",\n    roles: \"roles\",\n    keyboard: \"keyboard\"\n  },\n  outputs: {\n    activeIdChange: \"activeIdChange\",\n    shown: \"shown\",\n    hidden: \"hidden\",\n    navChange: \"navChange\"\n  },\n  exportAs: [\"ngbNav\"],\n  features: [i0.ɵɵNgOnChangesFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbNav, [{\n    type: Directive,\n    args: [{\n      selector: '[ngbNav]',\n      exportAs: 'ngbNav',\n      host: {\n        '[class.nav]': 'true',\n        '[class.flex-column]': `orientation === 'vertical'`,\n        '[attr.aria-orientation]': `orientation === 'vertical' && roles === 'tablist' ? 'vertical' : undefined`,\n        '[attr.role]': `role ? role : roles ? 'tablist' : undefined`,\n        '(keydown.arrowLeft)': 'onKeyDown($event)',\n        '(keydown.arrowRight)': 'onKeyDown($event)',\n        '(keydown.arrowDown)': 'onKeyDown($event)',\n        '(keydown.arrowUp)': 'onKeyDown($event)',\n        '(keydown.Home)': 'onKeyDown($event)',\n        '(keydown.End)': 'onKeyDown($event)'\n      }\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Attribute,\n        args: ['role']\n      }]\n    }, {\n      type: NgbNavConfig\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, {\n    activeId: [{\n      type: Input\n    }],\n    activeIdChange: [{\n      type: Output\n    }],\n    animation: [{\n      type: Input\n    }],\n    destroyOnHide: [{\n      type: Input\n    }],\n    orientation: [{\n      type: Input\n    }],\n    roles: [{\n      type: Input\n    }],\n    keyboard: [{\n      type: Input\n    }],\n    shown: [{\n      type: Output\n    }],\n    hidden: [{\n      type: Output\n    }],\n    items: [{\n      type: ContentChildren,\n      args: [NgbNavItem]\n    }],\n    links: [{\n      type: ContentChildren,\n      args: [forwardRef(() => NgbNavLink), {\n        descendants: true\n      }]\n    }],\n    navChange: [{\n      type: Output\n    }]\n  });\n})();\n/**\n * A directive to put on the nav link.\n *\n * @since 5.2.0\n */\n\n\nclass NgbNavLink {\n  constructor(role, navItem, nav, elRef) {\n    this.role = role;\n    this.navItem = navItem;\n    this.nav = nav;\n    this.elRef = elRef;\n  }\n\n  hasNavItemClass() {\n    // with alternative markup we have to add `.nav-item` class, because `ngbNavItem` is on the ng-container\n    return this.navItem.elementRef.nativeElement.nodeType === Node.COMMENT_NODE;\n  }\n\n}\n\nNgbNavLink.ɵfac = function NgbNavLink_Factory(t) {\n  return new (t || NgbNavLink)(i0.ɵɵinjectAttribute('role'), i0.ɵɵdirectiveInject(NgbNavItem), i0.ɵɵdirectiveInject(NgbNav), i0.ɵɵdirectiveInject(i0.ElementRef));\n};\n\nNgbNavLink.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: NgbNavLink,\n  selectors: [[\"a\", \"ngbNavLink\", \"\"]],\n  hostAttrs: [\"href\", \"\"],\n  hostVars: 14,\n  hostBindings: function NgbNavLink_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"click\", function NgbNavLink_click_HostBindingHandler($event) {\n        ctx.nav.click(ctx.navItem);\n        return $event.preventDefault();\n      });\n    }\n\n    if (rf & 2) {\n      i0.ɵɵhostProperty(\"id\", ctx.navItem.domId);\n      i0.ɵɵattribute(\"role\", ctx.role ? ctx.role : ctx.nav.roles ? \"tab\" : undefined)(\"tabindex\", ctx.navItem.disabled ? -1 : undefined)(\"aria-controls\", ctx.navItem.isPanelInDom() ? ctx.navItem.panelDomId : null)(\"aria-selected\", ctx.navItem.active)(\"aria-disabled\", ctx.navItem.disabled);\n      i0.ɵɵclassProp(\"nav-link\", true)(\"nav-item\", ctx.hasNavItemClass())(\"active\", ctx.navItem.active)(\"disabled\", ctx.navItem.disabled);\n    }\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbNavLink, [{\n    type: Directive,\n    args: [{\n      selector: 'a[ngbNavLink]',\n      host: {\n        '[id]': 'navItem.domId',\n        '[class.nav-link]': 'true',\n        '[class.nav-item]': 'hasNavItemClass()',\n        '[attr.role]': `role ? role : nav.roles ? 'tab' : undefined`,\n        'href': '',\n        '[class.active]': 'navItem.active',\n        '[class.disabled]': 'navItem.disabled',\n        '[attr.tabindex]': 'navItem.disabled ? -1 : undefined',\n        '[attr.aria-controls]': 'navItem.isPanelInDom() ? navItem.panelDomId : null',\n        '[attr.aria-selected]': 'navItem.active',\n        '[attr.aria-disabled]': 'navItem.disabled',\n        '(click)': 'nav.click(navItem); $event.preventDefault()'\n      }\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Attribute,\n        args: ['role']\n      }]\n    }, {\n      type: NgbNavItem\n    }, {\n      type: NgbNav\n    }, {\n      type: i0.ElementRef\n    }];\n  }, null);\n})();\n\nconst ngbNavFadeOutTransition = ({\n  classList\n}) => {\n  classList.remove('show');\n  return () => classList.remove('active');\n};\n\nconst ngbNavFadeInTransition = (element, animation) => {\n  if (animation) {\n    reflow(element);\n  }\n\n  element.classList.add('show');\n};\n\nclass NgbNavPane {\n  constructor(elRef) {\n    this.elRef = elRef;\n  }\n\n}\n\nNgbNavPane.ɵfac = function NgbNavPane_Factory(t) {\n  return new (t || NgbNavPane)(i0.ɵɵdirectiveInject(i0.ElementRef));\n};\n\nNgbNavPane.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: NgbNavPane,\n  selectors: [[\"\", \"ngbNavPane\", \"\"]],\n  hostAttrs: [1, \"tab-pane\"],\n  hostVars: 5,\n  hostBindings: function NgbNavPane_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵhostProperty(\"id\", ctx.item.panelDomId);\n      i0.ɵɵattribute(\"role\", ctx.role ? ctx.role : ctx.nav.roles ? \"tabpanel\" : undefined)(\"aria-labelledby\", ctx.item.domId);\n      i0.ɵɵclassProp(\"fade\", ctx.nav.animation);\n    }\n  },\n  inputs: {\n    item: \"item\",\n    nav: \"nav\",\n    role: \"role\"\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbNavPane, [{\n    type: Directive,\n    args: [{\n      selector: '[ngbNavPane]',\n      host: {\n        '[id]': 'item.panelDomId',\n        'class': 'tab-pane',\n        '[class.fade]': 'nav.animation',\n        '[attr.role]': 'role ? role : nav.roles ? \"tabpanel\" : undefined',\n        '[attr.aria-labelledby]': 'item.domId'\n      }\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }];\n  }, {\n    item: [{\n      type: Input\n    }],\n    nav: [{\n      type: Input\n    }],\n    role: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * The outlet where currently active nav content will be displayed.\n *\n * @since 5.2.0\n */\n\n\nclass NgbNavOutlet {\n  constructor(_cd, _ngZone) {\n    this._cd = _cd;\n    this._ngZone = _ngZone;\n    this._activePane = null;\n  }\n\n  isPanelTransitioning(item) {\n    var _a;\n\n    return ((_a = this._activePane) === null || _a === void 0 ? void 0 : _a.item) === item;\n  }\n\n  ngAfterViewInit() {\n    var _a; // initial display\n\n\n    this._updateActivePane(); // this will be emitted for all 3 types of nav changes: .select(), [activeId] or (click)\n\n\n    this.nav.navItemChange$.pipe(takeUntil(this.nav.destroy$), startWith(((_a = this._activePane) === null || _a === void 0 ? void 0 : _a.item) || null), distinctUntilChanged(), skip(1)).subscribe(nextItem => {\n      const options = {\n        animation: this.nav.animation,\n        runningTransition: 'stop'\n      }; // next panel we're switching to will only appear in DOM after the change detection is done\n      // and `this._panes` will be updated\n\n      this._cd.detectChanges(); // fading out\n\n\n      if (this._activePane) {\n        ngbRunTransition(this._ngZone, this._activePane.elRef.nativeElement, ngbNavFadeOutTransition, options).subscribe(() => {\n          var _a;\n\n          const activeItem = (_a = this._activePane) === null || _a === void 0 ? void 0 : _a.item;\n          this._activePane = this._getPaneForItem(nextItem); // mark for check when transition finishes as outlet or parent containers might be OnPush\n          // without this the panes that have \"faded out\" will stay in DOM\n\n          this._cd.markForCheck(); // fading in\n\n\n          if (this._activePane) {\n            // we have to add the '.active' class before running the transition,\n            // because it should be in place before `ngbRunTransition` does `reflow()`\n            this._activePane.elRef.nativeElement.classList.add('active');\n\n            ngbRunTransition(this._ngZone, this._activePane.elRef.nativeElement, ngbNavFadeInTransition, options).subscribe(() => {\n              if (nextItem) {\n                nextItem.shown.emit();\n                this.nav.shown.emit(nextItem.id);\n              }\n            });\n          }\n\n          if (activeItem) {\n            activeItem.hidden.emit();\n            this.nav.hidden.emit(activeItem.id);\n          }\n        });\n      } else {\n        this._updateActivePane();\n      }\n    });\n  }\n\n  _updateActivePane() {\n    var _a, _b;\n\n    this._activePane = this._getActivePane();\n    (_a = this._activePane) === null || _a === void 0 ? void 0 : _a.elRef.nativeElement.classList.add('show');\n    (_b = this._activePane) === null || _b === void 0 ? void 0 : _b.elRef.nativeElement.classList.add('active');\n  }\n\n  _getPaneForItem(item) {\n    return this._panes && this._panes.find(pane => pane.item === item) || null;\n  }\n\n  _getActivePane() {\n    return this._panes && this._panes.find(pane => pane.item.active) || null;\n  }\n\n}\n\nNgbNavOutlet.ɵfac = function NgbNavOutlet_Factory(t) {\n  return new (t || NgbNavOutlet)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.NgZone));\n};\n\nNgbNavOutlet.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NgbNavOutlet,\n  selectors: [[\"\", \"ngbNavOutlet\", \"\"]],\n  viewQuery: function NgbNavOutlet_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(NgbNavPane, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._panes = _t);\n    }\n  },\n  hostVars: 2,\n  hostBindings: function NgbNavOutlet_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"tab-content\", true);\n    }\n  },\n  inputs: {\n    paneRole: \"paneRole\",\n    nav: [\"ngbNavOutlet\", \"nav\"]\n  },\n  attrs: _c32,\n  decls: 1,\n  vars: 1,\n  consts: [[\"ngFor\", \"\", 3, \"ngForOf\"], [\"ngbNavPane\", \"\", 3, \"item\", \"nav\", \"role\", 4, \"ngIf\"], [\"ngbNavPane\", \"\", 3, \"item\", \"nav\", \"role\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"]],\n  template: function NgbNavOutlet_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, NgbNavOutlet_ng_template_0_Template, 1, 1, \"ng-template\", 0);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngForOf\", ctx.nav.items);\n    }\n  },\n  directives: [i2.NgForOf, i2.NgIf, NgbNavPane, i2.NgTemplateOutlet],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbNavOutlet, [{\n    type: Component,\n    args: [{\n      selector: '[ngbNavOutlet]',\n      host: {\n        '[class.tab-content]': 'true'\n      },\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: `\n    <ng-template ngFor let-item [ngForOf]=\"nav.items\">\n      <div ngbNavPane *ngIf=\"item.isPanelInDom() || isPanelTransitioning(item)\" [item]=\"item\" [nav]=\"nav\" [role]=\"paneRole\">\n        <ng-template [ngTemplateOutlet]=\"item.contentTpl?.templateRef || null\"\n                     [ngTemplateOutletContext]=\"{$implicit: item.active || isPanelTransitioning(item)}\"></ng-template>\n      </div>\n    </ng-template>\n  `\n    }]\n  }], function () {\n    return [{\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i0.NgZone\n    }];\n  }, {\n    _panes: [{\n      type: ViewChildren,\n      args: [NgbNavPane]\n    }],\n    paneRole: [{\n      type: Input\n    }],\n    nav: [{\n      type: Input,\n      args: ['ngbNavOutlet']\n    }]\n  });\n})();\n\nconst NGB_NAV_DIRECTIVES = [NgbNavContent, NgbNav, NgbNavItem, NgbNavLink, NgbNavOutlet, NgbNavPane];\n\nclass NgbNavModule {}\n\nNgbNavModule.ɵfac = function NgbNavModule_Factory(t) {\n  return new (t || NgbNavModule)();\n};\n\nNgbNavModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: NgbNavModule\n});\nNgbNavModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbNavModule, [{\n    type: NgModule,\n    args: [{\n      declarations: NGB_NAV_DIRECTIVES,\n      exports: NGB_NAV_DIRECTIVES,\n      imports: [CommonModule]\n    }]\n  }], null, null);\n})();\n/**\n * A configuration service for the [`NgbPagination`](#/components/pagination/api#NgbPagination) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the paginations used in the application.\n */\n\n\nclass NgbPaginationConfig {\n  constructor() {\n    this.disabled = false;\n    this.boundaryLinks = false;\n    this.directionLinks = true;\n    this.ellipses = true;\n    this.maxSize = 0;\n    this.pageSize = 10;\n    this.rotate = false;\n  }\n\n}\n\nNgbPaginationConfig.ɵfac = function NgbPaginationConfig_Factory(t) {\n  return new (t || NgbPaginationConfig)();\n};\n\nNgbPaginationConfig.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: NgbPaginationConfig,\n  factory: NgbPaginationConfig.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbPaginationConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\n/**\n * A directive to match the 'ellipsis' link template\n *\n * @since 4.1.0\n */\n\n\nclass NgbPaginationEllipsis {\n  constructor(templateRef) {\n    this.templateRef = templateRef;\n  }\n\n}\n\nNgbPaginationEllipsis.ɵfac = function NgbPaginationEllipsis_Factory(t) {\n  return new (t || NgbPaginationEllipsis)(i0.ɵɵdirectiveInject(i0.TemplateRef));\n};\n\nNgbPaginationEllipsis.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: NgbPaginationEllipsis,\n  selectors: [[\"ng-template\", \"ngbPaginationEllipsis\", \"\"]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbPaginationEllipsis, [{\n    type: Directive,\n    args: [{\n      selector: 'ng-template[ngbPaginationEllipsis]'\n    }]\n  }], function () {\n    return [{\n      type: i0.TemplateRef\n    }];\n  }, null);\n})();\n/**\n * A directive to match the 'first' link template\n *\n * @since 4.1.0\n */\n\n\nclass NgbPaginationFirst {\n  constructor(templateRef) {\n    this.templateRef = templateRef;\n  }\n\n}\n\nNgbPaginationFirst.ɵfac = function NgbPaginationFirst_Factory(t) {\n  return new (t || NgbPaginationFirst)(i0.ɵɵdirectiveInject(i0.TemplateRef));\n};\n\nNgbPaginationFirst.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: NgbPaginationFirst,\n  selectors: [[\"ng-template\", \"ngbPaginationFirst\", \"\"]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbPaginationFirst, [{\n    type: Directive,\n    args: [{\n      selector: 'ng-template[ngbPaginationFirst]'\n    }]\n  }], function () {\n    return [{\n      type: i0.TemplateRef\n    }];\n  }, null);\n})();\n/**\n * A directive to match the 'last' link template\n *\n * @since 4.1.0\n */\n\n\nclass NgbPaginationLast {\n  constructor(templateRef) {\n    this.templateRef = templateRef;\n  }\n\n}\n\nNgbPaginationLast.ɵfac = function NgbPaginationLast_Factory(t) {\n  return new (t || NgbPaginationLast)(i0.ɵɵdirectiveInject(i0.TemplateRef));\n};\n\nNgbPaginationLast.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: NgbPaginationLast,\n  selectors: [[\"ng-template\", \"ngbPaginationLast\", \"\"]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbPaginationLast, [{\n    type: Directive,\n    args: [{\n      selector: 'ng-template[ngbPaginationLast]'\n    }]\n  }], function () {\n    return [{\n      type: i0.TemplateRef\n    }];\n  }, null);\n})();\n/**\n * A directive to match the 'next' link template\n *\n * @since 4.1.0\n */\n\n\nclass NgbPaginationNext {\n  constructor(templateRef) {\n    this.templateRef = templateRef;\n  }\n\n}\n\nNgbPaginationNext.ɵfac = function NgbPaginationNext_Factory(t) {\n  return new (t || NgbPaginationNext)(i0.ɵɵdirectiveInject(i0.TemplateRef));\n};\n\nNgbPaginationNext.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: NgbPaginationNext,\n  selectors: [[\"ng-template\", \"ngbPaginationNext\", \"\"]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbPaginationNext, [{\n    type: Directive,\n    args: [{\n      selector: 'ng-template[ngbPaginationNext]'\n    }]\n  }], function () {\n    return [{\n      type: i0.TemplateRef\n    }];\n  }, null);\n})();\n/**\n * A directive to match the page 'number' link template\n *\n * @since 4.1.0\n */\n\n\nclass NgbPaginationNumber {\n  constructor(templateRef) {\n    this.templateRef = templateRef;\n  }\n\n}\n\nNgbPaginationNumber.ɵfac = function NgbPaginationNumber_Factory(t) {\n  return new (t || NgbPaginationNumber)(i0.ɵɵdirectiveInject(i0.TemplateRef));\n};\n\nNgbPaginationNumber.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: NgbPaginationNumber,\n  selectors: [[\"ng-template\", \"ngbPaginationNumber\", \"\"]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbPaginationNumber, [{\n    type: Directive,\n    args: [{\n      selector: 'ng-template[ngbPaginationNumber]'\n    }]\n  }], function () {\n    return [{\n      type: i0.TemplateRef\n    }];\n  }, null);\n})();\n/**\n * A directive to match the 'previous' link template\n *\n * @since 4.1.0\n */\n\n\nclass NgbPaginationPrevious {\n  constructor(templateRef) {\n    this.templateRef = templateRef;\n  }\n\n}\n\nNgbPaginationPrevious.ɵfac = function NgbPaginationPrevious_Factory(t) {\n  return new (t || NgbPaginationPrevious)(i0.ɵɵdirectiveInject(i0.TemplateRef));\n};\n\nNgbPaginationPrevious.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: NgbPaginationPrevious,\n  selectors: [[\"ng-template\", \"ngbPaginationPrevious\", \"\"]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbPaginationPrevious, [{\n    type: Directive,\n    args: [{\n      selector: 'ng-template[ngbPaginationPrevious]'\n    }]\n  }], function () {\n    return [{\n      type: i0.TemplateRef\n    }];\n  }, null);\n})();\n/**\n * A directive to match the 'pages' whole content\n *\n * @since 9.1.0\n */\n\n\nclass NgbPaginationPages {\n  constructor(templateRef) {\n    this.templateRef = templateRef;\n  }\n\n}\n\nNgbPaginationPages.ɵfac = function NgbPaginationPages_Factory(t) {\n  return new (t || NgbPaginationPages)(i0.ɵɵdirectiveInject(i0.TemplateRef));\n};\n\nNgbPaginationPages.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: NgbPaginationPages,\n  selectors: [[\"ng-template\", \"ngbPaginationPages\", \"\"]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbPaginationPages, [{\n    type: Directive,\n    args: [{\n      selector: 'ng-template[ngbPaginationPages]'\n    }]\n  }], function () {\n    return [{\n      type: i0.TemplateRef\n    }];\n  }, null);\n})();\n/**\n * A component that displays page numbers and allows to customize them in several ways.\n */\n\n\nclass NgbPagination {\n  constructor(config) {\n    this.pageCount = 0;\n    this.pages = [];\n    /**\n     *  The current page.\n     *\n     *  Page numbers start with `1`.\n     */\n\n    this.page = 1;\n    /**\n     *  An event fired when the page is changed. Will fire only if collection size is set and all values are valid.\n     *\n     *  Event payload is the number of the newly selected page.\n     *\n     *  Page numbers start with `1`.\n     */\n\n    this.pageChange = new EventEmitter(true);\n    this.disabled = config.disabled;\n    this.boundaryLinks = config.boundaryLinks;\n    this.directionLinks = config.directionLinks;\n    this.ellipses = config.ellipses;\n    this.maxSize = config.maxSize;\n    this.pageSize = config.pageSize;\n    this.rotate = config.rotate;\n    this.size = config.size;\n  }\n\n  hasPrevious() {\n    return this.page > 1;\n  }\n\n  hasNext() {\n    return this.page < this.pageCount;\n  }\n\n  nextDisabled() {\n    return !this.hasNext() || this.disabled;\n  }\n\n  previousDisabled() {\n    return !this.hasPrevious() || this.disabled;\n  }\n\n  selectPage(pageNumber) {\n    this._updatePages(pageNumber);\n  }\n\n  ngOnChanges(changes) {\n    this._updatePages(this.page);\n  }\n\n  isEllipsis(pageNumber) {\n    return pageNumber === -1;\n  }\n  /**\n   * Appends ellipses and first/last page number to the displayed pages\n   */\n\n\n  _applyEllipses(start, end) {\n    if (this.ellipses) {\n      if (start > 0) {\n        // The first page will always be included. If the displayed range\n        // starts after the third page, then add ellipsis. But if the range\n        // starts on the third page, then add the second page instead of\n        // an ellipsis, because the ellipsis would only hide a single page.\n        if (start > 2) {\n          this.pages.unshift(-1);\n        } else if (start === 2) {\n          this.pages.unshift(2);\n        }\n\n        this.pages.unshift(1);\n      }\n\n      if (end < this.pageCount) {\n        // The last page will always be included. If the displayed range\n        // ends before the third-last page, then add ellipsis. But if the range\n        // ends on third-last page, then add the second-last page instead of\n        // an ellipsis, because the ellipsis would only hide a single page.\n        if (end < this.pageCount - 2) {\n          this.pages.push(-1);\n        } else if (end === this.pageCount - 2) {\n          this.pages.push(this.pageCount - 1);\n        }\n\n        this.pages.push(this.pageCount);\n      }\n    }\n  }\n  /**\n   * Rotates page numbers based on maxSize items visible.\n   * Currently selected page stays in the middle:\n   *\n   * Ex. for selected page = 6:\n   * [5,*6*,7] for maxSize = 3\n   * [4,5,*6*,7] for maxSize = 4\n   */\n\n\n  _applyRotation() {\n    let start = 0;\n    let end = this.pageCount;\n    let leftOffset = Math.floor(this.maxSize / 2);\n    let rightOffset = this.maxSize % 2 === 0 ? leftOffset - 1 : leftOffset;\n\n    if (this.page <= leftOffset) {\n      // very beginning, no rotation -> [0..maxSize]\n      end = this.maxSize;\n    } else if (this.pageCount - this.page < leftOffset) {\n      // very end, no rotation -> [len-maxSize..len]\n      start = this.pageCount - this.maxSize;\n    } else {\n      // rotate\n      start = this.page - leftOffset - 1;\n      end = this.page + rightOffset;\n    }\n\n    return [start, end];\n  }\n  /**\n   * Paginates page numbers based on maxSize items per page.\n   */\n\n\n  _applyPagination() {\n    let page = Math.ceil(this.page / this.maxSize) - 1;\n    let start = page * this.maxSize;\n    let end = start + this.maxSize;\n    return [start, end];\n  }\n\n  _setPageInRange(newPageNo) {\n    const prevPageNo = this.page;\n    this.page = getValueInRange(newPageNo, this.pageCount, 1);\n\n    if (this.page !== prevPageNo && isNumber(this.collectionSize)) {\n      this.pageChange.emit(this.page);\n    }\n  }\n\n  _updatePages(newPage) {\n    this.pageCount = Math.ceil(this.collectionSize / this.pageSize);\n\n    if (!isNumber(this.pageCount)) {\n      this.pageCount = 0;\n    } // fill-in model needed to render pages\n\n\n    this.pages.length = 0;\n\n    for (let i = 1; i <= this.pageCount; i++) {\n      this.pages.push(i);\n    } // set page within 1..max range\n\n\n    this._setPageInRange(newPage); // apply maxSize if necessary\n\n\n    if (this.maxSize > 0 && this.pageCount > this.maxSize) {\n      let start = 0;\n      let end = this.pageCount; // either paginating or rotating page numbers\n\n      if (this.rotate) {\n        [start, end] = this._applyRotation();\n      } else {\n        [start, end] = this._applyPagination();\n      }\n\n      this.pages = this.pages.slice(start, end); // adding ellipses\n\n      this._applyEllipses(start, end);\n    }\n  }\n\n}\n\nNgbPagination.ɵfac = function NgbPagination_Factory(t) {\n  return new (t || NgbPagination)(i0.ɵɵdirectiveInject(NgbPaginationConfig));\n};\n\nNgbPagination.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NgbPagination,\n  selectors: [[\"ngb-pagination\"]],\n  contentQueries: function NgbPagination_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, NgbPaginationEllipsis, 5);\n      i0.ɵɵcontentQuery(dirIndex, NgbPaginationFirst, 5);\n      i0.ɵɵcontentQuery(dirIndex, NgbPaginationLast, 5);\n      i0.ɵɵcontentQuery(dirIndex, NgbPaginationNext, 5);\n      i0.ɵɵcontentQuery(dirIndex, NgbPaginationNumber, 5);\n      i0.ɵɵcontentQuery(dirIndex, NgbPaginationPrevious, 5);\n      i0.ɵɵcontentQuery(dirIndex, NgbPaginationPages, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tplEllipsis = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tplFirst = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tplLast = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tplNext = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tplNumber = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tplPrevious = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tplPages = _t.first);\n    }\n  },\n  hostAttrs: [\"role\", \"navigation\"],\n  inputs: {\n    disabled: \"disabled\",\n    boundaryLinks: \"boundaryLinks\",\n    directionLinks: \"directionLinks\",\n    ellipses: \"ellipses\",\n    rotate: \"rotate\",\n    collectionSize: \"collectionSize\",\n    maxSize: \"maxSize\",\n    page: \"page\",\n    pageSize: \"pageSize\",\n    size: \"size\"\n  },\n  outputs: {\n    pageChange: \"pageChange\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 20,\n  vars: 12,\n  consts: function () {\n    let i18n_34;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @suppress {msgDescriptions}\n       */\n      const MSG__HOME_EDUARD_DESKTOP_COOKIE_DIALOGUE_ANGULAR_DOTNET_GOOGLE_ANALYTICS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2015_NG_BOOTSTRAP_MJS__35 = goog.getMsg(\"\\xAB\\xAB\");\n      i18n_34 = MSG__HOME_EDUARD_DESKTOP_COOKIE_DIALOGUE_ANGULAR_DOTNET_GOOGLE_ANALYTICS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2015_NG_BOOTSTRAP_MJS__35;\n    } else {\n      i18n_34 = $localize`:@@ngb.pagination.first:««`;\n    }\n\n    let i18n_36;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @suppress {msgDescriptions}\n       */\n      const MSG__HOME_EDUARD_DESKTOP_COOKIE_DIALOGUE_ANGULAR_DOTNET_GOOGLE_ANALYTICS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2015_NG_BOOTSTRAP_MJS__37 = goog.getMsg(\"\\xAB\");\n      i18n_36 = MSG__HOME_EDUARD_DESKTOP_COOKIE_DIALOGUE_ANGULAR_DOTNET_GOOGLE_ANALYTICS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2015_NG_BOOTSTRAP_MJS__37;\n    } else {\n      i18n_36 = $localize`:@@ngb.pagination.previous:«`;\n    }\n\n    let i18n_38;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @suppress {msgDescriptions}\n       */\n      const MSG__HOME_EDUARD_DESKTOP_COOKIE_DIALOGUE_ANGULAR_DOTNET_GOOGLE_ANALYTICS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2015_NG_BOOTSTRAP_MJS__39 = goog.getMsg(\"\\xBB\");\n      i18n_38 = MSG__HOME_EDUARD_DESKTOP_COOKIE_DIALOGUE_ANGULAR_DOTNET_GOOGLE_ANALYTICS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2015_NG_BOOTSTRAP_MJS__39;\n    } else {\n      i18n_38 = $localize`:@@ngb.pagination.next:»`;\n    }\n\n    let i18n_40;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @suppress {msgDescriptions}\n       */\n      const MSG__HOME_EDUARD_DESKTOP_COOKIE_DIALOGUE_ANGULAR_DOTNET_GOOGLE_ANALYTICS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2015_NG_BOOTSTRAP_MJS__41 = goog.getMsg(\"\\xBB\\xBB\");\n      i18n_40 = MSG__HOME_EDUARD_DESKTOP_COOKIE_DIALOGUE_ANGULAR_DOTNET_GOOGLE_ANALYTICS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2015_NG_BOOTSTRAP_MJS__41;\n    } else {\n      i18n_40 = $localize`:@@ngb.pagination.last:»»`;\n    }\n\n    let i18n_44;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @suppress {msgDescriptions}\n       */\n      const MSG__HOME_EDUARD_DESKTOP_COOKIE_DIALOGUE_ANGULAR_DOTNET_GOOGLE_ANALYTICS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2015_NG_BOOTSTRAP_MJS__45 = goog.getMsg(\"First\");\n      i18n_44 = MSG__HOME_EDUARD_DESKTOP_COOKIE_DIALOGUE_ANGULAR_DOTNET_GOOGLE_ANALYTICS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2015_NG_BOOTSTRAP_MJS__45;\n    } else {\n      i18n_44 = $localize`:@@ngb.pagination.first-aria:First`;\n    }\n\n    let i18n_47;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @suppress {msgDescriptions}\n       */\n      const MSG__HOME_EDUARD_DESKTOP_COOKIE_DIALOGUE_ANGULAR_DOTNET_GOOGLE_ANALYTICS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2015_NG_BOOTSTRAP_MJS__48 = goog.getMsg(\"Previous\");\n      i18n_47 = MSG__HOME_EDUARD_DESKTOP_COOKIE_DIALOGUE_ANGULAR_DOTNET_GOOGLE_ANALYTICS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2015_NG_BOOTSTRAP_MJS__48;\n    } else {\n      i18n_47 = $localize`:@@ngb.pagination.previous-aria:Previous`;\n    }\n\n    let i18n_50;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @suppress {msgDescriptions}\n       */\n      const MSG__HOME_EDUARD_DESKTOP_COOKIE_DIALOGUE_ANGULAR_DOTNET_GOOGLE_ANALYTICS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2015_NG_BOOTSTRAP_MJS__51 = goog.getMsg(\"Next\");\n      i18n_50 = MSG__HOME_EDUARD_DESKTOP_COOKIE_DIALOGUE_ANGULAR_DOTNET_GOOGLE_ANALYTICS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2015_NG_BOOTSTRAP_MJS__51;\n    } else {\n      i18n_50 = $localize`:@@ngb.pagination.next-aria:Next`;\n    }\n\n    let i18n_52;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @suppress {msgDescriptions}\n       */\n      const MSG__HOME_EDUARD_DESKTOP_COOKIE_DIALOGUE_ANGULAR_DOTNET_GOOGLE_ANALYTICS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2015_NG_BOOTSTRAP_MJS__53 = goog.getMsg(\"Last\");\n      i18n_52 = MSG__HOME_EDUARD_DESKTOP_COOKIE_DIALOGUE_ANGULAR_DOTNET_GOOGLE_ANALYTICS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2015_NG_BOOTSTRAP_MJS__53;\n    } else {\n      i18n_52 = $localize`:@@ngb.pagination.last-aria:Last`;\n    }\n\n    return [[\"first\", \"\"], [\"previous\", \"\"], [\"next\", \"\"], [\"last\", \"\"], [\"ellipsis\", \"\"], [\"defaultNumber\", \"\"], [\"defaultPages\", \"\"], [\"class\", \"page-item\", 3, \"disabled\", 4, \"ngIf\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [\"aria-hidden\", \"true\"], i18n_34, i18n_36, i18n_38, i18n_40, [\"class\", \"visually-hidden\", 4, \"ngIf\"], [1, \"visually-hidden\"], [\"class\", \"page-item\", 3, \"active\", \"disabled\", 4, \"ngFor\", \"ngForOf\"], [1, \"page-item\"], [\"class\", \"page-link\", \"tabindex\", \"-1\", \"aria-disabled\", \"true\", 4, \"ngIf\"], [\"class\", \"page-link\", \"href\", \"\", 3, \"click\", 4, \"ngIf\"], [\"tabindex\", \"-1\", \"aria-disabled\", \"true\", 1, \"page-link\"], [\"href\", \"\", 1, \"page-link\", 3, \"click\"], [\"aria-label\", i18n_44, \"href\", \"\", 1, \"page-link\", 3, \"click\"], [\"aria-label\", i18n_47, \"href\", \"\", 1, \"page-link\", 3, \"click\"], [\"aria-label\", i18n_50, \"href\", \"\", 1, \"page-link\", 3, \"click\"], [\"aria-label\", i18n_52, \"href\", \"\", 1, \"page-link\", 3, \"click\"]];\n  },\n  template: function NgbPagination_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, NgbPagination_ng_template_0_Template, 2, 0, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵtemplate(2, NgbPagination_ng_template_2_Template, 2, 0, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵtemplate(4, NgbPagination_ng_template_4_Template, 2, 0, \"ng-template\", null, 2, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵtemplate(6, NgbPagination_ng_template_6_Template, 2, 0, \"ng-template\", null, 3, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵtemplate(8, NgbPagination_ng_template_8_Template, 1, 0, \"ng-template\", null, 4, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵtemplate(10, NgbPagination_ng_template_10_Template, 2, 2, \"ng-template\", null, 5, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵtemplate(12, NgbPagination_ng_template_12_Template, 1, 1, \"ng-template\", null, 6, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵelementStart(14, \"ul\");\n      i0.ɵɵtemplate(15, NgbPagination_li_15_Template, 3, 9, \"li\", 7);\n      i0.ɵɵtemplate(16, NgbPagination_li_16_Template, 3, 8, \"li\", 7);\n      i0.ɵɵtemplate(17, NgbPagination_ng_template_17_Template, 0, 0, \"ng-template\", 8);\n      i0.ɵɵtemplate(18, NgbPagination_li_18_Template, 3, 9, \"li\", 7);\n      i0.ɵɵtemplate(19, NgbPagination_li_19_Template, 3, 9, \"li\", 7);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      const _r12 = i0.ɵɵreference(13);\n\n      i0.ɵɵadvance(14);\n      i0.ɵɵclassMap(\"pagination\" + (ctx.size ? \" pagination-\" + ctx.size : \"\"));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.boundaryLinks);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.directionLinks);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngTemplateOutlet\", (ctx.tplPages == null ? null : ctx.tplPages.templateRef) || _r12)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction3(8, _c54, ctx.page, ctx.pages, ctx.disabled));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.directionLinks);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.boundaryLinks);\n    }\n  },\n  directives: [i2.NgIf, i2.NgForOf, i2.NgTemplateOutlet],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbPagination, [{\n    type: Component,\n    args: [{\n      selector: 'ngb-pagination',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      host: {\n        'role': 'navigation'\n      },\n      template: `\n    <ng-template #first><span aria-hidden=\"true\" i18n=\"@@ngb.pagination.first\">&laquo;&laquo;</span></ng-template>\n    <ng-template #previous><span aria-hidden=\"true\" i18n=\"@@ngb.pagination.previous\">&laquo;</span></ng-template>\n    <ng-template #next><span aria-hidden=\"true\" i18n=\"@@ngb.pagination.next\">&raquo;</span></ng-template>\n    <ng-template #last><span aria-hidden=\"true\" i18n=\"@@ngb.pagination.last\">&raquo;&raquo;</span></ng-template>\n    <ng-template #ellipsis>...</ng-template>\n    <ng-template #defaultNumber let-page let-currentPage=\"currentPage\">\n      {{ page }}\n      <span *ngIf=\"page === currentPage\" class=\"visually-hidden\">(current)</span>\n    </ng-template>\n    <ng-template #defaultPages let-page let-pages=\"pages\" let-disabled=\"disabled\">\n      <li *ngFor=\"let pageNumber of pages\" class=\"page-item\" [class.active]=\"pageNumber === page\"\n        [class.disabled]=\"isEllipsis(pageNumber) || disabled\" [attr.aria-current]=\"(pageNumber === page ? 'page' : null)\">\n        <a *ngIf=\"isEllipsis(pageNumber)\" class=\"page-link\" tabindex=\"-1\" aria-disabled=\"true\">\n          <ng-template [ngTemplateOutlet]=\"tplEllipsis?.templateRef || ellipsis\"\n                      [ngTemplateOutletContext]=\"{disabled: true, currentPage: page}\"></ng-template>\n        </a>\n        <a *ngIf=\"!isEllipsis(pageNumber)\" class=\"page-link\" href (click)=\"selectPage(pageNumber); $event.preventDefault()\"\n          [attr.tabindex]=\"disabled ? '-1' : null\" [attr.aria-disabled]=\"disabled ? 'true' : null\">\n          <ng-template [ngTemplateOutlet]=\"tplNumber?.templateRef || defaultNumber\"\n                      [ngTemplateOutletContext]=\"{disabled: disabled, $implicit: pageNumber, currentPage: page}\"></ng-template>\n        </a>\n      </li>\n    </ng-template>\n    <ul [class]=\"'pagination' + (size ? ' pagination-' + size : '')\">\n      <li *ngIf=\"boundaryLinks\" class=\"page-item\"\n        [class.disabled]=\"previousDisabled()\">\n        <a aria-label=\"First\" i18n-aria-label=\"@@ngb.pagination.first-aria\" class=\"page-link\" href\n          (click)=\"selectPage(1); $event.preventDefault()\" [attr.tabindex]=\"previousDisabled() ? '-1' : null\"\n          [attr.aria-disabled]=\"previousDisabled() ? 'true' : null\">\n          <ng-template [ngTemplateOutlet]=\"tplFirst?.templateRef || first\"\n                       [ngTemplateOutletContext]=\"{disabled: previousDisabled(), currentPage: page}\"></ng-template>\n        </a>\n      </li>\n\n      <li *ngIf=\"directionLinks\" class=\"page-item\"\n        [class.disabled]=\"previousDisabled()\">\n        <a aria-label=\"Previous\" i18n-aria-label=\"@@ngb.pagination.previous-aria\" class=\"page-link\" href\n          (click)=\"selectPage(page-1); $event.preventDefault()\" [attr.tabindex]=\"previousDisabled() ? '-1' : null\"\n          [attr.aria-disabled]=\"previousDisabled() ? 'true' : null\">\n          <ng-template [ngTemplateOutlet]=\"tplPrevious?.templateRef || previous\"\n                       [ngTemplateOutletContext]=\"{disabled: previousDisabled()}\"></ng-template>\n        </a>\n      </li>\n      <ng-template\n        [ngTemplateOutlet]=\"tplPages?.templateRef || defaultPages\"\n        [ngTemplateOutletContext]=\"{ $implicit: page, pages: pages, disabled: disabled }\"\n      >\n      </ng-template>\n      <li *ngIf=\"directionLinks\" class=\"page-item\" [class.disabled]=\"nextDisabled()\">\n        <a aria-label=\"Next\" i18n-aria-label=\"@@ngb.pagination.next-aria\" class=\"page-link\" href\n          (click)=\"selectPage(page+1); $event.preventDefault()\" [attr.tabindex]=\"nextDisabled() ? '-1' : null\"\n          [attr.aria-disabled]=\"nextDisabled() ? 'true' : null\">\n          <ng-template [ngTemplateOutlet]=\"tplNext?.templateRef || next\"\n                       [ngTemplateOutletContext]=\"{disabled: nextDisabled(), currentPage: page}\"></ng-template>\n        </a>\n      </li>\n\n      <li *ngIf=\"boundaryLinks\" class=\"page-item\" [class.disabled]=\"nextDisabled()\">\n        <a aria-label=\"Last\" i18n-aria-label=\"@@ngb.pagination.last-aria\" class=\"page-link\" href\n          (click)=\"selectPage(pageCount); $event.preventDefault()\" [attr.tabindex]=\"nextDisabled() ? '-1' : null\"\n          [attr.aria-disabled]=\"nextDisabled() ? 'true' : null\">\n          <ng-template [ngTemplateOutlet]=\"tplLast?.templateRef || last\"\n                       [ngTemplateOutletContext]=\"{disabled: nextDisabled(), currentPage: page}\"></ng-template>\n        </a>\n      </li>\n    </ul>\n  `\n    }]\n  }], function () {\n    return [{\n      type: NgbPaginationConfig\n    }];\n  }, {\n    tplEllipsis: [{\n      type: ContentChild,\n      args: [NgbPaginationEllipsis, {\n        static: false\n      }]\n    }],\n    tplFirst: [{\n      type: ContentChild,\n      args: [NgbPaginationFirst, {\n        static: false\n      }]\n    }],\n    tplLast: [{\n      type: ContentChild,\n      args: [NgbPaginationLast, {\n        static: false\n      }]\n    }],\n    tplNext: [{\n      type: ContentChild,\n      args: [NgbPaginationNext, {\n        static: false\n      }]\n    }],\n    tplNumber: [{\n      type: ContentChild,\n      args: [NgbPaginationNumber, {\n        static: false\n      }]\n    }],\n    tplPrevious: [{\n      type: ContentChild,\n      args: [NgbPaginationPrevious, {\n        static: false\n      }]\n    }],\n    tplPages: [{\n      type: ContentChild,\n      args: [NgbPaginationPages, {\n        static: false\n      }]\n    }],\n    disabled: [{\n      type: Input\n    }],\n    boundaryLinks: [{\n      type: Input\n    }],\n    directionLinks: [{\n      type: Input\n    }],\n    ellipses: [{\n      type: Input\n    }],\n    rotate: [{\n      type: Input\n    }],\n    collectionSize: [{\n      type: Input\n    }],\n    maxSize: [{\n      type: Input\n    }],\n    page: [{\n      type: Input\n    }],\n    pageSize: [{\n      type: Input\n    }],\n    pageChange: [{\n      type: Output\n    }],\n    size: [{\n      type: Input\n    }]\n  });\n})();\n\nconst DIRECTIVES = [NgbPagination, NgbPaginationEllipsis, NgbPaginationFirst, NgbPaginationLast, NgbPaginationNext, NgbPaginationNumber, NgbPaginationPrevious, NgbPaginationPages];\n\nclass NgbPaginationModule {}\n\nNgbPaginationModule.ɵfac = function NgbPaginationModule_Factory(t) {\n  return new (t || NgbPaginationModule)();\n};\n\nNgbPaginationModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: NgbPaginationModule\n});\nNgbPaginationModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbPaginationModule, [{\n    type: NgModule,\n    args: [{\n      declarations: DIRECTIVES,\n      exports: DIRECTIVES,\n      imports: [CommonModule]\n    }]\n  }], null, null);\n})();\n\nclass Trigger {\n  constructor(open, close) {\n    this.open = open;\n    this.close = close;\n\n    if (!close) {\n      this.close = open;\n    }\n  }\n\n  isManual() {\n    return this.open === 'manual' || this.close === 'manual';\n  }\n\n}\n\nconst DEFAULT_ALIASES = {\n  'hover': ['mouseenter', 'mouseleave'],\n  'focus': ['focusin', 'focusout']\n};\n\nfunction parseTriggers(triggers, aliases = DEFAULT_ALIASES) {\n  const trimmedTriggers = (triggers || '').trim();\n\n  if (trimmedTriggers.length === 0) {\n    return [];\n  }\n\n  const parsedTriggers = trimmedTriggers.split(/\\s+/).map(trigger => trigger.split(':')).map(triggerPair => {\n    let alias = aliases[triggerPair[0]] || triggerPair;\n    return new Trigger(alias[0], alias[1]);\n  });\n  const manualTriggers = parsedTriggers.filter(triggerPair => triggerPair.isManual());\n\n  if (manualTriggers.length > 1) {\n    throw 'Triggers parse error: only one manual trigger is allowed';\n  }\n\n  if (manualTriggers.length === 1 && parsedTriggers.length > 1) {\n    throw 'Triggers parse error: manual trigger can\\'t be mixed with other triggers';\n  }\n\n  return parsedTriggers;\n}\n\nfunction observeTriggers(renderer, nativeElement, triggers, isOpenedFn) {\n  return new Observable(subscriber => {\n    const listeners = [];\n\n    const openFn = () => subscriber.next(true);\n\n    const closeFn = () => subscriber.next(false);\n\n    const toggleFn = () => subscriber.next(!isOpenedFn());\n\n    triggers.forEach(trigger => {\n      if (trigger.open === trigger.close) {\n        listeners.push(renderer.listen(nativeElement, trigger.open, toggleFn));\n      } else {\n        listeners.push(renderer.listen(nativeElement, trigger.open, openFn), renderer.listen(nativeElement, trigger.close, closeFn));\n      }\n    });\n    return () => {\n      listeners.forEach(unsubscribeFn => unsubscribeFn());\n    };\n  });\n}\n\nconst delayOrNoop = time => time > 0 ? delay(time) : a => a;\n\nfunction triggerDelay(openDelay, closeDelay, isOpenedFn) {\n  return input$ => {\n    let pending = null;\n    const filteredInput$ = input$.pipe(map(open => ({\n      open\n    })), filter(event => {\n      const currentlyOpen = isOpenedFn();\n\n      if (currentlyOpen !== event.open && (!pending || pending.open === currentlyOpen)) {\n        pending = event;\n        return true;\n      }\n\n      if (pending && pending.open !== event.open) {\n        pending = null;\n      }\n\n      return false;\n    }), share());\n    const delayedOpen$ = filteredInput$.pipe(filter(event => event.open), delayOrNoop(openDelay));\n    const delayedClose$ = filteredInput$.pipe(filter(event => !event.open), delayOrNoop(closeDelay));\n    return merge(delayedOpen$, delayedClose$).pipe(filter(event => {\n      if (event === pending) {\n        pending = null;\n        return event.open !== isOpenedFn();\n      }\n\n      return false;\n    }), map(event => event.open));\n  };\n}\n\nfunction listenToTriggers(renderer, nativeElement, triggers, isOpenedFn, openFn, closeFn, openDelay = 0, closeDelay = 0) {\n  const parsedTriggers = parseTriggers(triggers);\n\n  if (parsedTriggers.length === 1 && parsedTriggers[0].isManual()) {\n    return () => {};\n  }\n\n  const subscription = observeTriggers(renderer, nativeElement, parsedTriggers, isOpenedFn).pipe(triggerDelay(openDelay, closeDelay, isOpenedFn)).subscribe(open => open ? openFn() : closeFn());\n  return () => subscription.unsubscribe();\n}\n/**\n * A configuration service for the [`NgbPopover`](#/components/popover/api#NgbPopover) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the popovers used in the application.\n */\n\n\nclass NgbPopoverConfig {\n  constructor(_ngbConfig) {\n    this._ngbConfig = _ngbConfig;\n    this.autoClose = true;\n    this.placement = 'auto';\n    this.triggers = 'click';\n    this.disablePopover = false;\n    this.openDelay = 0;\n    this.closeDelay = 0;\n  }\n\n  get animation() {\n    return this._animation === undefined ? this._ngbConfig.animation : this._animation;\n  }\n\n  set animation(animation) {\n    this._animation = animation;\n  }\n\n}\n\nNgbPopoverConfig.ɵfac = function NgbPopoverConfig_Factory(t) {\n  return new (t || NgbPopoverConfig)(i0.ɵɵinject(NgbConfig));\n};\n\nNgbPopoverConfig.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: NgbPopoverConfig,\n  factory: NgbPopoverConfig.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbPopoverConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: NgbConfig\n    }];\n  }, null);\n})();\n\nlet nextId$1 = 0;\n\nclass NgbPopoverWindow {\n  isTitleTemplate() {\n    return this.title instanceof TemplateRef;\n  }\n\n}\n\nNgbPopoverWindow.ɵfac = function NgbPopoverWindow_Factory(t) {\n  return new (t || NgbPopoverWindow)();\n};\n\nNgbPopoverWindow.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NgbPopoverWindow,\n  selectors: [[\"ngb-popover-window\"]],\n  hostAttrs: [\"role\", \"tooltip\"],\n  hostVars: 5,\n  hostBindings: function NgbPopoverWindow_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵhostProperty(\"id\", ctx.id);\n      i0.ɵɵclassMap(\"popover\" + (ctx.popoverClass ? \" \" + ctx.popoverClass : \"\"));\n      i0.ɵɵclassProp(\"fade\", ctx.animation);\n    }\n  },\n  inputs: {\n    animation: \"animation\",\n    title: \"title\",\n    id: \"id\",\n    popoverClass: \"popoverClass\",\n    context: \"context\"\n  },\n  ngContentSelectors: _c3,\n  decls: 4,\n  vars: 1,\n  consts: [[\"data-popper-arrow\", \"\", 1, \"popover-arrow\"], [\"class\", \"popover-header\", 4, \"ngIf\"], [1, \"popover-body\"], [1, \"popover-header\"], [\"simpleTitle\", \"\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"]],\n  template: function NgbPopoverWindow_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵelement(0, \"div\", 0);\n      i0.ɵɵtemplate(1, NgbPopoverWindow_h3_1_Template, 4, 2, \"h3\", 1);\n      i0.ɵɵelementStart(2, \"div\", 2);\n      i0.ɵɵprojection(3);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.title);\n    }\n  },\n  directives: [i2.NgIf, i2.NgTemplateOutlet],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbPopoverWindow, [{\n    type: Component,\n    args: [{\n      selector: 'ngb-popover-window',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      host: {\n        '[class]': '\"popover\" + (popoverClass ? \" \" + popoverClass : \"\")',\n        '[class.fade]': 'animation',\n        'role': 'tooltip',\n        '[id]': 'id'\n      },\n      template: `\n    <div class=\"popover-arrow\" data-popper-arrow></div>\n    <h3 class=\"popover-header\" *ngIf=\"title\">\n      <ng-template #simpleTitle>{{title}}</ng-template>\n      <ng-template [ngTemplateOutlet]=\"isTitleTemplate() ? $any(title) : simpleTitle\" [ngTemplateOutletContext]=\"context\"></ng-template>\n    </h3>\n    <div class=\"popover-body\"><ng-content></ng-content></div>`\n    }]\n  }], null, {\n    animation: [{\n      type: Input\n    }],\n    title: [{\n      type: Input\n    }],\n    id: [{\n      type: Input\n    }],\n    popoverClass: [{\n      type: Input\n    }],\n    context: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * A lightweight and extensible directive for fancy popover creation.\n */\n\n\nclass NgbPopover {\n  constructor(_elementRef, _renderer, injector, viewContainerRef, config, _ngZone, _document, _changeDetector, applicationRef) {\n    this._elementRef = _elementRef;\n    this._renderer = _renderer;\n    this._ngZone = _ngZone;\n    this._document = _document;\n    this._changeDetector = _changeDetector;\n    /**\n     * An event emitted when the popover opening animation has finished. Contains no payload.\n     */\n\n    this.shown = new EventEmitter();\n    /**\n     * An event emitted when the popover closing animation has finished. Contains no payload.\n     *\n     * At this point popover is not in the DOM anymore.\n     */\n\n    this.hidden = new EventEmitter();\n    this._ngbPopoverWindowId = `ngb-popover-${nextId$1++}`;\n    this._windowRef = null;\n    this._positioning = ngbPositioning();\n    this.animation = config.animation;\n    this.autoClose = config.autoClose;\n    this.placement = config.placement;\n    this.triggers = config.triggers;\n    this.container = config.container;\n    this.disablePopover = config.disablePopover;\n    this.popoverClass = config.popoverClass;\n    this.openDelay = config.openDelay;\n    this.closeDelay = config.closeDelay;\n    this._popupService = new PopupService(NgbPopoverWindow, injector, viewContainerRef, _renderer, this._ngZone, applicationRef);\n  }\n\n  _isDisabled() {\n    if (this.disablePopover) {\n      return true;\n    }\n\n    if (!this.ngbPopover && !this.popoverTitle) {\n      return true;\n    }\n\n    return false;\n  }\n  /**\n   * Opens the popover.\n   *\n   * This is considered to be a \"manual\" triggering.\n   * The `context` is an optional value to be injected into the popover template when it is created.\n   */\n\n\n  open(context) {\n    if (!this._windowRef && !this._isDisabled()) {\n      // this type assertion is safe because otherwise _isDisabled would return true\n      const {\n        windowRef,\n        transition$\n      } = this._popupService.open(this.ngbPopover, context, this.animation);\n\n      this._windowRef = windowRef;\n      this._windowRef.instance.animation = this.animation;\n      this._windowRef.instance.title = this.popoverTitle;\n      this._windowRef.instance.context = context;\n      this._windowRef.instance.popoverClass = this.popoverClass;\n      this._windowRef.instance.id = this._ngbPopoverWindowId;\n\n      this._renderer.setAttribute(this._elementRef.nativeElement, 'aria-describedby', this._ngbPopoverWindowId);\n\n      if (this.container === 'body') {\n        this._document.querySelector(this.container).appendChild(this._windowRef.location.nativeElement);\n      } // We need to detect changes, because we don't know where .open() might be called from.\n      // Ex. opening popover from one of lifecycle hooks that run after the CD\n      // (say from ngAfterViewInit) will result in 'ExpressionHasChanged' exception\n\n\n      this._windowRef.changeDetectorRef.detectChanges(); // We need to mark for check, because popover won't work inside the OnPush component.\n      // Ex. when we use expression like `{{ popover.isOpen() : 'opened' : 'closed' }}`\n      // inside the template of an OnPush component and we change the popover from\n      // open -> closed, the expression in question won't be updated unless we explicitly\n      // mark the parent component to be checked.\n\n\n      this._windowRef.changeDetectorRef.markForCheck(); // Setting up popper and scheduling updates when zone is stable\n\n\n      this._ngZone.runOutsideAngular(() => {\n        this._positioning.createPopper({\n          hostElement: this._elementRef.nativeElement,\n          targetElement: this._windowRef.location.nativeElement,\n          placement: this.placement,\n          appendToBody: this.container === 'body',\n          baseClass: 'bs-popover',\n          updatePopperOptions: addPopperOffset([0, 8])\n        });\n\n        Promise.resolve().then(() => {\n          // This update is required for correct arrow placement\n          this._positioning.update();\n\n          this._zoneSubscription = this._ngZone.onStable.subscribe(() => this._positioning.update());\n        });\n      });\n\n      ngbAutoClose(this._ngZone, this._document, this.autoClose, () => this.close(), this.hidden, [this._windowRef.location.nativeElement]);\n      transition$.subscribe(() => this.shown.emit());\n    }\n  }\n  /**\n   * Closes the popover.\n   *\n   * This is considered to be a \"manual\" triggering of the popover.\n   */\n\n\n  close(animation = this.animation) {\n    if (this._windowRef) {\n      this._renderer.removeAttribute(this._elementRef.nativeElement, 'aria-describedby');\n\n      this._popupService.close(animation).subscribe(() => {\n        var _a;\n\n        this._windowRef = null;\n\n        this._positioning.destroy();\n\n        (_a = this._zoneSubscription) === null || _a === void 0 ? void 0 : _a.unsubscribe();\n        this.hidden.emit();\n\n        this._changeDetector.markForCheck();\n      });\n    }\n  }\n  /**\n   * Toggles the popover.\n   *\n   * This is considered to be a \"manual\" triggering of the popover.\n   */\n\n\n  toggle() {\n    if (this._windowRef) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n  /**\n   * Returns `true`, if the popover is currently shown.\n   */\n\n\n  isOpen() {\n    return this._windowRef != null;\n  }\n\n  ngOnInit() {\n    this._unregisterListenersFn = listenToTriggers(this._renderer, this._elementRef.nativeElement, this.triggers, this.isOpen.bind(this), this.open.bind(this), this.close.bind(this), +this.openDelay, +this.closeDelay);\n  }\n\n  ngOnChanges({\n    ngbPopover,\n    popoverTitle,\n    disablePopover,\n    popoverClass\n  }) {\n    if (popoverClass && this.isOpen()) {\n      this._windowRef.instance.popoverClass = popoverClass.currentValue;\n    } // close popover if title and content become empty, or disablePopover set to true\n\n\n    if ((ngbPopover || popoverTitle || disablePopover) && this._isDisabled()) {\n      this.close();\n    }\n  }\n\n  ngOnDestroy() {\n    var _a;\n\n    this.close(false); // This check is needed as it might happen that ngOnDestroy is called before ngOnInit\n    // under certain conditions, see: https://github.com/ng-bootstrap/ng-bootstrap/issues/2199\n\n    (_a = this._unregisterListenersFn) === null || _a === void 0 ? void 0 : _a.call(this);\n  }\n\n}\n\nNgbPopover.ɵfac = function NgbPopover_Factory(t) {\n  return new (t || NgbPopover)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.Injector), i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(NgbPopoverConfig), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(DOCUMENT), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.ApplicationRef));\n};\n\nNgbPopover.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: NgbPopover,\n  selectors: [[\"\", \"ngbPopover\", \"\"]],\n  inputs: {\n    animation: \"animation\",\n    autoClose: \"autoClose\",\n    ngbPopover: \"ngbPopover\",\n    popoverTitle: \"popoverTitle\",\n    placement: \"placement\",\n    triggers: \"triggers\",\n    container: \"container\",\n    disablePopover: \"disablePopover\",\n    popoverClass: \"popoverClass\",\n    openDelay: \"openDelay\",\n    closeDelay: \"closeDelay\"\n  },\n  outputs: {\n    shown: \"shown\",\n    hidden: \"hidden\"\n  },\n  exportAs: [\"ngbPopover\"],\n  features: [i0.ɵɵNgOnChangesFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbPopover, [{\n    type: Directive,\n    args: [{\n      selector: '[ngbPopover]',\n      exportAs: 'ngbPopover'\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: i0.Injector\n    }, {\n      type: i0.ViewContainerRef\n    }, {\n      type: NgbPopoverConfig\n    }, {\n      type: i0.NgZone\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i0.ApplicationRef\n    }];\n  }, {\n    animation: [{\n      type: Input\n    }],\n    autoClose: [{\n      type: Input\n    }],\n    ngbPopover: [{\n      type: Input\n    }],\n    popoverTitle: [{\n      type: Input\n    }],\n    placement: [{\n      type: Input\n    }],\n    triggers: [{\n      type: Input\n    }],\n    container: [{\n      type: Input\n    }],\n    disablePopover: [{\n      type: Input\n    }],\n    popoverClass: [{\n      type: Input\n    }],\n    openDelay: [{\n      type: Input\n    }],\n    closeDelay: [{\n      type: Input\n    }],\n    shown: [{\n      type: Output\n    }],\n    hidden: [{\n      type: Output\n    }]\n  });\n})();\n\nclass NgbPopoverModule {}\n\nNgbPopoverModule.ɵfac = function NgbPopoverModule_Factory(t) {\n  return new (t || NgbPopoverModule)();\n};\n\nNgbPopoverModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: NgbPopoverModule\n});\nNgbPopoverModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbPopoverModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [NgbPopover, NgbPopoverWindow],\n      exports: [NgbPopover],\n      imports: [CommonModule]\n    }]\n  }], null, null);\n})();\n/**\n * A configuration service for the [`NgbProgressbar`](#/components/progressbar/api#NgbProgressbar) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the progress bars used in the application.\n */\n\n\nclass NgbProgressbarConfig {\n  constructor() {\n    this.max = 100;\n    this.animated = false;\n    this.striped = false;\n    this.showValue = false;\n  }\n\n}\n\nNgbProgressbarConfig.ɵfac = function NgbProgressbarConfig_Factory(t) {\n  return new (t || NgbProgressbarConfig)();\n};\n\nNgbProgressbarConfig.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: NgbProgressbarConfig,\n  factory: NgbProgressbarConfig.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbProgressbarConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\n/**\n * A directive that provides feedback on the progress of a workflow or an action.\n */\n\n\nclass NgbProgressbar {\n  constructor(config) {\n    /**\n     * The current value for the progress bar.\n     *\n     * Should be in the `[0, max]` range.\n     */\n    this.value = 0;\n    this.max = config.max;\n    this.animated = config.animated;\n    this.striped = config.striped;\n    this.textType = config.textType;\n    this.type = config.type;\n    this.showValue = config.showValue;\n    this.height = config.height;\n  }\n  /**\n   * The maximal value to be displayed in the progress bar.\n   *\n   * Should be a positive number. Will default to 100 otherwise.\n   */\n\n\n  set max(max) {\n    this._max = !isNumber(max) || max <= 0 ? 100 : max;\n  }\n\n  get max() {\n    return this._max;\n  }\n\n  getValue() {\n    return getValueInRange(this.value, this.max);\n  }\n\n  getPercentValue() {\n    return 100 * this.getValue() / this.max;\n  }\n\n}\n\nNgbProgressbar.ɵfac = function NgbProgressbar_Factory(t) {\n  return new (t || NgbProgressbar)(i0.ɵɵdirectiveInject(NgbProgressbarConfig));\n};\n\nNgbProgressbar.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NgbProgressbar,\n  selectors: [[\"ngb-progressbar\"]],\n  hostAttrs: [1, \"progress\"],\n  hostVars: 2,\n  hostBindings: function NgbProgressbar_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵstyleProp(\"height\", ctx.height);\n    }\n  },\n  inputs: {\n    max: \"max\",\n    animated: \"animated\",\n    striped: \"striped\",\n    showValue: \"showValue\",\n    textType: \"textType\",\n    type: \"type\",\n    value: \"value\",\n    height: \"height\"\n  },\n  ngContentSelectors: _c3,\n  decls: 3,\n  vars: 11,\n  consts: function () {\n    let i18n_55;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @suppress {msgDescriptions}\n       */\n      const MSG__HOME_EDUARD_DESKTOP_COOKIE_DIALOGUE_ANGULAR_DOTNET_GOOGLE_ANALYTICS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2015_NG_BOOTSTRAP_MJS__56 = goog.getMsg(\"{$interpolation}\", {\n        \"interpolation\": \"\\uFFFD0\\uFFFD\"\n      });\n      i18n_55 = MSG__HOME_EDUARD_DESKTOP_COOKIE_DIALOGUE_ANGULAR_DOTNET_GOOGLE_ANALYTICS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2015_NG_BOOTSTRAP_MJS__56;\n    } else {\n      i18n_55 = $localize`:@@ngb.progressbar.value:${\"\\uFFFD0\\uFFFD\"}:INTERPOLATION:`;\n    }\n\n    return [[\"role\", \"progressbar\", \"aria-valuemin\", \"0\"], [4, \"ngIf\"], i18n_55];\n  },\n  template: function NgbProgressbar_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵtemplate(1, NgbProgressbar_span_1_Template, 3, 3, \"span\", 1);\n      i0.ɵɵprojection(2);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵclassMapInterpolate4(\"progress-bar\", ctx.type ? \" bg-\" + ctx.type : \"\", \"\", ctx.textType ? \" text-\" + ctx.textType : \"\", \"\\n    \", ctx.animated ? \" progress-bar-animated\" : \"\", \"\", ctx.striped ? \" progress-bar-striped\" : \"\", \"\");\n      i0.ɵɵstyleProp(\"width\", ctx.getPercentValue(), \"%\");\n      i0.ɵɵattribute(\"aria-valuenow\", ctx.getValue())(\"aria-valuemax\", ctx.max);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showValue);\n    }\n  },\n  directives: [i2.NgIf],\n  pipes: [i2.PercentPipe],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbProgressbar, [{\n    type: Component,\n    args: [{\n      selector: 'ngb-progressbar',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      host: {\n        class: 'progress'\n      },\n      template: `\n    <div class=\"progress-bar{{type ? ' bg-' + type : ''}}{{textType ? ' text-' + textType : ''}}\n    {{animated ? ' progress-bar-animated' : ''}}{{striped ? ' progress-bar-striped' : ''}}\"\n    role=\"progressbar\" [style.width.%]=\"getPercentValue()\"\n    [attr.aria-valuenow]=\"getValue()\" aria-valuemin=\"0\" [attr.aria-valuemax]=\"max\">\n      <span *ngIf=\"showValue\" i18n=\"@@ngb.progressbar.value\">{{getValue() / max | percent}}</span><ng-content></ng-content>\n    </div>\n  `\n    }]\n  }], function () {\n    return [{\n      type: NgbProgressbarConfig\n    }];\n  }, {\n    max: [{\n      type: Input\n    }],\n    animated: [{\n      type: Input\n    }],\n    striped: [{\n      type: Input\n    }],\n    showValue: [{\n      type: Input\n    }],\n    textType: [{\n      type: Input\n    }],\n    type: [{\n      type: Input\n    }],\n    value: [{\n      type: Input\n    }],\n    height: [{\n      type: Input\n    }, {\n      type: HostBinding,\n      args: ['style.height']\n    }]\n  });\n})();\n\nclass NgbProgressbarModule {}\n\nNgbProgressbarModule.ɵfac = function NgbProgressbarModule_Factory(t) {\n  return new (t || NgbProgressbarModule)();\n};\n\nNgbProgressbarModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: NgbProgressbarModule\n});\nNgbProgressbarModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbProgressbarModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [NgbProgressbar],\n      exports: [NgbProgressbar],\n      imports: [CommonModule]\n    }]\n  }], null, null);\n})();\n/**\n * A configuration service for the [`NgbRating`](#/components/rating/api#NgbRating) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the ratings used in the application.\n */\n\n\nclass NgbRatingConfig {\n  constructor() {\n    this.max = 10;\n    this.readonly = false;\n    this.resettable = false;\n  }\n\n}\n\nNgbRatingConfig.ɵfac = function NgbRatingConfig_Factory(t) {\n  return new (t || NgbRatingConfig)();\n};\n\nNgbRatingConfig.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: NgbRatingConfig,\n  factory: NgbRatingConfig.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbRatingConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\n/**\n * A directive that helps visualising and interacting with a star rating bar.\n */\n\n\nclass NgbRating {\n  constructor(config, _changeDetectorRef) {\n    this._changeDetectorRef = _changeDetectorRef;\n    this.contexts = [];\n    this.disabled = false;\n    /**\n     * An event emitted when the user is hovering over a given rating.\n     *\n     * Event payload equals to the rating being hovered over.\n     */\n\n    this.hover = new EventEmitter();\n    /**\n     * An event emitted when the user stops hovering over a given rating.\n     *\n     * Event payload equals to the rating of the last item being hovered over.\n     */\n\n    this.leave = new EventEmitter();\n    /**\n     * An event emitted when the rating is changed.\n     *\n     * Event payload equals to the newly selected rating.\n     */\n\n    this.rateChange = new EventEmitter(true);\n\n    this.onChange = _ => {};\n\n    this.onTouched = () => {};\n\n    this.max = config.max;\n    this.readonly = config.readonly;\n  }\n\n  ariaValueText() {\n    return `${this.nextRate} out of ${this.max}`;\n  }\n\n  isInteractive() {\n    return !this.readonly && !this.disabled;\n  }\n\n  enter(value) {\n    if (this.isInteractive()) {\n      this._updateState(value);\n    }\n\n    this.hover.emit(value);\n  }\n\n  handleBlur() {\n    this.onTouched();\n  }\n\n  handleClick(value) {\n    if (this.isInteractive()) {\n      this.update(this.resettable && this.rate === value ? 0 : value);\n    }\n  }\n\n  handleKeyDown(event) {\n    /* eslint-disable-next-line deprecation/deprecation */\n    switch (event.which) {\n      case Key.ArrowDown:\n      case Key.ArrowLeft:\n        this.update(this.rate - 1);\n        break;\n\n      case Key.ArrowUp:\n      case Key.ArrowRight:\n        this.update(this.rate + 1);\n        break;\n\n      case Key.Home:\n        this.update(0);\n        break;\n\n      case Key.End:\n        this.update(this.max);\n        break;\n\n      default:\n        return;\n    } // note 'return' in default case\n\n\n    event.preventDefault();\n  }\n\n  ngOnChanges(changes) {\n    if (changes['rate']) {\n      this.update(this.rate);\n    }\n\n    if (changes['max']) {\n      this._updateMax();\n    }\n  }\n\n  ngOnInit() {\n    this._setupContexts();\n\n    this._updateState(this.rate);\n  }\n\n  registerOnChange(fn) {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn) {\n    this.onTouched = fn;\n  }\n\n  reset() {\n    this.leave.emit(this.nextRate);\n\n    this._updateState(this.rate);\n  }\n\n  setDisabledState(isDisabled) {\n    this.disabled = isDisabled;\n  }\n\n  update(value, internalChange = true) {\n    const newRate = getValueInRange(value, this.max, 0);\n\n    if (this.isInteractive() && this.rate !== newRate) {\n      this.rate = newRate;\n      this.rateChange.emit(this.rate);\n    }\n\n    if (internalChange) {\n      this.onChange(this.rate);\n      this.onTouched();\n    }\n\n    this._updateState(this.rate);\n  }\n\n  writeValue(value) {\n    this.update(value, false);\n\n    this._changeDetectorRef.markForCheck();\n  }\n\n  _updateState(nextValue) {\n    this.nextRate = nextValue;\n    this.contexts.forEach((context, index) => context.fill = Math.round(getValueInRange(nextValue - index, 1, 0) * 100));\n  }\n\n  _updateMax() {\n    if (this.max > 0) {\n      this._setupContexts();\n\n      this.update(this.rate);\n    }\n  }\n\n  _setupContexts() {\n    this.contexts = Array.from({\n      length: this.max\n    }, (v, k) => ({\n      fill: 0,\n      index: k\n    }));\n  }\n\n}\n\nNgbRating.ɵfac = function NgbRating_Factory(t) {\n  return new (t || NgbRating)(i0.ɵɵdirectiveInject(NgbRatingConfig), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\n\nNgbRating.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NgbRating,\n  selectors: [[\"ngb-rating\"]],\n  contentQueries: function NgbRating_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, TemplateRef, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.starTemplateFromContent = _t.first);\n    }\n  },\n  hostAttrs: [\"role\", \"slider\", \"aria-valuemin\", \"0\", 1, \"d-inline-flex\"],\n  hostVars: 5,\n  hostBindings: function NgbRating_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"blur\", function NgbRating_blur_HostBindingHandler() {\n        return ctx.handleBlur();\n      })(\"keydown\", function NgbRating_keydown_HostBindingHandler($event) {\n        return ctx.handleKeyDown($event);\n      })(\"mouseleave\", function NgbRating_mouseleave_HostBindingHandler() {\n        return ctx.reset();\n      });\n    }\n\n    if (rf & 2) {\n      i0.ɵɵhostProperty(\"tabindex\", ctx.disabled ? -1 : 0);\n      i0.ɵɵattribute(\"aria-valuemax\", ctx.max)(\"aria-valuenow\", ctx.nextRate)(\"aria-valuetext\", ctx.ariaValueText())(\"aria-disabled\", ctx.readonly ? true : null);\n    }\n  },\n  inputs: {\n    max: \"max\",\n    rate: \"rate\",\n    readonly: \"readonly\",\n    resettable: \"resettable\",\n    starTemplate: \"starTemplate\"\n  },\n  outputs: {\n    hover: \"hover\",\n    leave: \"leave\",\n    rateChange: \"rateChange\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => NgbRating),\n    multi: true\n  }]), i0.ɵɵNgOnChangesFeature],\n  decls: 3,\n  vars: 1,\n  consts: [[\"t\", \"\"], [\"ngFor\", \"\", 3, \"ngForOf\"], [1, \"visually-hidden\"], [3, \"mouseenter\", \"click\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"]],\n  template: function NgbRating_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, NgbRating_ng_template_0_Template, 1, 1, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵtemplate(2, NgbRating_ng_template_2_Template, 4, 5, \"ng-template\", 1);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.contexts);\n    }\n  },\n  directives: [i2.NgForOf, i2.NgTemplateOutlet],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbRating, [{\n    type: Component,\n    args: [{\n      selector: 'ngb-rating',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      host: {\n        'class': 'd-inline-flex',\n        '[tabindex]': 'disabled ? -1 : 0',\n        'role': 'slider',\n        'aria-valuemin': '0',\n        '[attr.aria-valuemax]': 'max',\n        '[attr.aria-valuenow]': 'nextRate',\n        '[attr.aria-valuetext]': 'ariaValueText()',\n        '[attr.aria-disabled]': 'readonly ? true : null',\n        '(blur)': 'handleBlur()',\n        '(keydown)': 'handleKeyDown($event)',\n        '(mouseleave)': 'reset()'\n      },\n      template: `\n    <ng-template #t let-fill=\"fill\">{{ fill === 100 ? '&#9733;' : '&#9734;' }}</ng-template>\n    <ng-template ngFor [ngForOf]=\"contexts\" let-index=\"index\">\n      <span class=\"visually-hidden\">({{ index < nextRate ? '*' : ' ' }})</span>\n      <span (mouseenter)=\"enter(index + 1)\" (click)=\"handleClick(index + 1)\" [style.cursor]=\"isInteractive() ? 'pointer' : 'default'\">\n        <ng-template [ngTemplateOutlet]=\"starTemplate || starTemplateFromContent || t\" [ngTemplateOutletContext]=\"contexts[index]\">\n        </ng-template>\n      </span>\n    </ng-template>\n  `,\n      providers: [{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => NgbRating),\n        multi: true\n      }]\n    }]\n  }], function () {\n    return [{\n      type: NgbRatingConfig\n    }, {\n      type: i0.ChangeDetectorRef\n    }];\n  }, {\n    max: [{\n      type: Input\n    }],\n    rate: [{\n      type: Input\n    }],\n    readonly: [{\n      type: Input\n    }],\n    resettable: [{\n      type: Input\n    }],\n    starTemplate: [{\n      type: Input\n    }],\n    starTemplateFromContent: [{\n      type: ContentChild,\n      args: [TemplateRef, {\n        static: false\n      }]\n    }],\n    hover: [{\n      type: Output\n    }],\n    leave: [{\n      type: Output\n    }],\n    rateChange: [{\n      type: Output\n    }]\n  });\n})();\n\nclass NgbRatingModule {}\n\nNgbRatingModule.ɵfac = function NgbRatingModule_Factory(t) {\n  return new (t || NgbRatingModule)();\n};\n\nNgbRatingModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: NgbRatingModule\n});\nNgbRatingModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbRatingModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [NgbRating],\n      exports: [NgbRating],\n      imports: [CommonModule]\n    }]\n  }], null, null);\n})();\n\nclass NgbTime {\n  constructor(hour, minute, second) {\n    this.hour = toInteger(hour);\n    this.minute = toInteger(minute);\n    this.second = toInteger(second);\n  }\n\n  changeHour(step = 1) {\n    this.updateHour((isNaN(this.hour) ? 0 : this.hour) + step);\n  }\n\n  updateHour(hour) {\n    if (isNumber(hour)) {\n      this.hour = (hour < 0 ? 24 + hour : hour) % 24;\n    } else {\n      this.hour = NaN;\n    }\n  }\n\n  changeMinute(step = 1) {\n    this.updateMinute((isNaN(this.minute) ? 0 : this.minute) + step);\n  }\n\n  updateMinute(minute) {\n    if (isNumber(minute)) {\n      this.minute = minute % 60 < 0 ? 60 + minute % 60 : minute % 60;\n      this.changeHour(Math.floor(minute / 60));\n    } else {\n      this.minute = NaN;\n    }\n  }\n\n  changeSecond(step = 1) {\n    this.updateSecond((isNaN(this.second) ? 0 : this.second) + step);\n  }\n\n  updateSecond(second) {\n    if (isNumber(second)) {\n      this.second = second < 0 ? 60 + second % 60 : second % 60;\n      this.changeMinute(Math.floor(second / 60));\n    } else {\n      this.second = NaN;\n    }\n  }\n\n  isValid(checkSecs = true) {\n    return isNumber(this.hour) && isNumber(this.minute) && (checkSecs ? isNumber(this.second) : true);\n  }\n\n  toString() {\n    return `${this.hour || 0}:${this.minute || 0}:${this.second || 0}`;\n  }\n\n}\n/**\n * A configuration service for the [`NgbTimepicker`](#/components/timepicker/api#NgbTimepicker) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the timepickers used in the application.\n */\n\n\nclass NgbTimepickerConfig {\n  constructor() {\n    this.meridian = false;\n    this.spinners = true;\n    this.seconds = false;\n    this.hourStep = 1;\n    this.minuteStep = 1;\n    this.secondStep = 1;\n    this.disabled = false;\n    this.readonlyInputs = false;\n    this.size = 'medium';\n  }\n\n}\n\nNgbTimepickerConfig.ɵfac = function NgbTimepickerConfig_Factory(t) {\n  return new (t || NgbTimepickerConfig)();\n};\n\nNgbTimepickerConfig.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: NgbTimepickerConfig,\n  factory: NgbTimepickerConfig.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbTimepickerConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\n\nfunction NGB_DATEPICKER_TIME_ADAPTER_FACTORY() {\n  return new NgbTimeStructAdapter();\n}\n/**\n * An abstract service that does the conversion between the internal timepicker `NgbTimeStruct` model and\n * any provided user time model `T`, ex. a string, a native date, etc.\n *\n * The adapter is used **only** for conversion when binding timepicker to a form control,\n * ex. `[(ngModel)]=\"userTimeModel\"`. Here `userTimeModel` can be of any type.\n *\n * The default timepicker implementation assumes we use `NgbTimeStruct` as a user model.\n *\n * See the [custom time adapter demo](#/components/timepicker/examples#adapter) for an example.\n *\n * @since 2.2.0\n */\n\n\nclass NgbTimeAdapter {}\n\nNgbTimeAdapter.ɵfac = function NgbTimeAdapter_Factory(t) {\n  return new (t || NgbTimeAdapter)();\n};\n\nNgbTimeAdapter.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: NgbTimeAdapter,\n  factory: function () {\n    return NGB_DATEPICKER_TIME_ADAPTER_FACTORY();\n  },\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbTimeAdapter, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root',\n      useFactory: NGB_DATEPICKER_TIME_ADAPTER_FACTORY\n    }]\n  }], null, null);\n})();\n\nclass NgbTimeStructAdapter extends NgbTimeAdapter {\n  /**\n   * Converts a NgbTimeStruct value into NgbTimeStruct value\n   */\n  fromModel(time) {\n    return time && isInteger(time.hour) && isInteger(time.minute) ? {\n      hour: time.hour,\n      minute: time.minute,\n      second: isInteger(time.second) ? time.second : null\n    } : null;\n  }\n  /**\n   * Converts a NgbTimeStruct value into NgbTimeStruct value\n   */\n\n\n  toModel(time) {\n    return time && isInteger(time.hour) && isInteger(time.minute) ? {\n      hour: time.hour,\n      minute: time.minute,\n      second: isInteger(time.second) ? time.second : null\n    } : null;\n  }\n\n}\n\nNgbTimeStructAdapter.ɵfac = /* @__PURE__ */function () {\n  let ɵNgbTimeStructAdapter_BaseFactory;\n  return function NgbTimeStructAdapter_Factory(t) {\n    return (ɵNgbTimeStructAdapter_BaseFactory || (ɵNgbTimeStructAdapter_BaseFactory = i0.ɵɵgetInheritedFactory(NgbTimeStructAdapter)))(t || NgbTimeStructAdapter);\n  };\n}();\n\nNgbTimeStructAdapter.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: NgbTimeStructAdapter,\n  factory: NgbTimeStructAdapter.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbTimeStructAdapter, [{\n    type: Injectable\n  }], null, null);\n})();\n\nfunction NGB_TIMEPICKER_I18N_FACTORY(locale) {\n  return new NgbTimepickerI18nDefault(locale);\n}\n/**\n * Type of the service supplying day periods (for example, 'AM' and 'PM') to NgbTimepicker component.\n * The default implementation of this service honors the Angular locale, and uses the registered locale data,\n * as explained in the Angular i18n guide.\n */\n\n\nclass NgbTimepickerI18n {}\n\nNgbTimepickerI18n.ɵfac = function NgbTimepickerI18n_Factory(t) {\n  return new (t || NgbTimepickerI18n)();\n};\n\nNgbTimepickerI18n.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: NgbTimepickerI18n,\n  factory: function NgbTimepickerI18n_Factory(t) {\n    let r = null;\n\n    if (t) {\n      r = new t();\n    } else {\n      r = NGB_TIMEPICKER_I18N_FACTORY(i0.ɵɵinject(LOCALE_ID));\n    }\n\n    return r;\n  },\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbTimepickerI18n, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root',\n      useFactory: NGB_TIMEPICKER_I18N_FACTORY,\n      deps: [LOCALE_ID]\n    }]\n  }], null, null);\n})();\n\nclass NgbTimepickerI18nDefault extends NgbTimepickerI18n {\n  constructor(locale) {\n    super();\n    this._periods = getLocaleDayPeriods(locale, FormStyle.Standalone, TranslationWidth.Narrow);\n  }\n\n  getMorningPeriod() {\n    return this._periods[0];\n  }\n\n  getAfternoonPeriod() {\n    return this._periods[1];\n  }\n\n}\n\nNgbTimepickerI18nDefault.ɵfac = function NgbTimepickerI18nDefault_Factory(t) {\n  return new (t || NgbTimepickerI18nDefault)(i0.ɵɵinject(LOCALE_ID));\n};\n\nNgbTimepickerI18nDefault.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: NgbTimepickerI18nDefault,\n  factory: NgbTimepickerI18nDefault.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbTimepickerI18nDefault, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [LOCALE_ID]\n      }]\n    }];\n  }, null);\n})();\n\nconst FILTER_REGEX = /[^0-9]/g;\n/**\n * A directive that helps with wth picking hours, minutes and seconds.\n */\n\nclass NgbTimepicker {\n  constructor(_config, _ngbTimeAdapter, _cd, i18n) {\n    this._config = _config;\n    this._ngbTimeAdapter = _ngbTimeAdapter;\n    this._cd = _cd;\n    this.i18n = i18n;\n\n    this.onChange = _ => {};\n\n    this.onTouched = () => {};\n\n    this.meridian = _config.meridian;\n    this.spinners = _config.spinners;\n    this.seconds = _config.seconds;\n    this.hourStep = _config.hourStep;\n    this.minuteStep = _config.minuteStep;\n    this.secondStep = _config.secondStep;\n    this.disabled = _config.disabled;\n    this.readonlyInputs = _config.readonlyInputs;\n    this.size = _config.size;\n  }\n  /**\n   * The number of hours to add/subtract when clicking hour spinners.\n   */\n\n\n  set hourStep(step) {\n    this._hourStep = isInteger(step) ? step : this._config.hourStep;\n  }\n\n  get hourStep() {\n    return this._hourStep;\n  }\n  /**\n   * The number of minutes to add/subtract when clicking minute spinners.\n   */\n\n\n  set minuteStep(step) {\n    this._minuteStep = isInteger(step) ? step : this._config.minuteStep;\n  }\n\n  get minuteStep() {\n    return this._minuteStep;\n  }\n  /**\n   * The number of seconds to add/subtract when clicking second spinners.\n   */\n\n\n  set secondStep(step) {\n    this._secondStep = isInteger(step) ? step : this._config.secondStep;\n  }\n\n  get secondStep() {\n    return this._secondStep;\n  }\n\n  writeValue(value) {\n    const structValue = this._ngbTimeAdapter.fromModel(value);\n\n    this.model = structValue ? new NgbTime(structValue.hour, structValue.minute, structValue.second) : new NgbTime();\n\n    if (!this.seconds && (!structValue || !isNumber(structValue.second))) {\n      this.model.second = 0;\n    }\n\n    this._cd.markForCheck();\n  }\n\n  registerOnChange(fn) {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn) {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(isDisabled) {\n    this.disabled = isDisabled;\n  }\n\n  changeHour(step) {\n    this.model.changeHour(step);\n    this.propagateModelChange();\n  }\n\n  changeMinute(step) {\n    this.model.changeMinute(step);\n    this.propagateModelChange();\n  }\n\n  changeSecond(step) {\n    this.model.changeSecond(step);\n    this.propagateModelChange();\n  }\n\n  updateHour(newVal) {\n    const isPM = this.model.hour >= 12;\n    const enteredHour = toInteger(newVal);\n\n    if (this.meridian && (isPM && enteredHour < 12 || !isPM && enteredHour === 12)) {\n      this.model.updateHour(enteredHour + 12);\n    } else {\n      this.model.updateHour(enteredHour);\n    }\n\n    this.propagateModelChange();\n  }\n\n  updateMinute(newVal) {\n    this.model.updateMinute(toInteger(newVal));\n    this.propagateModelChange();\n  }\n\n  updateSecond(newVal) {\n    this.model.updateSecond(toInteger(newVal));\n    this.propagateModelChange();\n  }\n\n  toggleMeridian() {\n    if (this.meridian) {\n      this.changeHour(12);\n    }\n  }\n\n  formatInput(input) {\n    input.value = input.value.replace(FILTER_REGEX, '');\n  }\n\n  formatHour(value) {\n    if (isNumber(value)) {\n      if (this.meridian) {\n        return padNumber(value % 12 === 0 ? 12 : value % 12);\n      } else {\n        return padNumber(value % 24);\n      }\n    } else {\n      return padNumber(NaN);\n    }\n  }\n\n  formatMinSec(value) {\n    return padNumber(isNumber(value) ? value : NaN);\n  }\n\n  handleBlur() {\n    this.onTouched();\n  }\n\n  get isSmallSize() {\n    return this.size === 'small';\n  }\n\n  get isLargeSize() {\n    return this.size === 'large';\n  }\n\n  ngOnChanges(changes) {\n    if (changes['seconds'] && !this.seconds && this.model && !isNumber(this.model.second)) {\n      this.model.second = 0;\n      this.propagateModelChange(false);\n    }\n  }\n\n  propagateModelChange(touched = true) {\n    if (touched) {\n      this.onTouched();\n    }\n\n    if (this.model.isValid(this.seconds)) {\n      this.onChange(this._ngbTimeAdapter.toModel({\n        hour: this.model.hour,\n        minute: this.model.minute,\n        second: this.model.second\n      }));\n    } else {\n      this.onChange(this._ngbTimeAdapter.toModel(null));\n    }\n  }\n\n}\n\nNgbTimepicker.ɵfac = function NgbTimepicker_Factory(t) {\n  return new (t || NgbTimepicker)(i0.ɵɵdirectiveInject(NgbTimepickerConfig), i0.ɵɵdirectiveInject(NgbTimeAdapter), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(NgbTimepickerI18n));\n};\n\nNgbTimepicker.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NgbTimepicker,\n  selectors: [[\"ngb-timepicker\"]],\n  inputs: {\n    meridian: \"meridian\",\n    spinners: \"spinners\",\n    seconds: \"seconds\",\n    hourStep: \"hourStep\",\n    minuteStep: \"minuteStep\",\n    secondStep: \"secondStep\",\n    readonlyInputs: \"readonlyInputs\",\n    size: \"size\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => NgbTimepicker),\n    multi: true\n  }]), i0.ɵɵNgOnChangesFeature],\n  decls: 16,\n  vars: 25,\n  consts: function () {\n    let i18n_57;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @suppress {msgDescriptions}\n       */\n      const MSG__HOME_EDUARD_DESKTOP_COOKIE_DIALOGUE_ANGULAR_DOTNET_GOOGLE_ANALYTICS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2015_NG_BOOTSTRAP_MJS_58 = goog.getMsg(\"HH\");\n      i18n_57 = MSG__HOME_EDUARD_DESKTOP_COOKIE_DIALOGUE_ANGULAR_DOTNET_GOOGLE_ANALYTICS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2015_NG_BOOTSTRAP_MJS_58;\n    } else {\n      i18n_57 = $localize`:@@ngb.timepicker.HH:HH`;\n    }\n\n    let i18n_59;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @suppress {msgDescriptions}\n       */\n      const MSG__HOME_EDUARD_DESKTOP_COOKIE_DIALOGUE_ANGULAR_DOTNET_GOOGLE_ANALYTICS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2015_NG_BOOTSTRAP_MJS_60 = goog.getMsg(\"Hours\");\n      i18n_59 = MSG__HOME_EDUARD_DESKTOP_COOKIE_DIALOGUE_ANGULAR_DOTNET_GOOGLE_ANALYTICS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2015_NG_BOOTSTRAP_MJS_60;\n    } else {\n      i18n_59 = $localize`:@@ngb.timepicker.hours:Hours`;\n    }\n\n    let i18n_61;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @suppress {msgDescriptions}\n       */\n      const MSG__HOME_EDUARD_DESKTOP_COOKIE_DIALOGUE_ANGULAR_DOTNET_GOOGLE_ANALYTICS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2015_NG_BOOTSTRAP_MJS_62 = goog.getMsg(\"MM\");\n      i18n_61 = MSG__HOME_EDUARD_DESKTOP_COOKIE_DIALOGUE_ANGULAR_DOTNET_GOOGLE_ANALYTICS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2015_NG_BOOTSTRAP_MJS_62;\n    } else {\n      i18n_61 = $localize`:@@ngb.timepicker.MM:MM`;\n    }\n\n    let i18n_63;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @suppress {msgDescriptions}\n       */\n      const MSG__HOME_EDUARD_DESKTOP_COOKIE_DIALOGUE_ANGULAR_DOTNET_GOOGLE_ANALYTICS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2015_NG_BOOTSTRAP_MJS_64 = goog.getMsg(\"Minutes\");\n      i18n_63 = MSG__HOME_EDUARD_DESKTOP_COOKIE_DIALOGUE_ANGULAR_DOTNET_GOOGLE_ANALYTICS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2015_NG_BOOTSTRAP_MJS_64;\n    } else {\n      i18n_63 = $localize`:@@ngb.timepicker.minutes:Minutes`;\n    }\n\n    let i18n_65;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @suppress {msgDescriptions}\n       */\n      const MSG__HOME_EDUARD_DESKTOP_COOKIE_DIALOGUE_ANGULAR_DOTNET_GOOGLE_ANALYTICS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2015_NG_BOOTSTRAP_MJS__66 = goog.getMsg(\"Increment hours\");\n      i18n_65 = MSG__HOME_EDUARD_DESKTOP_COOKIE_DIALOGUE_ANGULAR_DOTNET_GOOGLE_ANALYTICS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2015_NG_BOOTSTRAP_MJS__66;\n    } else {\n      i18n_65 = $localize`:@@ngb.timepicker.increment-hours:Increment hours`;\n    }\n\n    let i18n_67;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @suppress {msgDescriptions}\n       */\n      const MSG__HOME_EDUARD_DESKTOP_COOKIE_DIALOGUE_ANGULAR_DOTNET_GOOGLE_ANALYTICS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2015_NG_BOOTSTRAP_MJS__68 = goog.getMsg(\"Decrement hours\");\n      i18n_67 = MSG__HOME_EDUARD_DESKTOP_COOKIE_DIALOGUE_ANGULAR_DOTNET_GOOGLE_ANALYTICS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2015_NG_BOOTSTRAP_MJS__68;\n    } else {\n      i18n_67 = $localize`:@@ngb.timepicker.decrement-hours:Decrement hours`;\n    }\n\n    let i18n_69;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @suppress {msgDescriptions}\n       */\n      const MSG__HOME_EDUARD_DESKTOP_COOKIE_DIALOGUE_ANGULAR_DOTNET_GOOGLE_ANALYTICS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2015_NG_BOOTSTRAP_MJS__70 = goog.getMsg(\"Increment minutes\");\n      i18n_69 = MSG__HOME_EDUARD_DESKTOP_COOKIE_DIALOGUE_ANGULAR_DOTNET_GOOGLE_ANALYTICS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2015_NG_BOOTSTRAP_MJS__70;\n    } else {\n      i18n_69 = $localize`:@@ngb.timepicker.increment-minutes:Increment minutes`;\n    }\n\n    let i18n_71;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @suppress {msgDescriptions}\n       */\n      const MSG__HOME_EDUARD_DESKTOP_COOKIE_DIALOGUE_ANGULAR_DOTNET_GOOGLE_ANALYTICS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2015_NG_BOOTSTRAP_MJS__72 = goog.getMsg(\"Decrement minutes\");\n      i18n_71 = MSG__HOME_EDUARD_DESKTOP_COOKIE_DIALOGUE_ANGULAR_DOTNET_GOOGLE_ANALYTICS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2015_NG_BOOTSTRAP_MJS__72;\n    } else {\n      i18n_71 = $localize`:@@ngb.timepicker.decrement-minutes:Decrement minutes`;\n    }\n\n    let i18n_73;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @suppress {msgDescriptions}\n       */\n      const MSG__HOME_EDUARD_DESKTOP_COOKIE_DIALOGUE_ANGULAR_DOTNET_GOOGLE_ANALYTICS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2015_NG_BOOTSTRAP_MJS__74 = goog.getMsg(\"SS\");\n      i18n_73 = MSG__HOME_EDUARD_DESKTOP_COOKIE_DIALOGUE_ANGULAR_DOTNET_GOOGLE_ANALYTICS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2015_NG_BOOTSTRAP_MJS__74;\n    } else {\n      i18n_73 = $localize`:@@ngb.timepicker.SS:SS`;\n    }\n\n    let i18n_75;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @suppress {msgDescriptions}\n       */\n      const MSG__HOME_EDUARD_DESKTOP_COOKIE_DIALOGUE_ANGULAR_DOTNET_GOOGLE_ANALYTICS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2015_NG_BOOTSTRAP_MJS__76 = goog.getMsg(\"Seconds\");\n      i18n_75 = MSG__HOME_EDUARD_DESKTOP_COOKIE_DIALOGUE_ANGULAR_DOTNET_GOOGLE_ANALYTICS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2015_NG_BOOTSTRAP_MJS__76;\n    } else {\n      i18n_75 = $localize`:@@ngb.timepicker.seconds:Seconds`;\n    }\n\n    let i18n_77;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @suppress {msgDescriptions}\n       */\n      const MSG__HOME_EDUARD_DESKTOP_COOKIE_DIALOGUE_ANGULAR_DOTNET_GOOGLE_ANALYTICS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2015_NG_BOOTSTRAP_MJS___78 = goog.getMsg(\"Increment seconds\");\n      i18n_77 = MSG__HOME_EDUARD_DESKTOP_COOKIE_DIALOGUE_ANGULAR_DOTNET_GOOGLE_ANALYTICS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2015_NG_BOOTSTRAP_MJS___78;\n    } else {\n      i18n_77 = $localize`:@@ngb.timepicker.increment-seconds:Increment seconds`;\n    }\n\n    let i18n_79;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @suppress {msgDescriptions}\n       */\n      const MSG__HOME_EDUARD_DESKTOP_COOKIE_DIALOGUE_ANGULAR_DOTNET_GOOGLE_ANALYTICS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2015_NG_BOOTSTRAP_MJS___80 = goog.getMsg(\"Decrement seconds\");\n      i18n_79 = MSG__HOME_EDUARD_DESKTOP_COOKIE_DIALOGUE_ANGULAR_DOTNET_GOOGLE_ANALYTICS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2015_NG_BOOTSTRAP_MJS___80;\n    } else {\n      i18n_79 = $localize`:@@ngb.timepicker.decrement-seconds:Decrement seconds`;\n    }\n\n    let i18n_81;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @suppress {msgDescriptions}\n       */\n      const MSG__HOME_EDUARD_DESKTOP_COOKIE_DIALOGUE_ANGULAR_DOTNET_GOOGLE_ANALYTICS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2015_NG_BOOTSTRAP_MJS___82 = goog.getMsg(\"{$interpolation}\", {\n        \"interpolation\": \"\\uFFFD0\\uFFFD\"\n      });\n      i18n_81 = MSG__HOME_EDUARD_DESKTOP_COOKIE_DIALOGUE_ANGULAR_DOTNET_GOOGLE_ANALYTICS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2015_NG_BOOTSTRAP_MJS___82;\n    } else {\n      i18n_81 = $localize`:@@ngb.timepicker.PM:${\"\\uFFFD0\\uFFFD\"}:INTERPOLATION:`;\n    }\n\n    let i18n_83;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @suppress {msgDescriptions}\n       */\n      const MSG__HOME_EDUARD_DESKTOP_COOKIE_DIALOGUE_ANGULAR_DOTNET_GOOGLE_ANALYTICS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2015_NG_BOOTSTRAP_MJS___84 = goog.getMsg(\"{$interpolation}\", {\n        \"interpolation\": \"\\uFFFD0\\uFFFD\"\n      });\n      i18n_83 = MSG__HOME_EDUARD_DESKTOP_COOKIE_DIALOGUE_ANGULAR_DOTNET_GOOGLE_ANALYTICS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2015_NG_BOOTSTRAP_MJS___84;\n    } else {\n      i18n_83 = $localize`:@@ngb.timepicker.AM:${\"\\uFFFD0\\uFFFD\"}:INTERPOLATION:`;\n    }\n\n    return [[3, \"disabled\"], [1, \"ngb-tp\"], [1, \"ngb-tp-input-container\", \"ngb-tp-hour\"], [\"tabindex\", \"-1\", \"type\", \"button\", \"class\", \"btn btn-link\", 3, \"btn-sm\", \"btn-lg\", \"disabled\", \"click\", 4, \"ngIf\"], [\"type\", \"text\", \"maxlength\", \"2\", \"inputmode\", \"numeric\", \"placeholder\", i18n_57, \"aria-label\", i18n_59, 1, \"ngb-tp-input\", \"form-control\", 3, \"value\", \"readOnly\", \"disabled\", \"change\", \"blur\", \"input\", \"keydown.ArrowUp\", \"keydown.ArrowDown\"], [1, \"ngb-tp-spacer\"], [1, \"ngb-tp-input-container\", \"ngb-tp-minute\"], [\"type\", \"text\", \"maxlength\", \"2\", \"inputmode\", \"numeric\", \"placeholder\", i18n_61, \"aria-label\", i18n_63, 1, \"ngb-tp-input\", \"form-control\", 3, \"value\", \"readOnly\", \"disabled\", \"change\", \"blur\", \"input\", \"keydown.ArrowUp\", \"keydown.ArrowDown\"], [\"class\", \"ngb-tp-spacer\", 4, \"ngIf\"], [\"class\", \"ngb-tp-input-container ngb-tp-second\", 4, \"ngIf\"], [\"class\", \"ngb-tp-meridian\", 4, \"ngIf\"], [\"tabindex\", \"-1\", \"type\", \"button\", 1, \"btn\", \"btn-link\", 3, \"disabled\", \"click\"], [1, \"chevron\", \"ngb-tp-chevron\"], [1, \"visually-hidden\"], i18n_65, [1, \"chevron\", \"ngb-tp-chevron\", \"bottom\"], i18n_67, i18n_69, i18n_71, [1, \"ngb-tp-input-container\", \"ngb-tp-second\"], [\"type\", \"text\", \"maxlength\", \"2\", \"inputmode\", \"numeric\", \"placeholder\", i18n_73, \"aria-label\", i18n_75, 1, \"ngb-tp-input\", \"form-control\", 3, \"value\", \"readOnly\", \"disabled\", \"change\", \"blur\", \"input\", \"keydown.ArrowUp\", \"keydown.ArrowDown\"], i18n_77, i18n_79, [1, \"ngb-tp-meridian\"], [\"type\", \"button\", 1, \"btn\", \"btn-outline-primary\", 3, \"disabled\", \"click\"], [4, \"ngIf\", \"ngIfElse\"], [\"am\", \"\"], i18n_81, i18n_83];\n  },\n  template: function NgbTimepicker_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"fieldset\", 0)(1, \"div\", 1)(2, \"div\", 2);\n      i0.ɵɵtemplate(3, NgbTimepicker_button_3_Template, 4, 7, \"button\", 3);\n      i0.ɵɵelementStart(4, \"input\", 4);\n      i0.ɵɵlistener(\"change\", function NgbTimepicker_Template_input_change_4_listener($event) {\n        return ctx.updateHour($event.target.value);\n      })(\"blur\", function NgbTimepicker_Template_input_blur_4_listener() {\n        return ctx.handleBlur();\n      })(\"input\", function NgbTimepicker_Template_input_input_4_listener($event) {\n        return ctx.formatInput($event.target);\n      })(\"keydown.ArrowUp\", function NgbTimepicker_Template_input_keydown_ArrowUp_4_listener($event) {\n        ctx.changeHour(ctx.hourStep);\n        return $event.preventDefault();\n      })(\"keydown.ArrowDown\", function NgbTimepicker_Template_input_keydown_ArrowDown_4_listener($event) {\n        ctx.changeHour(-ctx.hourStep);\n        return $event.preventDefault();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(5, NgbTimepicker_button_5_Template, 4, 7, \"button\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"div\", 5);\n      i0.ɵɵtext(7, \":\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"div\", 6);\n      i0.ɵɵtemplate(9, NgbTimepicker_button_9_Template, 4, 7, \"button\", 3);\n      i0.ɵɵelementStart(10, \"input\", 7);\n      i0.ɵɵlistener(\"change\", function NgbTimepicker_Template_input_change_10_listener($event) {\n        return ctx.updateMinute($event.target.value);\n      })(\"blur\", function NgbTimepicker_Template_input_blur_10_listener() {\n        return ctx.handleBlur();\n      })(\"input\", function NgbTimepicker_Template_input_input_10_listener($event) {\n        return ctx.formatInput($event.target);\n      })(\"keydown.ArrowUp\", function NgbTimepicker_Template_input_keydown_ArrowUp_10_listener($event) {\n        ctx.changeMinute(ctx.minuteStep);\n        return $event.preventDefault();\n      })(\"keydown.ArrowDown\", function NgbTimepicker_Template_input_keydown_ArrowDown_10_listener($event) {\n        ctx.changeMinute(-ctx.minuteStep);\n        return $event.preventDefault();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(11, NgbTimepicker_button_11_Template, 4, 7, \"button\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(12, NgbTimepicker_div_12_Template, 2, 0, \"div\", 8);\n      i0.ɵɵtemplate(13, NgbTimepicker_div_13_Template, 4, 9, \"div\", 9);\n      i0.ɵɵtemplate(14, NgbTimepicker_div_14_Template, 1, 0, \"div\", 8);\n      i0.ɵɵtemplate(15, NgbTimepicker_div_15_Template, 5, 9, \"div\", 10);\n      i0.ɵɵelementEnd()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"disabled\", ctx.disabled);\n      i0.ɵɵproperty(\"disabled\", ctx.disabled);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.spinners);\n      i0.ɵɵadvance(1);\n      i0.ɵɵclassProp(\"form-control-sm\", ctx.isSmallSize)(\"form-control-lg\", ctx.isLargeSize);\n      i0.ɵɵproperty(\"value\", ctx.formatHour(ctx.model == null ? null : ctx.model.hour))(\"readOnly\", ctx.readonlyInputs)(\"disabled\", ctx.disabled);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.spinners);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", ctx.spinners);\n      i0.ɵɵadvance(1);\n      i0.ɵɵclassProp(\"form-control-sm\", ctx.isSmallSize)(\"form-control-lg\", ctx.isLargeSize);\n      i0.ɵɵproperty(\"value\", ctx.formatMinSec(ctx.model == null ? null : ctx.model.minute))(\"readOnly\", ctx.readonlyInputs)(\"disabled\", ctx.disabled);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.spinners);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.seconds);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.seconds);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.meridian);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.meridian);\n    }\n  },\n  directives: [i2.NgIf],\n  styles: [\"ngb-timepicker{font-size:1rem}.ngb-tp{display:flex;align-items:center}.ngb-tp-input-container{width:4em}.ngb-tp-chevron:before{border-style:solid;border-width:.29em .29em 0 0;content:\\\"\\\";display:inline-block;height:.69em;left:.05em;position:relative;top:.15em;transform:rotate(-45deg);vertical-align:middle;width:.69em}.ngb-tp-chevron.bottom:before{top:-.3em;transform:rotate(135deg)}.ngb-tp-input{text-align:center}.ngb-tp-hour,.ngb-tp-minute,.ngb-tp-second,.ngb-tp-meridian{display:flex;flex-direction:column;align-items:center;justify-content:space-around}.ngb-tp-spacer{width:1em;text-align:center}\\n\"],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbTimepicker, [{\n    type: Component,\n    args: [{\n      selector: 'ngb-timepicker',\n      encapsulation: ViewEncapsulation.None,\n      template: `\n    <fieldset [disabled]=\"disabled\" [class.disabled]=\"disabled\">\n      <div class=\"ngb-tp\">\n        <div class=\"ngb-tp-input-container ngb-tp-hour\">\n          <button *ngIf=\"spinners\" tabindex=\"-1\" type=\"button\" (click)=\"changeHour(hourStep)\"\n            class=\"btn btn-link\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\" [class.disabled]=\"disabled\"\n            [disabled]=\"disabled\">\n            <span class=\"chevron ngb-tp-chevron\"></span>\n            <span class=\"visually-hidden\" i18n=\"@@ngb.timepicker.increment-hours\">Increment hours</span>\n          </button>\n          <input type=\"text\" class=\"ngb-tp-input form-control\" [class.form-control-sm]=\"isSmallSize\"\n            [class.form-control-lg]=\"isLargeSize\"\n            maxlength=\"2\" inputmode=\"numeric\" placeholder=\"HH\" i18n-placeholder=\"@@ngb.timepicker.HH\"\n            [value]=\"formatHour(model?.hour)\" (change)=\"updateHour($any($event).target.value)\"\n            [readOnly]=\"readonlyInputs\" [disabled]=\"disabled\" aria-label=\"Hours\" i18n-aria-label=\"@@ngb.timepicker.hours\"\n            (blur)=\"handleBlur()\"\n            (input)=\"formatInput($any($event).target)\"\n            (keydown.ArrowUp)=\"changeHour(hourStep); $event.preventDefault()\"\n            (keydown.ArrowDown)=\"changeHour(-hourStep); $event.preventDefault()\">\n          <button *ngIf=\"spinners\" tabindex=\"-1\" type=\"button\" (click)=\"changeHour(-hourStep)\"\n            class=\"btn btn-link\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\" [class.disabled]=\"disabled\"\n            [disabled]=\"disabled\">\n            <span class=\"chevron ngb-tp-chevron bottom\"></span>\n            <span class=\"visually-hidden\" i18n=\"@@ngb.timepicker.decrement-hours\">Decrement hours</span>\n          </button>\n        </div>\n        <div class=\"ngb-tp-spacer\">:</div>\n        <div class=\"ngb-tp-input-container ngb-tp-minute\">\n          <button *ngIf=\"spinners\" tabindex=\"-1\" type=\"button\" (click)=\"changeMinute(minuteStep)\"\n            class=\"btn btn-link\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\" [class.disabled]=\"disabled\"\n            [disabled]=\"disabled\">\n            <span class=\"chevron ngb-tp-chevron\"></span>\n            <span class=\"visually-hidden\" i18n=\"@@ngb.timepicker.increment-minutes\">Increment minutes</span>\n          </button>\n          <input type=\"text\" class=\"ngb-tp-input form-control\" [class.form-control-sm]=\"isSmallSize\" [class.form-control-lg]=\"isLargeSize\"\n            maxlength=\"2\" inputmode=\"numeric\" placeholder=\"MM\" i18n-placeholder=\"@@ngb.timepicker.MM\"\n            [value]=\"formatMinSec(model?.minute)\" (change)=\"updateMinute($any($event).target.value)\"\n            [readOnly]=\"readonlyInputs\" [disabled]=\"disabled\" aria-label=\"Minutes\" i18n-aria-label=\"@@ngb.timepicker.minutes\"\n            (blur)=\"handleBlur()\"\n            (input)=\"formatInput($any($event).target)\"\n            (keydown.ArrowUp)=\"changeMinute(minuteStep); $event.preventDefault()\"\n            (keydown.ArrowDown)=\"changeMinute(-minuteStep); $event.preventDefault()\">\n          <button *ngIf=\"spinners\" tabindex=\"-1\" type=\"button\" (click)=\"changeMinute(-minuteStep)\"\n            class=\"btn btn-link\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\"  [class.disabled]=\"disabled\"\n            [disabled]=\"disabled\">\n            <span class=\"chevron ngb-tp-chevron bottom\"></span>\n            <span class=\"visually-hidden\"  i18n=\"@@ngb.timepicker.decrement-minutes\">Decrement minutes</span>\n          </button>\n        </div>\n        <div *ngIf=\"seconds\" class=\"ngb-tp-spacer\">:</div>\n        <div *ngIf=\"seconds\" class=\"ngb-tp-input-container ngb-tp-second\">\n          <button *ngIf=\"spinners\" tabindex=\"-1\" type=\"button\" (click)=\"changeSecond(secondStep)\"\n            class=\"btn btn-link\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\" [class.disabled]=\"disabled\"\n            [disabled]=\"disabled\">\n            <span class=\"chevron ngb-tp-chevron\"></span>\n            <span class=\"visually-hidden\" i18n=\"@@ngb.timepicker.increment-seconds\">Increment seconds</span>\n          </button>\n          <input type=\"text\" class=\"ngb-tp-input form-control\" [class.form-control-sm]=\"isSmallSize\" [class.form-control-lg]=\"isLargeSize\"\n            maxlength=\"2\" inputmode=\"numeric\" placeholder=\"SS\" i18n-placeholder=\"@@ngb.timepicker.SS\"\n            [value]=\"formatMinSec(model?.second)\" (change)=\"updateSecond($any($event).target.value)\"\n            [readOnly]=\"readonlyInputs\" [disabled]=\"disabled\" aria-label=\"Seconds\" i18n-aria-label=\"@@ngb.timepicker.seconds\"\n            (blur)=\"handleBlur()\"\n            (input)=\"formatInput($any($event).target)\"\n            (keydown.ArrowUp)=\"changeSecond(secondStep); $event.preventDefault()\"\n            (keydown.ArrowDown)=\"changeSecond(-secondStep); $event.preventDefault()\">\n          <button *ngIf=\"spinners\" tabindex=\"-1\" type=\"button\" (click)=\"changeSecond(-secondStep)\"\n            class=\"btn btn-link\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\"  [class.disabled]=\"disabled\"\n            [disabled]=\"disabled\">\n            <span class=\"chevron ngb-tp-chevron bottom\"></span>\n            <span class=\"visually-hidden\" i18n=\"@@ngb.timepicker.decrement-seconds\">Decrement seconds</span>\n          </button>\n        </div>\n        <div *ngIf=\"meridian\" class=\"ngb-tp-spacer\"></div>\n        <div *ngIf=\"meridian\" class=\"ngb-tp-meridian\">\n          <button type=\"button\" class=\"btn btn-outline-primary\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\"\n            [disabled]=\"disabled\" [class.disabled]=\"disabled\"\n                  (click)=\"toggleMeridian()\">\n            <ng-container *ngIf=\"model && model.hour >= 12; else am\"\n                          i18n=\"@@ngb.timepicker.PM\">{{ i18n.getAfternoonPeriod() }}</ng-container>\n            <ng-template #am i18n=\"@@ngb.timepicker.AM\">{{ i18n.getMorningPeriod() }}</ng-template>\n          </button>\n        </div>\n      </div>\n    </fieldset>\n  `,\n      providers: [{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => NgbTimepicker),\n        multi: true\n      }],\n      styles: [\"ngb-timepicker{font-size:1rem}.ngb-tp{display:flex;align-items:center}.ngb-tp-input-container{width:4em}.ngb-tp-chevron:before{border-style:solid;border-width:.29em .29em 0 0;content:\\\"\\\";display:inline-block;height:.69em;left:.05em;position:relative;top:.15em;transform:rotate(-45deg);vertical-align:middle;width:.69em}.ngb-tp-chevron.bottom:before{top:-.3em;transform:rotate(135deg)}.ngb-tp-input{text-align:center}.ngb-tp-hour,.ngb-tp-minute,.ngb-tp-second,.ngb-tp-meridian{display:flex;flex-direction:column;align-items:center;justify-content:space-around}.ngb-tp-spacer{width:1em;text-align:center}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: NgbTimepickerConfig\n    }, {\n      type: NgbTimeAdapter\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: NgbTimepickerI18n\n    }];\n  }, {\n    meridian: [{\n      type: Input\n    }],\n    spinners: [{\n      type: Input\n    }],\n    seconds: [{\n      type: Input\n    }],\n    hourStep: [{\n      type: Input\n    }],\n    minuteStep: [{\n      type: Input\n    }],\n    secondStep: [{\n      type: Input\n    }],\n    readonlyInputs: [{\n      type: Input\n    }],\n    size: [{\n      type: Input\n    }]\n  });\n})();\n\nclass NgbTimepickerModule {}\n\nNgbTimepickerModule.ɵfac = function NgbTimepickerModule_Factory(t) {\n  return new (t || NgbTimepickerModule)();\n};\n\nNgbTimepickerModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: NgbTimepickerModule\n});\nNgbTimepickerModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbTimepickerModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [NgbTimepicker],\n      exports: [NgbTimepicker],\n      imports: [CommonModule]\n    }]\n  }], null, null);\n})();\n\nconst ngbToastFadeInTransition = (element, animation) => {\n  const {\n    classList\n  } = element;\n\n  if (!animation) {\n    classList.add('show');\n    return;\n  }\n\n  classList.remove('hide');\n  reflow(element);\n  classList.add('showing');\n  return () => {\n    classList.remove('showing');\n    classList.add('show');\n  };\n};\n\nconst ngbToastFadeOutTransition = ({\n  classList\n}) => {\n  classList.remove('show');\n  return () => {\n    classList.add('hide');\n  };\n};\n/**\n * Configuration service for the NgbToast component. You can inject this service, typically in your root component,\n * and customize the values of its properties in order to provide default values for all the toasts used in the\n * application.\n *\n * @since 5.0.0\n */\n\n\nclass NgbToastConfig {\n  constructor(_ngbConfig) {\n    this._ngbConfig = _ngbConfig;\n    this.autohide = true;\n    this.delay = 5000;\n    this.ariaLive = 'polite';\n  }\n\n  get animation() {\n    return this._animation === undefined ? this._ngbConfig.animation : this._animation;\n  }\n\n  set animation(animation) {\n    this._animation = animation;\n  }\n\n}\n\nNgbToastConfig.ɵfac = function NgbToastConfig_Factory(t) {\n  return new (t || NgbToastConfig)(i0.ɵɵinject(NgbConfig));\n};\n\nNgbToastConfig.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: NgbToastConfig,\n  factory: NgbToastConfig.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbToastConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: NgbConfig\n    }];\n  }, null);\n})();\n/**\n * This directive allows the usage of HTML markup or other directives\n * inside of the toast's header.\n *\n * @since 5.0.0\n */\n\n\nclass NgbToastHeader {}\n\nNgbToastHeader.ɵfac = function NgbToastHeader_Factory(t) {\n  return new (t || NgbToastHeader)();\n};\n\nNgbToastHeader.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: NgbToastHeader,\n  selectors: [[\"\", \"ngbToastHeader\", \"\"]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbToastHeader, [{\n    type: Directive,\n    args: [{\n      selector: '[ngbToastHeader]'\n    }]\n  }], null, null);\n})();\n/**\n * Toasts provide feedback messages as notifications to the user.\n * Goal is to mimic the push notifications available both on mobile and desktop operating systems.\n *\n * @since 5.0.0\n */\n\n\nclass NgbToast {\n  constructor(ariaLive, config, _zone, _element) {\n    this.ariaLive = ariaLive;\n    this._zone = _zone;\n    this._element = _element;\n    /**\n     * A template like `<ng-template ngbToastHeader></ng-template>` can be\n     * used in the projected content to allow markup usage.\n     */\n\n    this.contentHeaderTpl = null;\n    /**\n     * An event fired after the animation triggered by calling `.show()` method has finished.\n     *\n     * @since 8.0.0\n     */\n\n    this.shown = new EventEmitter();\n    /**\n     * An event fired after the animation triggered by calling `.hide()` method has finished.\n     *\n     * It can only occur in 2 different scenarios:\n     * - `autohide` timeout fires\n     * - user clicks on a closing cross\n     *\n     * Additionally this output is purely informative. The toast won't be removed from DOM automatically, it's up\n     * to the user to take care of that.\n     *\n     * @since 8.0.0\n     */\n\n    this.hidden = new EventEmitter();\n\n    if (this.ariaLive == null) {\n      this.ariaLive = config.ariaLive;\n    }\n\n    this.delay = config.delay;\n    this.autohide = config.autohide;\n    this.animation = config.animation;\n  }\n\n  ngAfterContentInit() {\n    this._zone.onStable.asObservable().pipe(take(1)).subscribe(() => {\n      this._init();\n\n      this.show();\n    });\n  }\n\n  ngOnChanges(changes) {\n    if ('autohide' in changes) {\n      this._clearTimeout();\n\n      this._init();\n    }\n  }\n  /**\n   * Triggers toast closing programmatically.\n   *\n   * The returned observable will emit and be completed once the closing transition has finished.\n   * If the animations are turned off this happens synchronously.\n   *\n   * Alternatively you could listen or subscribe to the `(hidden)` output\n   *\n   * @since 8.0.0\n   */\n\n\n  hide() {\n    this._clearTimeout();\n\n    const transition = ngbRunTransition(this._zone, this._element.nativeElement, ngbToastFadeOutTransition, {\n      animation: this.animation,\n      runningTransition: 'stop'\n    });\n    transition.subscribe(() => {\n      this.hidden.emit();\n    });\n    return transition;\n  }\n  /**\n   * Triggers toast opening programmatically.\n   *\n   * The returned observable will emit and be completed once the opening transition has finished.\n   * If the animations are turned off this happens synchronously.\n   *\n   * Alternatively you could listen or subscribe to the `(shown)` output\n   *\n   * @since 8.0.0\n   */\n\n\n  show() {\n    const transition = ngbRunTransition(this._zone, this._element.nativeElement, ngbToastFadeInTransition, {\n      animation: this.animation,\n      runningTransition: 'continue'\n    });\n    transition.subscribe(() => {\n      this.shown.emit();\n    });\n    return transition;\n  }\n\n  _init() {\n    if (this.autohide && !this._timeoutID) {\n      this._timeoutID = setTimeout(() => this.hide(), this.delay);\n    }\n  }\n\n  _clearTimeout() {\n    if (this._timeoutID) {\n      clearTimeout(this._timeoutID);\n      this._timeoutID = null;\n    }\n  }\n\n}\n\nNgbToast.ɵfac = function NgbToast_Factory(t) {\n  return new (t || NgbToast)(i0.ɵɵinjectAttribute('aria-live'), i0.ɵɵdirectiveInject(NgbToastConfig), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.ElementRef));\n};\n\nNgbToast.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NgbToast,\n  selectors: [[\"ngb-toast\"]],\n  contentQueries: function NgbToast_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, NgbToastHeader, 7, TemplateRef);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.contentHeaderTpl = _t.first);\n    }\n  },\n  hostAttrs: [\"role\", \"alert\", \"aria-atomic\", \"true\", 1, \"toast\"],\n  hostVars: 3,\n  hostBindings: function NgbToast_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵattribute(\"aria-live\", ctx.ariaLive);\n      i0.ɵɵclassProp(\"fade\", ctx.animation);\n    }\n  },\n  inputs: {\n    animation: \"animation\",\n    delay: \"delay\",\n    autohide: \"autohide\",\n    header: \"header\"\n  },\n  outputs: {\n    shown: \"shown\",\n    hidden: \"hidden\"\n  },\n  exportAs: [\"ngbToast\"],\n  features: [i0.ɵɵNgOnChangesFeature],\n  ngContentSelectors: _c3,\n  decls: 5,\n  vars: 1,\n  consts: function () {\n    let i18n_85;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @suppress {msgDescriptions}\n       */\n      const MSG__HOME_EDUARD_DESKTOP_COOKIE_DIALOGUE_ANGULAR_DOTNET_GOOGLE_ANALYTICS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2015_NG_BOOTSTRAP_MJS__86 = goog.getMsg(\"Close\");\n      i18n_85 = MSG__HOME_EDUARD_DESKTOP_COOKIE_DIALOGUE_ANGULAR_DOTNET_GOOGLE_ANALYTICS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2015_NG_BOOTSTRAP_MJS__86;\n    } else {\n      i18n_85 = $localize`:@@ngb.toast.close-aria:Close`;\n    }\n\n    return [[\"headerTpl\", \"\"], [3, \"ngIf\"], [1, \"toast-body\"], [1, \"me-auto\"], [1, \"toast-header\"], [3, \"ngTemplateOutlet\"], [\"type\", \"button\", \"aria-label\", i18n_85, 1, \"btn-close\", 3, \"click\"]];\n  },\n  template: function NgbToast_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵtemplate(0, NgbToast_ng_template_0_Template, 2, 1, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵtemplate(2, NgbToast_ng_template_2_Template, 3, 1, \"ng-template\", 1);\n      i0.ɵɵelementStart(3, \"div\", 2);\n      i0.ɵɵprojection(4);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.contentHeaderTpl || ctx.header);\n    }\n  },\n  directives: [i2.NgIf, i2.NgTemplateOutlet],\n  styles: [\"ngb-toast{display:block}ngb-toast .toast-header .close{margin-left:auto;margin-bottom:.25rem}\\n\"],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbToast, [{\n    type: Component,\n    args: [{\n      selector: 'ngb-toast',\n      exportAs: 'ngbToast',\n      encapsulation: ViewEncapsulation.None,\n      host: {\n        'role': 'alert',\n        '[attr.aria-live]': 'ariaLive',\n        'aria-atomic': 'true',\n        'class': 'toast',\n        '[class.fade]': 'animation'\n      },\n      template: `\n    <ng-template #headerTpl>\n      <strong class=\"me-auto\">{{header}}</strong>\n    </ng-template>\n    <ng-template [ngIf]=\"contentHeaderTpl || header\">\n      <div class=\"toast-header\">\n        <ng-template [ngTemplateOutlet]=\"contentHeaderTpl || headerTpl\"></ng-template>\n        <button type=\"button\" class=\"btn-close\" aria-label=\"Close\" i18n-aria-label=\"@@ngb.toast.close-aria\" (click)=\"hide()\">\n        </button>\n      </div>\n    </ng-template>\n    <div class=\"toast-body\">\n      <ng-content></ng-content>\n    </div>\n  `,\n      styles: [\"ngb-toast{display:block}ngb-toast .toast-header .close{margin-left:auto;margin-bottom:.25rem}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Attribute,\n        args: ['aria-live']\n      }]\n    }, {\n      type: NgbToastConfig\n    }, {\n      type: i0.NgZone\n    }, {\n      type: i0.ElementRef\n    }];\n  }, {\n    animation: [{\n      type: Input\n    }],\n    delay: [{\n      type: Input\n    }],\n    autohide: [{\n      type: Input\n    }],\n    header: [{\n      type: Input\n    }],\n    contentHeaderTpl: [{\n      type: ContentChild,\n      args: [NgbToastHeader, {\n        read: TemplateRef,\n        static: true\n      }]\n    }],\n    shown: [{\n      type: Output\n    }],\n    hidden: [{\n      type: Output\n    }]\n  });\n})();\n\nclass NgbToastModule {}\n\nNgbToastModule.ɵfac = function NgbToastModule_Factory(t) {\n  return new (t || NgbToastModule)();\n};\n\nNgbToastModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: NgbToastModule\n});\nNgbToastModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbToastModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [NgbToast, NgbToastHeader],\n      imports: [CommonModule],\n      exports: [NgbToast, NgbToastHeader]\n    }]\n  }], null, null);\n})();\n/**\n * A configuration service for the [`NgbTooltip`](#/components/tooltip/api#NgbTooltip) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the tooltips used in the application.\n */\n\n\nclass NgbTooltipConfig {\n  constructor(_ngbConfig) {\n    this._ngbConfig = _ngbConfig;\n    this.autoClose = true;\n    this.placement = 'auto';\n    this.triggers = 'hover focus';\n    this.disableTooltip = false;\n    this.openDelay = 0;\n    this.closeDelay = 0;\n  }\n\n  get animation() {\n    return this._animation === undefined ? this._ngbConfig.animation : this._animation;\n  }\n\n  set animation(animation) {\n    this._animation = animation;\n  }\n\n}\n\nNgbTooltipConfig.ɵfac = function NgbTooltipConfig_Factory(t) {\n  return new (t || NgbTooltipConfig)(i0.ɵɵinject(NgbConfig));\n};\n\nNgbTooltipConfig.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: NgbTooltipConfig,\n  factory: NgbTooltipConfig.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbTooltipConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: NgbConfig\n    }];\n  }, null);\n})();\n\nlet nextId = 0;\n\nclass NgbTooltipWindow {}\n\nNgbTooltipWindow.ɵfac = function NgbTooltipWindow_Factory(t) {\n  return new (t || NgbTooltipWindow)();\n};\n\nNgbTooltipWindow.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NgbTooltipWindow,\n  selectors: [[\"ngb-tooltip-window\"]],\n  hostAttrs: [\"role\", \"tooltip\"],\n  hostVars: 5,\n  hostBindings: function NgbTooltipWindow_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵhostProperty(\"id\", ctx.id);\n      i0.ɵɵclassMap(\"tooltip\" + (ctx.tooltipClass ? \" \" + ctx.tooltipClass : \"\"));\n      i0.ɵɵclassProp(\"fade\", ctx.animation);\n    }\n  },\n  inputs: {\n    animation: \"animation\",\n    id: \"id\",\n    tooltipClass: \"tooltipClass\"\n  },\n  ngContentSelectors: _c3,\n  decls: 3,\n  vars: 0,\n  consts: [[\"data-popper-arrow\", \"\", 1, \"tooltip-arrow\"], [1, \"tooltip-inner\"]],\n  template: function NgbTooltipWindow_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵelement(0, \"div\", 0);\n      i0.ɵɵelementStart(1, \"div\", 1);\n      i0.ɵɵprojection(2);\n      i0.ɵɵelementEnd();\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbTooltipWindow, [{\n    type: Component,\n    args: [{\n      selector: 'ngb-tooltip-window',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      host: {\n        '[class]': '\"tooltip\" + (tooltipClass ? \" \" + tooltipClass : \"\")',\n        '[class.fade]': 'animation',\n        'role': 'tooltip',\n        '[id]': 'id'\n      },\n      template: `<div class=\"tooltip-arrow\" data-popper-arrow></div><div class=\"tooltip-inner\"><ng-content></ng-content></div>`\n    }]\n  }], null, {\n    animation: [{\n      type: Input\n    }],\n    id: [{\n      type: Input\n    }],\n    tooltipClass: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * A lightweight and extensible directive for fancy tooltip creation.\n */\n\n\nclass NgbTooltip {\n  constructor(_elementRef, _renderer, injector, viewContainerRef, config, _ngZone, _document, _changeDetector, applicationRef) {\n    this._elementRef = _elementRef;\n    this._renderer = _renderer;\n    this._ngZone = _ngZone;\n    this._document = _document;\n    this._changeDetector = _changeDetector;\n    /**\n     * An event emitted when the tooltip opening animation has finished. Contains no payload.\n     */\n\n    this.shown = new EventEmitter();\n    /**\n     * An event emitted when the tooltip closing animation has finished. Contains no payload.\n     */\n\n    this.hidden = new EventEmitter();\n    this._ngbTooltipWindowId = `ngb-tooltip-${nextId++}`;\n    this._windowRef = null;\n    this._positioning = ngbPositioning();\n    this.animation = config.animation;\n    this.autoClose = config.autoClose;\n    this.placement = config.placement;\n    this.triggers = config.triggers;\n    this.container = config.container;\n    this.disableTooltip = config.disableTooltip;\n    this.tooltipClass = config.tooltipClass;\n    this.openDelay = config.openDelay;\n    this.closeDelay = config.closeDelay;\n    this._popupService = new PopupService(NgbTooltipWindow, injector, viewContainerRef, _renderer, this._ngZone, applicationRef);\n  }\n  /**\n   * The string content or a `TemplateRef` for the content to be displayed in the tooltip.\n   *\n   * If the content if falsy, the tooltip won't open.\n   */\n\n\n  set ngbTooltip(value) {\n    this._ngbTooltip = value;\n\n    if (!value && this._windowRef) {\n      this.close();\n    }\n  }\n\n  get ngbTooltip() {\n    return this._ngbTooltip;\n  }\n  /**\n   * Opens the tooltip.\n   *\n   * This is considered to be a \"manual\" triggering.\n   * The `context` is an optional value to be injected into the tooltip template when it is created.\n   */\n\n\n  open(context) {\n    if (!this._windowRef && this._ngbTooltip && !this.disableTooltip) {\n      const {\n        windowRef,\n        transition$\n      } = this._popupService.open(this._ngbTooltip, context, this.animation);\n\n      this._windowRef = windowRef;\n      this._windowRef.instance.animation = this.animation;\n      this._windowRef.instance.tooltipClass = this.tooltipClass;\n      this._windowRef.instance.id = this._ngbTooltipWindowId;\n\n      this._renderer.setAttribute(this._elementRef.nativeElement, 'aria-describedby', this._ngbTooltipWindowId);\n\n      if (this.container === 'body') {\n        this._document.querySelector(this.container).appendChild(this._windowRef.location.nativeElement);\n      } // We need to detect changes, because we don't know where .open() might be called from.\n      // Ex. opening tooltip from one of lifecycle hooks that run after the CD\n      // (say from ngAfterViewInit) will result in 'ExpressionHasChanged' exception\n\n\n      this._windowRef.changeDetectorRef.detectChanges(); // We need to mark for check, because tooltip won't work inside the OnPush component.\n      // Ex. when we use expression like `{{ tooltip.isOpen() : 'opened' : 'closed' }}`\n      // inside the template of an OnPush component and we change the tooltip from\n      // open -> closed, the expression in question won't be updated unless we explicitly\n      // mark the parent component to be checked.\n\n\n      this._windowRef.changeDetectorRef.markForCheck(); // Setting up popper and scheduling updates when zone is stable\n\n\n      this._ngZone.runOutsideAngular(() => {\n        this._positioning.createPopper({\n          hostElement: this._elementRef.nativeElement,\n          targetElement: this._windowRef.location.nativeElement,\n          placement: this.placement,\n          appendToBody: this.container === 'body',\n          baseClass: 'bs-tooltip'\n        });\n\n        Promise.resolve().then(() => {\n          // This update is required for correct arrow placement\n          this._positioning.update();\n\n          this._zoneSubscription = this._ngZone.onStable.subscribe(() => this._positioning.update());\n        });\n      });\n\n      ngbAutoClose(this._ngZone, this._document, this.autoClose, () => this.close(), this.hidden, [this._windowRef.location.nativeElement]);\n      transition$.subscribe(() => this.shown.emit());\n    }\n  }\n  /**\n   * Closes the tooltip.\n   *\n   * This is considered to be a \"manual\" triggering of the tooltip.\n   */\n\n\n  close(animation = this.animation) {\n    if (this._windowRef != null) {\n      this._renderer.removeAttribute(this._elementRef.nativeElement, 'aria-describedby');\n\n      this._popupService.close(animation).subscribe(() => {\n        var _a;\n\n        this._windowRef = null;\n\n        this._positioning.destroy();\n\n        (_a = this._zoneSubscription) === null || _a === void 0 ? void 0 : _a.unsubscribe();\n        this.hidden.emit();\n\n        this._changeDetector.markForCheck();\n      });\n    }\n  }\n  /**\n   * Toggles the tooltip.\n   *\n   * This is considered to be a \"manual\" triggering of the tooltip.\n   */\n\n\n  toggle() {\n    if (this._windowRef) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n  /**\n   * Returns `true`, if the popover is currently shown.\n   */\n\n\n  isOpen() {\n    return this._windowRef != null;\n  }\n\n  ngOnInit() {\n    this._unregisterListenersFn = listenToTriggers(this._renderer, this._elementRef.nativeElement, this.triggers, this.isOpen.bind(this), this.open.bind(this), this.close.bind(this), +this.openDelay, +this.closeDelay);\n  }\n\n  ngOnChanges({\n    tooltipClass\n  }) {\n    if (tooltipClass && this.isOpen()) {\n      this._windowRef.instance.tooltipClass = tooltipClass.currentValue;\n    }\n  }\n\n  ngOnDestroy() {\n    var _a;\n\n    this.close(false); // This check is needed as it might happen that ngOnDestroy is called before ngOnInit\n    // under certain conditions, see: https://github.com/ng-bootstrap/ng-bootstrap/issues/2199\n\n    (_a = this._unregisterListenersFn) === null || _a === void 0 ? void 0 : _a.call(this);\n  }\n\n}\n\nNgbTooltip.ɵfac = function NgbTooltip_Factory(t) {\n  return new (t || NgbTooltip)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.Injector), i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(NgbTooltipConfig), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(DOCUMENT), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.ApplicationRef));\n};\n\nNgbTooltip.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: NgbTooltip,\n  selectors: [[\"\", \"ngbTooltip\", \"\"]],\n  inputs: {\n    animation: \"animation\",\n    autoClose: \"autoClose\",\n    placement: \"placement\",\n    triggers: \"triggers\",\n    container: \"container\",\n    disableTooltip: \"disableTooltip\",\n    tooltipClass: \"tooltipClass\",\n    openDelay: \"openDelay\",\n    closeDelay: \"closeDelay\",\n    ngbTooltip: \"ngbTooltip\"\n  },\n  outputs: {\n    shown: \"shown\",\n    hidden: \"hidden\"\n  },\n  exportAs: [\"ngbTooltip\"],\n  features: [i0.ɵɵNgOnChangesFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbTooltip, [{\n    type: Directive,\n    args: [{\n      selector: '[ngbTooltip]',\n      exportAs: 'ngbTooltip'\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: i0.Injector\n    }, {\n      type: i0.ViewContainerRef\n    }, {\n      type: NgbTooltipConfig\n    }, {\n      type: i0.NgZone\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i0.ApplicationRef\n    }];\n  }, {\n    animation: [{\n      type: Input\n    }],\n    autoClose: [{\n      type: Input\n    }],\n    placement: [{\n      type: Input\n    }],\n    triggers: [{\n      type: Input\n    }],\n    container: [{\n      type: Input\n    }],\n    disableTooltip: [{\n      type: Input\n    }],\n    tooltipClass: [{\n      type: Input\n    }],\n    openDelay: [{\n      type: Input\n    }],\n    closeDelay: [{\n      type: Input\n    }],\n    shown: [{\n      type: Output\n    }],\n    hidden: [{\n      type: Output\n    }],\n    ngbTooltip: [{\n      type: Input\n    }]\n  });\n})();\n\nclass NgbTooltipModule {}\n\nNgbTooltipModule.ɵfac = function NgbTooltipModule_Factory(t) {\n  return new (t || NgbTooltipModule)();\n};\n\nNgbTooltipModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: NgbTooltipModule\n});\nNgbTooltipModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbTooltipModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [NgbTooltip, NgbTooltipWindow],\n      exports: [NgbTooltip]\n    }]\n  }], null, null);\n})();\n/**\n * A component that helps with text highlighting.\n *\n * If splits the `result` text into parts that contain the searched `term` and generates the HTML markup to simplify\n * highlighting:\n *\n * Ex. `result=\"Alaska\"` and `term=\"as\"` will produce `Al<span class=\"ngb-highlight\">as</span>ka`.\n */\n\n\nclass NgbHighlight {\n  constructor() {\n    /**\n     * The CSS class for `<span>` elements wrapping the `term` inside the `result`.\n     */\n    this.highlightClass = 'ngb-highlight';\n    /**\n     * Boolean option to determine if the highlighting should be sensitive to accents or not.\n     *\n     * This feature is only available for browsers that implement the `String.normalize` function\n     * (typically not Internet Explorer).\n     * If you want to use this feature in a browser that does not implement `String.normalize`,\n     * you will have to include a polyfill in your application (`unorm` for example).\n     *\n     * @since 9.1.0\n     */\n\n    this.accentSensitive = true;\n  }\n\n  ngOnChanges(changes) {\n    if (!this.accentSensitive && !String.prototype.normalize) {\n      console.warn('The `accentSensitive` input in `ngb-highlight` cannot be set to `false` in a browser ' + 'that does not implement the `String.normalize` function. ' + 'You will have to include a polyfill in your application to use this feature in the current browser.');\n      this.accentSensitive = true;\n    }\n\n    const result = toString(this.result);\n    const terms = Array.isArray(this.term) ? this.term : [this.term];\n\n    const prepareTerm = term => this.accentSensitive ? term : removeAccents(term);\n\n    const escapedTerms = terms.map(term => regExpEscape(prepareTerm(toString(term)))).filter(term => term);\n    const toSplit = this.accentSensitive ? result : removeAccents(result);\n    const parts = escapedTerms.length ? toSplit.split(new RegExp(`(${escapedTerms.join('|')})`, 'gmi')) : [result];\n\n    if (this.accentSensitive) {\n      this.parts = parts;\n    } else {\n      let offset = 0;\n      this.parts = parts.map(part => result.substring(offset, offset += part.length));\n    }\n  }\n\n}\n\nNgbHighlight.ɵfac = function NgbHighlight_Factory(t) {\n  return new (t || NgbHighlight)();\n};\n\nNgbHighlight.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NgbHighlight,\n  selectors: [[\"ngb-highlight\"]],\n  inputs: {\n    highlightClass: \"highlightClass\",\n    result: \"result\",\n    term: \"term\",\n    accentSensitive: \"accentSensitive\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 1,\n  vars: 1,\n  consts: [[\"ngFor\", \"\", 3, \"ngForOf\"], [3, \"class\", 4, \"ngIf\", \"ngIfElse\"], [\"even\", \"\"]],\n  template: function NgbHighlight_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, NgbHighlight_ng_template_0_Template, 3, 2, \"ng-template\", 0);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngForOf\", ctx.parts);\n    }\n  },\n  directives: [i2.NgForOf, i2.NgIf],\n  styles: [\".ngb-highlight{font-weight:700}\\n\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbHighlight, [{\n    type: Component,\n    args: [{\n      selector: 'ngb-highlight',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      template: `<ng-template ngFor [ngForOf]=\"parts\" let-part let-isOdd=\"odd\">` + `<span *ngIf=\"isOdd; else even\" [class]=\"highlightClass\">{{part}}</span><ng-template #even>{{part}}</ng-template>` + `</ng-template>`,\n      styles: [\".ngb-highlight{font-weight:700}\\n\"]\n    }]\n  }], null, {\n    highlightClass: [{\n      type: Input\n    }],\n    result: [{\n      type: Input\n    }],\n    term: [{\n      type: Input\n    }],\n    accentSensitive: [{\n      type: Input\n    }]\n  });\n})();\n\nclass NgbTypeaheadWindow {\n  constructor() {\n    this.activeIdx = 0;\n    /**\n     * Flag indicating if the first row should be active initially\n     */\n\n    this.focusFirst = true;\n    /**\n     * A function used to format a given result before display. This function should return a formatted string without any\n     * HTML markup\n     */\n\n    this.formatter = toString;\n    /**\n     * Event raised when user selects a particular result row\n     */\n\n    this.selectEvent = new EventEmitter();\n    this.activeChangeEvent = new EventEmitter();\n  }\n\n  hasActive() {\n    return this.activeIdx > -1 && this.activeIdx < this.results.length;\n  }\n\n  getActive() {\n    return this.results[this.activeIdx];\n  }\n\n  markActive(activeIdx) {\n    this.activeIdx = activeIdx;\n\n    this._activeChanged();\n  }\n\n  next() {\n    if (this.activeIdx === this.results.length - 1) {\n      this.activeIdx = this.focusFirst ? (this.activeIdx + 1) % this.results.length : -1;\n    } else {\n      this.activeIdx++;\n    }\n\n    this._activeChanged();\n  }\n\n  prev() {\n    if (this.activeIdx < 0) {\n      this.activeIdx = this.results.length - 1;\n    } else if (this.activeIdx === 0) {\n      this.activeIdx = this.focusFirst ? this.results.length - 1 : -1;\n    } else {\n      this.activeIdx--;\n    }\n\n    this._activeChanged();\n  }\n\n  resetActive() {\n    this.activeIdx = this.focusFirst ? 0 : -1;\n\n    this._activeChanged();\n  }\n\n  select(item) {\n    this.selectEvent.emit(item);\n  }\n\n  ngOnInit() {\n    this.resetActive();\n  }\n\n  _activeChanged() {\n    this.activeChangeEvent.emit(this.activeIdx >= 0 ? this.id + '-' + this.activeIdx : undefined);\n  }\n\n}\n\nNgbTypeaheadWindow.ɵfac = function NgbTypeaheadWindow_Factory(t) {\n  return new (t || NgbTypeaheadWindow)();\n};\n\nNgbTypeaheadWindow.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NgbTypeaheadWindow,\n  selectors: [[\"ngb-typeahead-window\"]],\n  hostAttrs: [\"role\", \"listbox\"],\n  hostVars: 3,\n  hostBindings: function NgbTypeaheadWindow_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"mousedown\", function NgbTypeaheadWindow_mousedown_HostBindingHandler($event) {\n        return $event.preventDefault();\n      });\n    }\n\n    if (rf & 2) {\n      i0.ɵɵhostProperty(\"id\", ctx.id);\n      i0.ɵɵclassMap(\"dropdown-menu show\" + (ctx.popupClass ? \" \" + ctx.popupClass : \"\"));\n    }\n  },\n  inputs: {\n    id: \"id\",\n    focusFirst: \"focusFirst\",\n    results: \"results\",\n    term: \"term\",\n    formatter: \"formatter\",\n    resultTemplate: \"resultTemplate\",\n    popupClass: \"popupClass\"\n  },\n  outputs: {\n    selectEvent: \"select\",\n    activeChangeEvent: \"activeChange\"\n  },\n  exportAs: [\"ngbTypeaheadWindow\"],\n  decls: 3,\n  vars: 1,\n  consts: [[\"rt\", \"\"], [\"ngFor\", \"\", 3, \"ngForOf\"], [3, \"result\", \"term\"], [\"type\", \"button\", \"role\", \"option\", 1, \"dropdown-item\", 3, \"id\", \"mouseenter\", \"click\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"]],\n  template: function NgbTypeaheadWindow_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, NgbTypeaheadWindow_ng_template_0_Template, 1, 2, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵtemplate(2, NgbTypeaheadWindow_ng_template_2_Template, 2, 9, \"ng-template\", 1);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.results);\n    }\n  },\n  directives: [NgbHighlight, i2.NgForOf, i2.NgTemplateOutlet],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbTypeaheadWindow, [{\n    type: Component,\n    args: [{\n      selector: 'ngb-typeahead-window',\n      exportAs: 'ngbTypeaheadWindow',\n      encapsulation: ViewEncapsulation.None,\n      host: {\n        '(mousedown)': '$event.preventDefault()',\n        '[class]': '\"dropdown-menu show\" + (popupClass ? \" \" + popupClass : \"\")',\n        'role': 'listbox',\n        '[id]': 'id'\n      },\n      template: `\n    <ng-template #rt let-result=\"result\" let-term=\"term\" let-formatter=\"formatter\">\n      <ngb-highlight [result]=\"formatter(result)\" [term]=\"term\"></ngb-highlight>\n    </ng-template>\n    <ng-template ngFor [ngForOf]=\"results\" let-result let-idx=\"index\">\n      <button type=\"button\" class=\"dropdown-item\" role=\"option\"\n        [id]=\"id + '-' + idx\"\n        [class.active]=\"idx === activeIdx\"\n        (mouseenter)=\"markActive(idx)\"\n        (click)=\"select(result)\">\n          <ng-template [ngTemplateOutlet]=\"resultTemplate || rt\"\n          [ngTemplateOutletContext]=\"{result: result, term: term, formatter: formatter}\"></ng-template>\n      </button>\n    </ng-template>\n  `\n    }]\n  }], null, {\n    id: [{\n      type: Input\n    }],\n    focusFirst: [{\n      type: Input\n    }],\n    results: [{\n      type: Input\n    }],\n    term: [{\n      type: Input\n    }],\n    formatter: [{\n      type: Input\n    }],\n    resultTemplate: [{\n      type: Input\n    }],\n    popupClass: [{\n      type: Input\n    }],\n    selectEvent: [{\n      type: Output,\n      args: ['select']\n    }],\n    activeChangeEvent: [{\n      type: Output,\n      args: ['activeChange']\n    }]\n  });\n})();\n/**\n * A configuration service for the [`NgbTypeahead`](#/components/typeahead/api#NgbTypeahead) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the typeaheads used in the application.\n */\n\n\nclass NgbTypeaheadConfig {\n  constructor() {\n    this.editable = true;\n    this.focusFirst = true;\n    this.showHint = false;\n    this.placement = ['bottom-start', 'bottom-end', 'top-start', 'top-end'];\n  }\n\n}\n\nNgbTypeaheadConfig.ɵfac = function NgbTypeaheadConfig_Factory(t) {\n  return new (t || NgbTypeaheadConfig)();\n};\n\nNgbTypeaheadConfig.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: NgbTypeaheadConfig,\n  factory: NgbTypeaheadConfig.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbTypeaheadConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\n\nconst ARIA_LIVE_DELAY = new InjectionToken('live announcer delay', {\n  providedIn: 'root',\n  factory: ARIA_LIVE_DELAY_FACTORY\n});\n\nfunction ARIA_LIVE_DELAY_FACTORY() {\n  return 100;\n}\n\nfunction getLiveElement(document, lazyCreate = false) {\n  let element = document.body.querySelector('#ngb-live');\n\n  if (element == null && lazyCreate) {\n    element = document.createElement('div');\n    element.setAttribute('id', 'ngb-live');\n    element.setAttribute('aria-live', 'polite');\n    element.setAttribute('aria-atomic', 'true');\n    element.classList.add('visually-hidden');\n    document.body.appendChild(element);\n  }\n\n  return element;\n}\n\nclass Live {\n  constructor(_document, _delay) {\n    this._document = _document;\n    this._delay = _delay;\n  }\n\n  ngOnDestroy() {\n    const element = getLiveElement(this._document);\n\n    if (element) {\n      // if exists, it will always be attached to the <body>\n      element.parentElement.removeChild(element);\n    }\n  }\n\n  say(message) {\n    const element = getLiveElement(this._document, true);\n    const delay = this._delay;\n\n    if (element != null) {\n      element.textContent = '';\n\n      const setText = () => element.textContent = message;\n\n      if (delay === null) {\n        setText();\n      } else {\n        setTimeout(setText, delay);\n      }\n    }\n  }\n\n}\n\nLive.ɵfac = function Live_Factory(t) {\n  return new (t || Live)(i0.ɵɵinject(DOCUMENT), i0.ɵɵinject(ARIA_LIVE_DELAY));\n};\n\nLive.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: Live,\n  factory: Live.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Live, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [ARIA_LIVE_DELAY]\n      }]\n    }];\n  }, null);\n})();\n\nlet nextWindowId = 0;\n/**\n * A directive providing a simple way of creating powerful typeaheads from any text input.\n */\n\nclass NgbTypeahead {\n  constructor(_elementRef, viewContainerRef, _renderer, injector, config, ngZone, _live, _document, _ngZone, _changeDetector, applicationRef) {\n    this._elementRef = _elementRef;\n    this._renderer = _renderer;\n    this._live = _live;\n    this._document = _document;\n    this._ngZone = _ngZone;\n    this._changeDetector = _changeDetector;\n    this._subscription = null;\n    this._closed$ = new Subject();\n    this._inputValueBackup = null;\n    this._windowRef = null;\n    this._positioning = ngbPositioning();\n    /**\n     * The value for the `autocomplete` attribute for the `<input>` element.\n     *\n     * Defaults to `\"off\"` to disable the native browser autocomplete, but you can override it if necessary.\n     *\n     * @since 2.1.0\n     */\n\n    this.autocomplete = 'off';\n    /**\n     * The preferred placement of the typeahead, among the [possible values](#/guides/positioning#api).\n     *\n     * The default order of preference is `\"bottom-start bottom-end top-start top-end\"`\n     *\n     * Please see the [positioning overview](#/positioning) for more details.\n     */\n\n    this.placement = 'bottom-start';\n    /**\n     * An event emitted right before an item is selected from the result list.\n     *\n     * Event payload is of type [`NgbTypeaheadSelectItemEvent`](#/components/typeahead/api#NgbTypeaheadSelectItemEvent).\n     */\n\n    this.selectItem = new EventEmitter();\n    this.activeDescendant = null;\n    this.popupId = `ngb-typeahead-${nextWindowId++}`;\n\n    this._onTouched = () => {};\n\n    this._onChange = _ => {};\n\n    this.container = config.container;\n    this.editable = config.editable;\n    this.focusFirst = config.focusFirst;\n    this.showHint = config.showHint;\n    this.placement = config.placement;\n    this._valueChanges = fromEvent(_elementRef.nativeElement, 'input').pipe(map($event => $event.target.value));\n    this._resubscribeTypeahead = new BehaviorSubject(null);\n    this._popupService = new PopupService(NgbTypeaheadWindow, injector, viewContainerRef, _renderer, this._ngZone, applicationRef);\n  }\n\n  ngOnInit() {\n    this._subscribeToUserInput();\n  }\n\n  ngOnChanges({\n    ngbTypeahead\n  }) {\n    if (ngbTypeahead && !ngbTypeahead.firstChange) {\n      this._unsubscribeFromUserInput();\n\n      this._subscribeToUserInput();\n    }\n  }\n\n  ngOnDestroy() {\n    this._closePopup();\n\n    this._unsubscribeFromUserInput();\n  }\n\n  registerOnChange(fn) {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn) {\n    this._onTouched = fn;\n  }\n\n  writeValue(value) {\n    this._writeInputValue(this._formatItemForInput(value));\n\n    if (this.showHint) {\n      this._inputValueBackup = value;\n    }\n  }\n\n  setDisabledState(isDisabled) {\n    this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n  }\n  /**\n   * Dismisses typeahead popup window\n   */\n\n\n  dismissPopup() {\n    if (this.isPopupOpen()) {\n      this._resubscribeTypeahead.next(null);\n\n      this._closePopup();\n\n      if (this.showHint && this._inputValueBackup !== null) {\n        this._writeInputValue(this._inputValueBackup);\n      }\n\n      this._changeDetector.markForCheck();\n    }\n  }\n  /**\n   * Returns true if the typeahead popup window is displayed\n   */\n\n\n  isPopupOpen() {\n    return this._windowRef != null;\n  }\n\n  handleBlur() {\n    this._resubscribeTypeahead.next(null);\n\n    this._onTouched();\n  }\n\n  handleKeyDown(event) {\n    if (!this.isPopupOpen()) {\n      return;\n    }\n    /* eslint-disable-next-line deprecation/deprecation */\n\n\n    switch (event.which) {\n      case Key.ArrowDown:\n        event.preventDefault();\n\n        this._windowRef.instance.next();\n\n        this._showHint();\n\n        break;\n\n      case Key.ArrowUp:\n        event.preventDefault();\n\n        this._windowRef.instance.prev();\n\n        this._showHint();\n\n        break;\n\n      case Key.Enter:\n      case Key.Tab:\n        {\n          const result = this._windowRef.instance.getActive();\n\n          if (isDefined(result)) {\n            event.preventDefault();\n            event.stopPropagation();\n\n            this._selectResult(result);\n          }\n\n          this._closePopup();\n\n          break;\n        }\n    }\n  }\n\n  _openPopup() {\n    if (!this.isPopupOpen()) {\n      this._inputValueBackup = this._elementRef.nativeElement.value;\n\n      const {\n        windowRef\n      } = this._popupService.open();\n\n      this._windowRef = windowRef;\n      this._windowRef.instance.id = this.popupId;\n\n      this._windowRef.instance.selectEvent.subscribe(result => this._selectResultClosePopup(result));\n\n      this._windowRef.instance.activeChangeEvent.subscribe(activeId => this.activeDescendant = activeId);\n\n      this._windowRef.instance.popupClass = this.popupClass;\n\n      if (this.container === 'body') {\n        this._renderer.setStyle(this._windowRef.location.nativeElement, 'z-index', '1055');\n\n        this._document.querySelector(this.container).appendChild(this._windowRef.location.nativeElement);\n      }\n\n      this._changeDetector.markForCheck(); // Setting up popper and scheduling updates when zone is stable\n\n\n      this._ngZone.runOutsideAngular(() => {\n        if (this._windowRef) {\n          this._positioning.createPopper({\n            hostElement: this._elementRef.nativeElement,\n            targetElement: this._windowRef.location.nativeElement,\n            placement: this.placement,\n            appendToBody: this.container === 'body',\n            updatePopperOptions: addPopperOffset([0, 2])\n          });\n\n          this._zoneSubscription = this._ngZone.onStable.subscribe(() => this._positioning.update());\n        }\n      });\n\n      ngbAutoClose(this._ngZone, this._document, 'outside', () => this.dismissPopup(), this._closed$, [this._elementRef.nativeElement, this._windowRef.location.nativeElement]);\n    }\n  }\n\n  _closePopup() {\n    this._popupService.close().subscribe(() => {\n      var _a;\n\n      this._positioning.destroy();\n\n      (_a = this._zoneSubscription) === null || _a === void 0 ? void 0 : _a.unsubscribe();\n\n      this._closed$.next();\n\n      this._windowRef = null;\n      this.activeDescendant = null;\n    });\n  }\n\n  _selectResult(result) {\n    let defaultPrevented = false;\n    this.selectItem.emit({\n      item: result,\n      preventDefault: () => {\n        defaultPrevented = true;\n      }\n    });\n\n    this._resubscribeTypeahead.next(null);\n\n    if (!defaultPrevented) {\n      this.writeValue(result);\n\n      this._onChange(result);\n    }\n  }\n\n  _selectResultClosePopup(result) {\n    this._selectResult(result);\n\n    this._closePopup();\n  }\n\n  _showHint() {\n    var _a;\n\n    if (this.showHint && ((_a = this._windowRef) === null || _a === void 0 ? void 0 : _a.instance.hasActive()) && this._inputValueBackup != null) {\n      const userInputLowerCase = this._inputValueBackup.toLowerCase();\n\n      const formattedVal = this._formatItemForInput(this._windowRef.instance.getActive());\n\n      if (userInputLowerCase === formattedVal.substr(0, this._inputValueBackup.length).toLowerCase()) {\n        this._writeInputValue(this._inputValueBackup + formattedVal.substr(this._inputValueBackup.length));\n\n        this._elementRef.nativeElement['setSelectionRange'].apply(this._elementRef.nativeElement, [this._inputValueBackup.length, formattedVal.length]);\n      } else {\n        this._writeInputValue(formattedVal);\n      }\n    }\n  }\n\n  _formatItemForInput(item) {\n    return item != null && this.inputFormatter ? this.inputFormatter(item) : toString(item);\n  }\n\n  _writeInputValue(value) {\n    this._renderer.setProperty(this._elementRef.nativeElement, 'value', toString(value));\n  }\n\n  _subscribeToUserInput() {\n    const results$ = this._valueChanges.pipe(tap(value => {\n      this._inputValueBackup = this.showHint ? value : null;\n\n      this._onChange(this.editable ? value : undefined);\n    }), this.ngbTypeahead ? this.ngbTypeahead : () => of([]));\n\n    this._subscription = this._resubscribeTypeahead.pipe(switchMap(() => results$)).subscribe(results => {\n      if (!results || results.length === 0) {\n        this._closePopup();\n      } else {\n        this._openPopup();\n\n        this._windowRef.instance.focusFirst = this.focusFirst;\n        this._windowRef.instance.results = results;\n        this._windowRef.instance.term = this._elementRef.nativeElement.value;\n\n        if (this.resultFormatter) {\n          this._windowRef.instance.formatter = this.resultFormatter;\n        }\n\n        if (this.resultTemplate) {\n          this._windowRef.instance.resultTemplate = this.resultTemplate;\n        }\n\n        this._windowRef.instance.resetActive(); // The observable stream we are subscribing to might have async steps\n        // and if a component containing typeahead is using the OnPush strategy\n        // the change detection turn wouldn't be invoked automatically.\n\n\n        this._windowRef.changeDetectorRef.detectChanges();\n\n        this._showHint();\n      } // live announcer\n\n\n      const count = results ? results.length : 0;\n\n      this._live.say(count === 0 ? 'No results available' : `${count} result${count === 1 ? '' : 's'} available`);\n    });\n  }\n\n  _unsubscribeFromUserInput() {\n    if (this._subscription) {\n      this._subscription.unsubscribe();\n    }\n\n    this._subscription = null;\n  }\n\n}\n\nNgbTypeahead.ɵfac = function NgbTypeahead_Factory(t) {\n  return new (t || NgbTypeahead)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.Injector), i0.ɵɵdirectiveInject(NgbTypeaheadConfig), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(Live), i0.ɵɵdirectiveInject(DOCUMENT), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.ApplicationRef));\n};\n\nNgbTypeahead.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: NgbTypeahead,\n  selectors: [[\"input\", \"ngbTypeahead\", \"\"]],\n  hostAttrs: [\"autocapitalize\", \"off\", \"autocorrect\", \"off\", \"role\", \"combobox\", \"aria-multiline\", \"false\"],\n  hostVars: 7,\n  hostBindings: function NgbTypeahead_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"blur\", function NgbTypeahead_blur_HostBindingHandler() {\n        return ctx.handleBlur();\n      })(\"keydown\", function NgbTypeahead_keydown_HostBindingHandler($event) {\n        return ctx.handleKeyDown($event);\n      });\n    }\n\n    if (rf & 2) {\n      i0.ɵɵhostProperty(\"autocomplete\", ctx.autocomplete);\n      i0.ɵɵattribute(\"aria-autocomplete\", ctx.showHint ? \"both\" : \"list\")(\"aria-activedescendant\", ctx.activeDescendant)(\"aria-owns\", ctx.isPopupOpen() ? ctx.popupId : null)(\"aria-expanded\", ctx.isPopupOpen());\n      i0.ɵɵclassProp(\"open\", ctx.isPopupOpen());\n    }\n  },\n  inputs: {\n    autocomplete: \"autocomplete\",\n    container: \"container\",\n    editable: \"editable\",\n    focusFirst: \"focusFirst\",\n    inputFormatter: \"inputFormatter\",\n    ngbTypeahead: \"ngbTypeahead\",\n    resultFormatter: \"resultFormatter\",\n    resultTemplate: \"resultTemplate\",\n    showHint: \"showHint\",\n    placement: \"placement\",\n    popupClass: \"popupClass\"\n  },\n  outputs: {\n    selectItem: \"selectItem\"\n  },\n  exportAs: [\"ngbTypeahead\"],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => NgbTypeahead),\n    multi: true\n  }]), i0.ɵɵNgOnChangesFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbTypeahead, [{\n    type: Directive,\n    args: [{\n      selector: 'input[ngbTypeahead]',\n      exportAs: 'ngbTypeahead',\n      host: {\n        '(blur)': 'handleBlur()',\n        '[class.open]': 'isPopupOpen()',\n        '(keydown)': 'handleKeyDown($event)',\n        '[autocomplete]': 'autocomplete',\n        'autocapitalize': 'off',\n        'autocorrect': 'off',\n        'role': 'combobox',\n        'aria-multiline': 'false',\n        '[attr.aria-autocomplete]': 'showHint ? \"both\" : \"list\"',\n        '[attr.aria-activedescendant]': 'activeDescendant',\n        '[attr.aria-owns]': 'isPopupOpen() ? popupId : null',\n        '[attr.aria-expanded]': 'isPopupOpen()'\n      },\n      providers: [{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => NgbTypeahead),\n        multi: true\n      }]\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.ViewContainerRef\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: i0.Injector\n    }, {\n      type: NgbTypeaheadConfig\n    }, {\n      type: i0.NgZone\n    }, {\n      type: Live\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: i0.NgZone\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i0.ApplicationRef\n    }];\n  }, {\n    autocomplete: [{\n      type: Input\n    }],\n    container: [{\n      type: Input\n    }],\n    editable: [{\n      type: Input\n    }],\n    focusFirst: [{\n      type: Input\n    }],\n    inputFormatter: [{\n      type: Input\n    }],\n    ngbTypeahead: [{\n      type: Input\n    }],\n    resultFormatter: [{\n      type: Input\n    }],\n    resultTemplate: [{\n      type: Input\n    }],\n    showHint: [{\n      type: Input\n    }],\n    placement: [{\n      type: Input\n    }],\n    popupClass: [{\n      type: Input\n    }],\n    selectItem: [{\n      type: Output\n    }]\n  });\n})();\n\nclass NgbTypeaheadModule {}\n\nNgbTypeaheadModule.ɵfac = function NgbTypeaheadModule_Factory(t) {\n  return new (t || NgbTypeaheadModule)();\n};\n\nNgbTypeaheadModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: NgbTypeaheadModule\n});\nNgbTypeaheadModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbTypeaheadModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [NgbTypeahead, NgbHighlight, NgbTypeaheadWindow],\n      exports: [NgbTypeahead, NgbHighlight],\n      imports: [CommonModule]\n    }]\n  }], null, null);\n})();\n\nvar OffcanvasDismissReasons;\n\n(function (OffcanvasDismissReasons) {\n  OffcanvasDismissReasons[OffcanvasDismissReasons[\"BACKDROP_CLICK\"] = 0] = \"BACKDROP_CLICK\";\n  OffcanvasDismissReasons[OffcanvasDismissReasons[\"ESC\"] = 1] = \"ESC\";\n})(OffcanvasDismissReasons || (OffcanvasDismissReasons = {}));\n\nclass NgbOffcanvasBackdrop {\n  constructor(_el, _zone) {\n    this._el = _el;\n    this._zone = _zone;\n    this.dismissEvent = new EventEmitter();\n  }\n\n  ngOnInit() {\n    this._zone.onStable.asObservable().pipe(take(1)).subscribe(() => {\n      ngbRunTransition(this._zone, this._el.nativeElement, (element, animation) => {\n        if (animation) {\n          reflow(element);\n        }\n\n        element.classList.add('show');\n      }, {\n        animation: this.animation,\n        runningTransition: 'continue'\n      });\n    });\n  }\n\n  hide() {\n    return ngbRunTransition(this._zone, this._el.nativeElement, ({\n      classList\n    }) => classList.remove('show'), {\n      animation: this.animation,\n      runningTransition: 'stop'\n    });\n  }\n\n  dismiss() {\n    this.dismissEvent.emit(OffcanvasDismissReasons.BACKDROP_CLICK);\n  }\n\n}\n\nNgbOffcanvasBackdrop.ɵfac = function NgbOffcanvasBackdrop_Factory(t) {\n  return new (t || NgbOffcanvasBackdrop)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone));\n};\n\nNgbOffcanvasBackdrop.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NgbOffcanvasBackdrop,\n  selectors: [[\"ngb-offcanvas-backdrop\"]],\n  hostVars: 6,\n  hostBindings: function NgbOffcanvasBackdrop_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"mousedown\", function NgbOffcanvasBackdrop_mousedown_HostBindingHandler() {\n        return ctx.dismiss();\n      });\n    }\n\n    if (rf & 2) {\n      i0.ɵɵclassMap(\"offcanvas-backdrop\" + (ctx.backdropClass ? \" \" + ctx.backdropClass : \"\"));\n      i0.ɵɵclassProp(\"show\", !ctx.animation)(\"fade\", ctx.animation);\n    }\n  },\n  inputs: {\n    animation: \"animation\",\n    backdropClass: \"backdropClass\"\n  },\n  outputs: {\n    dismissEvent: \"dismiss\"\n  },\n  decls: 0,\n  vars: 0,\n  template: function NgbOffcanvasBackdrop_Template(rf, ctx) {},\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbOffcanvasBackdrop, [{\n    type: Component,\n    args: [{\n      selector: 'ngb-offcanvas-backdrop',\n      encapsulation: ViewEncapsulation.None,\n      template: '',\n      host: {\n        '[class]': '\"offcanvas-backdrop\" + (backdropClass ? \" \" + backdropClass : \"\")',\n        '[class.show]': '!animation',\n        '[class.fade]': 'animation',\n        '(mousedown)': 'dismiss()'\n      }\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.NgZone\n    }];\n  }, {\n    animation: [{\n      type: Input\n    }],\n    backdropClass: [{\n      type: Input\n    }],\n    dismissEvent: [{\n      type: Output,\n      args: ['dismiss']\n    }]\n  });\n})();\n\nclass NgbOffcanvasPanel {\n  constructor(_document, _elRef, _zone) {\n    this._document = _document;\n    this._elRef = _elRef;\n    this._zone = _zone;\n    this._closed$ = new Subject();\n    this._elWithFocus = null; // element that is focused prior to offcanvas opening\n\n    this.keyboard = true;\n    this.position = 'start';\n    this.dismissEvent = new EventEmitter();\n    this.shown = new Subject();\n    this.hidden = new Subject();\n  }\n\n  dismiss(reason) {\n    this.dismissEvent.emit(reason);\n  }\n\n  ngOnInit() {\n    this._elWithFocus = this._document.activeElement;\n\n    this._zone.onStable.asObservable().pipe(take(1)).subscribe(() => {\n      this._show();\n    });\n  }\n\n  ngOnDestroy() {\n    this._disableEventHandling();\n  }\n\n  hide() {\n    const {\n      nativeElement\n    } = this._elRef;\n    const context = {\n      animation: this.animation,\n      runningTransition: 'stop'\n    }; // TODO when we target Bootstrap 5.2+, the style.visibility handling can be removed, because Bootstrap has improved\n    // its CSS\n\n    const offcanvasTransition$ = ngbRunTransition(this._zone, this._elRef.nativeElement, element => {\n      nativeElement.classList.remove('show');\n      return () => element.style.visibility = 'hidden';\n    }, context);\n    offcanvasTransition$.subscribe(() => {\n      this.hidden.next();\n      this.hidden.complete();\n    });\n\n    this._disableEventHandling();\n\n    this._restoreFocus();\n\n    return offcanvasTransition$;\n  }\n\n  _show() {\n    const context = {\n      animation: this.animation,\n      runningTransition: 'continue'\n    }; // TODO when we target Bootstrap 5.2+, the style.visibility handling can be removed, because Bootstrap has improved\n    // its CSS\n\n    const offcanvasTransition$ = ngbRunTransition(this._zone, this._elRef.nativeElement, (element, animation) => {\n      if (animation) {\n        reflow(element);\n      }\n\n      element.classList.add('show');\n      element.style.visibility = 'visible';\n    }, context);\n    offcanvasTransition$.subscribe(() => {\n      this.shown.next();\n      this.shown.complete();\n    });\n\n    this._enableEventHandling();\n\n    this._setFocus();\n  }\n\n  _enableEventHandling() {\n    const {\n      nativeElement\n    } = this._elRef;\n\n    this._zone.runOutsideAngular(() => {\n      fromEvent(nativeElement, 'keydown').pipe(takeUntil(this._closed$),\n      /* eslint-disable-next-line deprecation/deprecation */\n      filter(e => e.which === Key.Escape)).subscribe(event => {\n        if (this.keyboard) {\n          requestAnimationFrame(() => {\n            if (!event.defaultPrevented) {\n              this._zone.run(() => this.dismiss(OffcanvasDismissReasons.ESC));\n            }\n          });\n        }\n      });\n    });\n  }\n\n  _disableEventHandling() {\n    this._closed$.next();\n  }\n\n  _setFocus() {\n    const {\n      nativeElement\n    } = this._elRef;\n\n    if (!nativeElement.contains(document.activeElement)) {\n      const autoFocusable = nativeElement.querySelector(`[ngbAutofocus]`);\n      const firstFocusable = getFocusableBoundaryElements(nativeElement)[0];\n      const elementToFocus = autoFocusable || firstFocusable || nativeElement;\n      elementToFocus.focus();\n    }\n  }\n\n  _restoreFocus() {\n    const body = this._document.body;\n    const elWithFocus = this._elWithFocus;\n    let elementToFocus;\n\n    if (elWithFocus && elWithFocus['focus'] && body.contains(elWithFocus)) {\n      elementToFocus = elWithFocus;\n    } else {\n      elementToFocus = body;\n    }\n\n    this._zone.runOutsideAngular(() => {\n      setTimeout(() => elementToFocus.focus());\n      this._elWithFocus = null;\n    });\n  }\n\n}\n\nNgbOffcanvasPanel.ɵfac = function NgbOffcanvasPanel_Factory(t) {\n  return new (t || NgbOffcanvasPanel)(i0.ɵɵdirectiveInject(DOCUMENT), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone));\n};\n\nNgbOffcanvasPanel.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NgbOffcanvasPanel,\n  selectors: [[\"ngb-offcanvas-panel\"]],\n  hostAttrs: [\"role\", \"dialog\", \"tabindex\", \"-1\"],\n  hostVars: 5,\n  hostBindings: function NgbOffcanvasPanel_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵattribute(\"aria-modal\", true)(\"aria-labelledby\", ctx.ariaLabelledBy)(\"aria-describedby\", ctx.ariaDescribedBy);\n      i0.ɵɵclassMap(\"offcanvas offcanvas-\" + ctx.position + (ctx.panelClass ? \" \" + ctx.panelClass : \"\"));\n    }\n  },\n  inputs: {\n    animation: \"animation\",\n    ariaLabelledBy: \"ariaLabelledBy\",\n    ariaDescribedBy: \"ariaDescribedBy\",\n    keyboard: \"keyboard\",\n    panelClass: \"panelClass\",\n    position: \"position\"\n  },\n  outputs: {\n    dismissEvent: \"dismiss\"\n  },\n  ngContentSelectors: _c3,\n  decls: 1,\n  vars: 0,\n  template: function NgbOffcanvasPanel_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbOffcanvasPanel, [{\n    type: Component,\n    args: [{\n      selector: 'ngb-offcanvas-panel',\n      template: '<ng-content></ng-content>',\n      encapsulation: ViewEncapsulation.None,\n      host: {\n        '[class]': '\"offcanvas offcanvas-\" + position  + (panelClass ? \" \" + panelClass : \"\")',\n        'role': 'dialog',\n        'tabindex': '-1',\n        '[attr.aria-modal]': 'true',\n        '[attr.aria-labelledby]': 'ariaLabelledBy',\n        '[attr.aria-describedby]': 'ariaDescribedBy'\n      },\n      styles: []\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.NgZone\n    }];\n  }, {\n    animation: [{\n      type: Input\n    }],\n    ariaLabelledBy: [{\n      type: Input\n    }],\n    ariaDescribedBy: [{\n      type: Input\n    }],\n    keyboard: [{\n      type: Input\n    }],\n    panelClass: [{\n      type: Input\n    }],\n    position: [{\n      type: Input\n    }],\n    dismissEvent: [{\n      type: Output,\n      args: ['dismiss']\n    }]\n  });\n})();\n/**\n * A reference to the currently opened (active) offcanvas.\n *\n * Instances of this class can be injected into your component passed as offcanvas content.\n * So you can `.close()` or `.dismiss()` the offcanvas window from your component.\n *\n * @since 12.1.0\n */\n\n\nclass NgbActiveOffcanvas {\n  /**\n   * Closes the offcanvas with an optional `result` value.\n   *\n   * The `NgbOffcanvasRef.result` promise will be resolved with the provided value.\n   */\n  close(result) {}\n  /**\n   * Dismisses the offcanvas with an optional `reason` value.\n   *\n   * The `NgbOffcanvasRef.result` promise will be rejected with the provided value.\n   */\n\n\n  dismiss(reason) {}\n\n}\n/**\n * A reference to the newly opened offcanvas returned by the `NgbOffcanvas.open()` method.\n *\n * @since 12.1.0\n */\n\n\nclass NgbOffcanvasRef {\n  constructor(_panelCmptRef, _contentRef, _backdropCmptRef, _beforeDismiss) {\n    this._panelCmptRef = _panelCmptRef;\n    this._contentRef = _contentRef;\n    this._backdropCmptRef = _backdropCmptRef;\n    this._beforeDismiss = _beforeDismiss;\n    this._closed = new Subject();\n    this._dismissed = new Subject();\n    this._hidden = new Subject();\n\n    _panelCmptRef.instance.dismissEvent.subscribe(reason => {\n      this.dismiss(reason);\n    });\n\n    if (_backdropCmptRef) {\n      _backdropCmptRef.instance.dismissEvent.subscribe(reason => {\n        this.dismiss(reason);\n      });\n    }\n\n    this.result = new Promise((resolve, reject) => {\n      this._resolve = resolve;\n      this._reject = reject;\n    });\n    this.result.then(null, () => {});\n  }\n  /**\n   * The instance of a component used for the offcanvas content.\n   *\n   * When a `TemplateRef` is used as the content or when the offcanvas is closed, will return `undefined`.\n   */\n\n\n  get componentInstance() {\n    if (this._contentRef && this._contentRef.componentRef) {\n      return this._contentRef.componentRef.instance;\n    }\n  }\n  /**\n   * The observable that emits when the offcanvas is closed via the `.close()` method.\n   *\n   * It will emit the result passed to the `.close()` method.\n   */\n\n\n  get closed() {\n    return this._closed.asObservable().pipe(takeUntil(this._hidden));\n  }\n  /**\n   * The observable that emits when the offcanvas is dismissed via the `.dismiss()` method.\n   *\n   * It will emit the reason passed to the `.dismissed()` method by the user, or one of the internal\n   * reasons like backdrop click or ESC key press.\n   */\n\n\n  get dismissed() {\n    return this._dismissed.asObservable().pipe(takeUntil(this._hidden));\n  }\n  /**\n   * The observable that emits when both offcanvas window and backdrop are closed and animations were finished.\n   * At this point offcanvas and backdrop elements will be removed from the DOM tree.\n   *\n   * This observable will be completed after emitting.\n   */\n\n\n  get hidden() {\n    return this._hidden.asObservable();\n  }\n  /**\n   * The observable that emits when offcanvas is fully visible and animation was finished.\n   * The offcanvas DOM element is always available synchronously after calling 'offcanvas.open()' service.\n   *\n   * This observable will be completed after emitting.\n   * It will not emit, if offcanvas is closed before open animation is finished.\n   */\n\n\n  get shown() {\n    return this._panelCmptRef.instance.shown.asObservable();\n  }\n  /**\n   * Closes the offcanvas with an optional `result` value.\n   *\n   * The `NgbMobalRef.result` promise will be resolved with the provided value.\n   */\n\n\n  close(result) {\n    if (this._panelCmptRef) {\n      this._closed.next(result);\n\n      this._resolve(result);\n\n      this._removeOffcanvasElements();\n    }\n  }\n\n  _dismiss(reason) {\n    this._dismissed.next(reason);\n\n    this._reject(reason);\n\n    this._removeOffcanvasElements();\n  }\n  /**\n   * Dismisses the offcanvas with an optional `reason` value.\n   *\n   * The `NgbOffcanvasRef.result` promise will be rejected with the provided value.\n   */\n\n\n  dismiss(reason) {\n    if (this._panelCmptRef) {\n      if (!this._beforeDismiss) {\n        this._dismiss(reason);\n      } else {\n        const dismiss = this._beforeDismiss();\n\n        if (isPromise(dismiss)) {\n          dismiss.then(result => {\n            if (result !== false) {\n              this._dismiss(reason);\n            }\n          }, () => {});\n        } else if (dismiss !== false) {\n          this._dismiss(reason);\n        }\n      }\n    }\n  }\n\n  _removeOffcanvasElements() {\n    const panelTransition$ = this._panelCmptRef.instance.hide();\n\n    const backdropTransition$ = this._backdropCmptRef ? this._backdropCmptRef.instance.hide() : of(undefined); // hiding panel\n\n    panelTransition$.subscribe(() => {\n      const {\n        nativeElement\n      } = this._panelCmptRef.location;\n      nativeElement.parentNode.removeChild(nativeElement);\n\n      this._panelCmptRef.destroy();\n\n      if (this._contentRef && this._contentRef.viewRef) {\n        this._contentRef.viewRef.destroy();\n      }\n\n      this._panelCmptRef = null;\n      this._contentRef = null;\n    }); // hiding backdrop\n\n    backdropTransition$.subscribe(() => {\n      if (this._backdropCmptRef) {\n        const {\n          nativeElement\n        } = this._backdropCmptRef.location;\n        nativeElement.parentNode.removeChild(nativeElement);\n\n        this._backdropCmptRef.destroy();\n\n        this._backdropCmptRef = null;\n      }\n    }); // all done\n\n    zip(panelTransition$, backdropTransition$).subscribe(() => {\n      this._hidden.next();\n\n      this._hidden.complete();\n    });\n  }\n\n}\n\nclass NgbOffcanvasStack {\n  constructor(_applicationRef, _injector, _document, _scrollBar, _ngZone) {\n    this._applicationRef = _applicationRef;\n    this._injector = _injector;\n    this._document = _document;\n    this._scrollBar = _scrollBar;\n    this._ngZone = _ngZone;\n    this._activePanelCmptHasChanged = new Subject();\n    this._scrollBarRestoreFn = null;\n    this._backdropAttributes = ['animation', 'backdropClass'];\n    this._panelAttributes = ['animation', 'ariaDescribedBy', 'ariaLabelledBy', 'keyboard', 'panelClass', 'position'];\n    this._activeInstance = new EventEmitter(); // Trap focus on active PanelCmpt\n\n    this._activePanelCmptHasChanged.subscribe(() => {\n      if (this._panelCmpt) {\n        ngbFocusTrap(this._ngZone, this._panelCmpt.location.nativeElement, this._activePanelCmptHasChanged);\n      }\n    });\n  }\n\n  _restoreScrollBar() {\n    const scrollBarRestoreFn = this._scrollBarRestoreFn;\n\n    if (scrollBarRestoreFn) {\n      this._scrollBarRestoreFn = null;\n      scrollBarRestoreFn();\n    }\n  }\n\n  _hideScrollBar() {\n    if (!this._scrollBarRestoreFn) {\n      this._scrollBarRestoreFn = this._scrollBar.hide();\n    }\n  }\n\n  open(moduleCFR, contentInjector, content, options) {\n    const containerEl = options.container instanceof HTMLElement ? options.container : isDefined(options.container) ? this._document.querySelector(options.container) : this._document.body;\n\n    if (!containerEl) {\n      throw new Error(`The specified offcanvas container \"${options.container || 'body'}\" was not found in the DOM.`);\n    }\n\n    if (!options.scroll) {\n      this._hideScrollBar();\n    }\n\n    const activeOffcanvas = new NgbActiveOffcanvas();\n\n    const contentRef = this._getContentRef(moduleCFR, options.injector || contentInjector, content, activeOffcanvas);\n\n    let backdropCmptRef = options.backdrop !== false ? this._attachBackdrop(moduleCFR, containerEl) : undefined;\n\n    let panelCmptRef = this._attachWindowComponent(moduleCFR, containerEl, contentRef);\n\n    let ngbOffcanvasRef = new NgbOffcanvasRef(panelCmptRef, contentRef, backdropCmptRef, options.beforeDismiss);\n\n    this._registerOffcanvasRef(ngbOffcanvasRef);\n\n    this._registerPanelCmpt(panelCmptRef);\n\n    ngbOffcanvasRef.hidden.pipe(finalize(() => this._restoreScrollBar())).subscribe();\n\n    activeOffcanvas.close = result => {\n      ngbOffcanvasRef.close(result);\n    };\n\n    activeOffcanvas.dismiss = reason => {\n      ngbOffcanvasRef.dismiss(reason);\n    };\n\n    this._applyPanelOptions(panelCmptRef.instance, options);\n\n    if (backdropCmptRef && backdropCmptRef.instance) {\n      this._applyBackdropOptions(backdropCmptRef.instance, options);\n\n      backdropCmptRef.changeDetectorRef.detectChanges();\n    }\n\n    panelCmptRef.changeDetectorRef.detectChanges();\n    return ngbOffcanvasRef;\n  }\n\n  get activeInstance() {\n    return this._activeInstance;\n  }\n\n  dismiss(reason) {\n    var _a;\n\n    (_a = this._offcanvasRef) === null || _a === void 0 ? void 0 : _a.dismiss(reason);\n  }\n\n  hasOpenOffcanvas() {\n    return !!this._offcanvasRef;\n  }\n\n  _attachBackdrop(moduleCFR, containerEl) {\n    let backdropFactory = moduleCFR.resolveComponentFactory(NgbOffcanvasBackdrop);\n    let backdropCmptRef = backdropFactory.create(this._injector);\n\n    this._applicationRef.attachView(backdropCmptRef.hostView);\n\n    containerEl.appendChild(backdropCmptRef.location.nativeElement);\n    return backdropCmptRef;\n  }\n\n  _attachWindowComponent(moduleCFR, containerEl, contentRef) {\n    let panelFactory = moduleCFR.resolveComponentFactory(NgbOffcanvasPanel);\n    let panelCmptRef = panelFactory.create(this._injector, contentRef.nodes);\n\n    this._applicationRef.attachView(panelCmptRef.hostView);\n\n    containerEl.appendChild(panelCmptRef.location.nativeElement);\n    return panelCmptRef;\n  }\n\n  _applyPanelOptions(windowInstance, options) {\n    this._panelAttributes.forEach(optionName => {\n      if (isDefined(options[optionName])) {\n        windowInstance[optionName] = options[optionName];\n      }\n    });\n  }\n\n  _applyBackdropOptions(backdropInstance, options) {\n    this._backdropAttributes.forEach(optionName => {\n      if (isDefined(options[optionName])) {\n        backdropInstance[optionName] = options[optionName];\n      }\n    });\n  }\n\n  _getContentRef(moduleCFR, contentInjector, content, activeOffcanvas) {\n    if (!content) {\n      return new ContentRef([]);\n    } else if (content instanceof TemplateRef) {\n      return this._createFromTemplateRef(content, activeOffcanvas);\n    } else if (isString(content)) {\n      return this._createFromString(content);\n    } else {\n      return this._createFromComponent(moduleCFR, contentInjector, content, activeOffcanvas);\n    }\n  }\n\n  _createFromTemplateRef(content, activeOffcanvas) {\n    const context = {\n      $implicit: activeOffcanvas,\n\n      close(result) {\n        activeOffcanvas.close(result);\n      },\n\n      dismiss(reason) {\n        activeOffcanvas.dismiss(reason);\n      }\n\n    };\n    const viewRef = content.createEmbeddedView(context);\n\n    this._applicationRef.attachView(viewRef);\n\n    return new ContentRef([viewRef.rootNodes], viewRef);\n  }\n\n  _createFromString(content) {\n    const component = this._document.createTextNode(`${content}`);\n\n    return new ContentRef([[component]]);\n  }\n\n  _createFromComponent(moduleCFR, contentInjector, content, context) {\n    const contentCmptFactory = moduleCFR.resolveComponentFactory(content);\n    const offcanvasContentInjector = Injector.create({\n      providers: [{\n        provide: NgbActiveOffcanvas,\n        useValue: context\n      }],\n      parent: contentInjector\n    });\n    const componentRef = contentCmptFactory.create(offcanvasContentInjector);\n    const componentNativeEl = componentRef.location.nativeElement;\n\n    this._applicationRef.attachView(componentRef.hostView);\n\n    return new ContentRef([[componentNativeEl]], componentRef.hostView, componentRef);\n  }\n\n  _registerOffcanvasRef(ngbOffcanvasRef) {\n    const unregisterOffcanvasRef = () => {\n      this._offcanvasRef = undefined;\n\n      this._activeInstance.emit(this._offcanvasRef);\n    };\n\n    this._offcanvasRef = ngbOffcanvasRef;\n\n    this._activeInstance.emit(this._offcanvasRef);\n\n    ngbOffcanvasRef.result.then(unregisterOffcanvasRef, unregisterOffcanvasRef);\n  }\n\n  _registerPanelCmpt(ngbPanelCmpt) {\n    this._panelCmpt = ngbPanelCmpt;\n\n    this._activePanelCmptHasChanged.next();\n\n    ngbPanelCmpt.onDestroy(() => {\n      this._panelCmpt = undefined;\n\n      this._activePanelCmptHasChanged.next();\n    });\n  }\n\n}\n\nNgbOffcanvasStack.ɵfac = function NgbOffcanvasStack_Factory(t) {\n  return new (t || NgbOffcanvasStack)(i0.ɵɵinject(i0.ApplicationRef), i0.ɵɵinject(i0.Injector), i0.ɵɵinject(DOCUMENT), i0.ɵɵinject(ScrollBar), i0.ɵɵinject(i0.NgZone));\n};\n\nNgbOffcanvasStack.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: NgbOffcanvasStack,\n  factory: NgbOffcanvasStack.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbOffcanvasStack, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: i0.ApplicationRef\n    }, {\n      type: i0.Injector\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: ScrollBar\n    }, {\n      type: i0.NgZone\n    }];\n  }, null);\n})();\n/**\n * A configuration service for the [`NgbOffcanvas`](#/components/offcanvas/api#NgbOffcanvas) service.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all offcanvases used in the application.\n *\n * @since 12.1.0\n */\n\n\nclass NgbOffcanvasConfig {\n  constructor(_ngbConfig) {\n    this._ngbConfig = _ngbConfig;\n    this.backdrop = true;\n    this.keyboard = true;\n    this.position = 'start';\n    this.scroll = false;\n  }\n\n  get animation() {\n    return this._animation === undefined ? this._ngbConfig.animation : this._animation;\n  }\n\n  set animation(animation) {\n    this._animation = animation;\n  }\n\n}\n\nNgbOffcanvasConfig.ɵfac = function NgbOffcanvasConfig_Factory(t) {\n  return new (t || NgbOffcanvasConfig)(i0.ɵɵinject(NgbConfig));\n};\n\nNgbOffcanvasConfig.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: NgbOffcanvasConfig,\n  factory: NgbOffcanvasConfig.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbOffcanvasConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: NgbConfig\n    }];\n  }, null);\n})();\n/**\n * A service for opening an offcanvas.\n *\n * Creating an offcanvas is straightforward: create a component or a template and pass it as an argument to\n * the `.open()` method.\n *\n * @since 12.1.0\n */\n\n\nclass NgbOffcanvas {\n  constructor(_moduleCFR, _injector, _offcanvasStack, _config) {\n    this._moduleCFR = _moduleCFR;\n    this._injector = _injector;\n    this._offcanvasStack = _offcanvasStack;\n    this._config = _config;\n  }\n  /**\n   * Opens a new offcanvas panel with the specified content and supplied options.\n   *\n   * Content can be provided as a `TemplateRef` or a component type. If you pass a component type as content,\n   * then instances of those components can be injected with an instance of the `NgbActiveOffcanvas` class. You can then\n   * use `NgbActiveOffcanvas` methods to close / dismiss offcanvas from \"inside\" of your component.\n   *\n   * Also see the [`NgbOffcanvasOptions`](#/components/offcanvas/api#NgbOffcanvasOptions) for the list of supported\n   * options.\n   */\n\n\n  open(content, options = {}) {\n    const combinedOptions = Object.assign(Object.assign(Object.assign({}, this._config), {\n      animation: this._config.animation\n    }), options);\n    return this._offcanvasStack.open(this._moduleCFR, this._injector, content, combinedOptions);\n  }\n  /**\n   * Returns an observable that holds the active offcanvas instance.\n   */\n\n\n  get activeInstance() {\n    return this._offcanvasStack.activeInstance;\n  }\n  /**\n   * Dismisses the currently displayed offcanvas with the supplied reason.\n   */\n\n\n  dismiss(reason) {\n    this._offcanvasStack.dismiss(reason);\n  }\n  /**\n   * Indicates if there is currently an open offcanvas in the application.\n   */\n\n\n  hasOpenOffcanvas() {\n    return this._offcanvasStack.hasOpenOffcanvas();\n  }\n\n}\n\nNgbOffcanvas.ɵfac = function NgbOffcanvas_Factory(t) {\n  return new (t || NgbOffcanvas)(i0.ɵɵinject(i0.ComponentFactoryResolver), i0.ɵɵinject(i0.Injector), i0.ɵɵinject(NgbOffcanvasStack), i0.ɵɵinject(NgbOffcanvasConfig));\n};\n\nNgbOffcanvas.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: NgbOffcanvas,\n  factory: NgbOffcanvas.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbOffcanvas, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: i0.ComponentFactoryResolver\n    }, {\n      type: i0.Injector\n    }, {\n      type: NgbOffcanvasStack\n    }, {\n      type: NgbOffcanvasConfig\n    }];\n  }, null);\n})();\n\nclass NgbOffcanvasModule {}\n\nNgbOffcanvasModule.ɵfac = function NgbOffcanvasModule_Factory(t) {\n  return new (t || NgbOffcanvasModule)();\n};\n\nNgbOffcanvasModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: NgbOffcanvasModule\n});\nNgbOffcanvasModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbOffcanvasModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [NgbOffcanvasPanel, NgbOffcanvasBackdrop]\n    }]\n  }], null, null);\n})();\n\nconst NGB_MODULES = [\n/* eslint-disable-next-line deprecation/deprecation */\nNgbAccordionModule, NgbAlertModule, NgbButtonsModule, NgbCarouselModule, NgbCollapseModule, NgbDatepickerModule, NgbDropdownModule, NgbModalModule, NgbNavModule, NgbOffcanvasModule, NgbPaginationModule, NgbPopoverModule, NgbProgressbarModule, NgbRatingModule, NgbTimepickerModule, NgbToastModule, NgbTooltipModule, NgbTypeaheadModule];\n\nclass NgbModule {}\n\nNgbModule.ɵfac = function NgbModule_Factory(t) {\n  return new (t || NgbModule)();\n};\n\nNgbModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: NgbModule\n});\nNgbModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [NGB_MODULES,\n  /* eslint-disable-next-line deprecation/deprecation */\n  NgbAccordionModule, NgbAlertModule, NgbButtonsModule, NgbCarouselModule, NgbCollapseModule, NgbDatepickerModule, NgbDropdownModule, NgbModalModule, NgbNavModule, NgbOffcanvasModule, NgbPaginationModule, NgbPopoverModule, NgbProgressbarModule, NgbRatingModule, NgbTimepickerModule, NgbToastModule, NgbTooltipModule, NgbTypeaheadModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbModule, [{\n    type: NgModule,\n    args: [{\n      imports: NGB_MODULES,\n      exports: NGB_MODULES\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { ModalDismissReasons, NgbAccordion, NgbAccordionConfig, NgbAccordionModule, NgbActiveModal, NgbActiveOffcanvas, NgbAlert, NgbAlertConfig, NgbAlertModule, NgbButtonLabel, NgbButtonsModule, NgbCalendar, NgbCalendarBuddhist, NgbCalendarGregorian, NgbCalendarHebrew, NgbCalendarIslamicCivil, NgbCalendarIslamicUmalqura, NgbCalendarPersian, NgbCarousel, NgbCarouselConfig, NgbCarouselModule, NgbCheckBox, NgbCollapse, NgbCollapseConfig, NgbCollapseModule, NgbConfig, NgbDate, NgbDateAdapter, NgbDateNativeAdapter, NgbDateNativeUTCAdapter, NgbDateParserFormatter, NgbDatepicker, NgbDatepickerConfig, NgbDatepickerContent, NgbDatepickerI18n, NgbDatepickerI18nDefault, NgbDatepickerI18nHebrew, NgbDatepickerKeyboardService, NgbDatepickerModule, NgbDatepickerMonth, NgbDropdown, NgbDropdownAnchor, NgbDropdownConfig, NgbDropdownItem, NgbDropdownMenu, NgbDropdownModule, NgbDropdownToggle, NgbHighlight, NgbInputDatepicker, NgbInputDatepickerConfig, NgbModal, NgbModalConfig, NgbModalModule, NgbModalRef, NgbModule, NgbNav, NgbNavConfig, NgbNavContent, NgbNavItem, NgbNavLink, NgbNavModule, NgbNavOutlet, NgbNavPane, NgbNavbar, NgbOffcanvas, NgbOffcanvasConfig, NgbOffcanvasModule, NgbOffcanvasRef, NgbPagination, NgbPaginationConfig, NgbPaginationEllipsis, NgbPaginationFirst, NgbPaginationLast, NgbPaginationModule, NgbPaginationNext, NgbPaginationNumber, NgbPaginationPages, NgbPaginationPrevious, NgbPanel, NgbPanelContent, NgbPanelHeader, NgbPanelTitle, NgbPanelToggle, NgbPopover, NgbPopoverConfig, NgbPopoverModule, NgbProgressbar, NgbProgressbarConfig, NgbProgressbarModule, NgbRadio, NgbRadioGroup, NgbRating, NgbRatingConfig, NgbRatingModule, NgbSlide, NgbSlideEventDirection, NgbSlideEventSource, NgbTimeAdapter, NgbTimepicker, NgbTimepickerConfig, NgbTimepickerI18n, NgbTimepickerModule, NgbToast, NgbToastConfig, NgbToastHeader, NgbToastModule, NgbTooltip, NgbTooltipConfig, NgbTooltipModule, NgbTypeahead, NgbTypeaheadConfig, NgbTypeaheadModule, OffcanvasDismissReasons };","map":{"version":3,"sources":["/home/eduard/Desktop/cookie_dialogue_angular_dotnet_google_analytics/ClientApp/node_modules/@ng-bootstrap/ng-bootstrap/fesm2015/ng-bootstrap.mjs"],"names":["i0","Injectable","Directive","EventEmitter","Input","Output","ContentChildren","Component","ViewEncapsulation","Optional","Host","NgModule","ChangeDetectionStrategy","forwardRef","PLATFORM_ID","Inject","LOCALE_ID","ElementRef","ViewChild","ContentChild","TemplateRef","Injector","Attribute","ViewChildren","HostBinding","InjectionToken","i2","CommonModule","isPlatformBrowser","getLocaleMonthNames","FormStyle","TranslationWidth","getLocaleDayNames","formatDate","DOCUMENT","getLocaleDayPeriods","Observable","EMPTY","of","Subject","fromEvent","timer","race","BehaviorSubject","combineLatest","NEVER","zip","merge","endWith","takeUntil","filter","take","map","startWith","distinctUntilChanged","switchMap","tap","withLatestFrom","delay","mergeMap","skip","share","finalize","i3","NG_VALUE_ACCESSOR","NG_VALIDATORS","FormsModule","flip","preventOverflow","arrow","createPopperLite","offset","toInteger","value","parseInt","toString","undefined","getValueInRange","max","min","Math","isString","isNumber","isNaN","isInteger","isFinite","floor","isDefined","isPromise","v","then","padNumber","slice","regExpEscape","text","replace","hasClassName","element","className","split","indexOf","closest","selector","reflow","document","body","getBoundingClientRect","runInZone","zone","source","observer","next","run","error","e","complete","subscribe","removeAccents","str","normalize","getTransitionDurationMs","transitionDelay","transitionDuration","window","getComputedStyle","transitionDelaySec","parseFloat","transitionDurationSec","environment","animation","transitionTimerDelayMs","noopFn","runningTransitions","Map","ngbRunTransition","startFn","options","context","running","get","runningTransition","transition$","Object","assign","delete","endFn","transitionProperty","pipe","finishTransition$","stop$","set","transitionDurationMs","runOutsideAngular","transitionEnd$","target","timer$","asObservable","ngbCompleteTransition","_a","measureCollapsingElementHeightPx","navigator","classList","hasShownClass","contains","add","style","height","remove","ngbCollapsingTransition","direction","maxHeight","setInitialClasses","NgbConfig","constructor","ɵfac","ɵprov","type","args","providedIn","NgbAccordionConfig","_ngbConfig","closeOthers","_animation","nextId$4","NgbPanelHeader","templateRef","ɵdir","NgbPanelTitle","NgbPanelContent","NgbPanel","disabled","id","isOpen","initClassDone","transitionRunning","shown","hidden","ngAfterContentChecked","titleTpl","titleTpls","first","headerTpl","headerTpls","contentTpl","contentTpls","title","cardClass","descendants","NgbRefDirective","_El","ngbRef","ngOnInit","emit","nativeElement","ngOnDestroy","NgbAccordion","config","_ngZone","_changeDetector","activeIds","destroyOnHide","panelChange","closeOtherPanels","isExpanded","panelId","expand","_changeOpenState","_findPanelById","expandAll","length","panels","forEach","panel","collapse","collapseAll","toggle","_closeOthers","_updateActiveIds","onStable","panelElement","panelDiv","nextState","defaultPrevented","preventDefault","_runTransitions","enableTransition","find","p","detectChanges","NgZone","ChangeDetectorRef","ɵcmp","NgbPanelToggle","NgTemplateOutlet","NgForOf","NgIf","exportAs","encapsulation","None","host","template","accordion","ngbPanelToggle","decorators","NGB_ACCORDION_DIRECTIVES","NgbAccordionModule","ɵmod","ɵinj","declarations","exports","imports","ngbAlertFadingTransition","NgbAlertConfig","dismissible","NgbAlert","_renderer","_element","_zone","closed","close","transition","ngOnChanges","changes","typeChange","firstChange","removeClass","previousValue","addClass","currentValue","Renderer2","changeDetection","OnPush","styles","NgbAlertModule","NgbButtonLabel","NgbCheckBox","_label","_cd","valueChecked","valueUnChecked","onChange","_","onTouched","focused","isFocused","onInputChange","$event","modelToPropagate","checked","writeValue","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","active","markForCheck","provide","useExisting","multi","providers","nextId$3","NgbRadioGroup","_radios","Set","_value","name","_disabled","onRadioChange","radio","onRadioValueUpdate","_updateRadiosValue","register","_updateRadiosDisabled","unregister","updateValue","updateDisabled","NgbRadio","_group","stringValue","setProperty","_checked","nameAttr","NGB_BUTTON_DIRECTIVES","NgbButtonsModule","NgbSlideEventDirection","isBeingAnimated","removeDirectionClasses","removeClasses","ngbCarouselTransitionIn","START","ngbCarouselTransitionOut","NgbCarouselConfig","interval","wrap","keyboard","pauseOnHover","pauseOnFocus","showNavigationArrows","showNavigationIndicators","nextId$2","NgbSlide","tplRef","slid","NgbCarousel","_platformId","_container","NgbSlideEventSource","_destroy$","_interval$","_mouseHover$","_focused$","_pauseOnHover$","_pauseOnFocus$","_pause$","_wrap$","slide","_transitionIds","mouseHover","arrowLeft","focus","prev","ARROW_LEFT","arrowRight","ARROW_RIGHT","ngAfterContentInit","hasNextSlide$","slideEvent","current","activeId","slides","currentSlideId","slideArr","toArray","currentSlideIdx","_getSlideIdxById","pause","hasNextSlide","TIMER","_getSlideElement","activeSlide","_getSlideById","ngAfterViewInit","select","slideId","_cycleToSelected","_getSlideEventDirection","_getPrevSlide","END","_getNextSlide","cycle","slideIdx","transitionIds","selectedSlide","paused","transitions","activeSlideTransition","isShown","push","previousId","nextSlide","currentActiveSlideId","nextActiveSlideId","currentActiveSlideIdx","nextActiveSlideIdx","isLastSlide","isFirstSlide","querySelector","NGB_CAROUSEL_DIRECTIVES","NgbCarouselModule","NgbCollapseConfig","NgbCollapse","collapsed","ngbCollapseChange","_runTransition","_runTransitionWithEvents","open","NgbCollapseModule","NgbDate","year","month","day","from","date","equals","other","before","after","isChangedDate","dateComparator","isChangedMonth","checkMinBeforeMax","minDate","maxDate","Error","checkDateInRange","isDateSelectable","state","markDisabled","generateSelectBoxMonths","calendar","months","getMonths","index","findIndex","generateSelectBoxYears","start","end","numbers","Array","i","nextMonthDisabled","nextDate","getNext","prevMonthDisabled","prevDate","getPrev","buildMonths","i18n","force","displayMonths","monthsToReuse","splice","firstDates","firstDate","reusedIndex","buildMonth","shift","dayTemplateData","firstDayOfWeek","outsideDays","weekdayWidth","weekdaysVisible","calendarToday","getToday","lastDate","number","weeks","weekdays","getFirstViewDate","week","getWeeksPerMonth","weekObject","days","getDaysPerWeek","getWeekdayLabel","getWeekday","newDate","ariaLabel","getDayAriaLabel","today","contextUserData","dayObject","$implicit","data","currentMonth","currentYear","selected","tabindex","getWeekNumber","daysPerWeek","firstMonthDate","dayOfWeek","fromJSDate","jsDate","getFullYear","getMonth","getDate","toJSDate","Date","getTime","setFullYear","NGB_DATEPICKER_CALENDAR_FACTORY","NgbCalendarGregorian","NgbCalendar","useFactory","period","checkMonth","expectedMonth","setMonth","setDate","getDay","thursdayIndex","time","round","isValid","NGB_DATEPICKER_18N_FACTORY","locale","NgbDatepickerI18nDefault","NgbDatepickerI18n","getMonthLabel","getMonthFullName","getYearNumerals","getDayNumerals","getWeekNumerals","weekNumber","getWeekLabel","deps","_locale","_monthsShort","Standalone","Abbreviated","_monthsFull","Wide","weekday","width","weekdaysStartingOnSunday","Short","getMonthShortName","NgbDatepickerService","_calendar","_i18n","_VALIDATORS","_state","focusVisible","toValidDate","navigation","_model$","_dateSelect$","focusDate","prevDisabled","nextDisabled","selectedDate","selectBoxes","years","model$","model","dateSelect$","patch","keys","key","reduce","obj","part","_nextState","focusedDate","focusSelect","emitEvent","defaultValue","ngbDate","struct","newState","_updateState","_patchContexts","startDate","forceRebuild","yearChanged","monthChanged","NavigationEvent","NgbDatepickerConfig","showWeekNumbers","NGB_DATEPICKER_DATE_ADAPTER_FACTORY","NgbDateStructAdapter","NgbDateAdapter","fromModel","toModel","NgbDatepickerDayView","isMuted","NgbDatepickerNavigationSelect","_month","_year","changeMonth","changeYear","ngAfterViewChecked","monthSelect","yearSelect","NgSelectOption","ɵNgSelectMultipleOption","static","read","NgbDatepickerNavigation","navigate","onClickPrev","event","currentTarget","PREV","onClickNext","NEXT","showSelect","Key","NgbDatepickerKeyboardService","processKey","datepicker","which","PageUp","shiftKey","PageDown","End","Home","ArrowLeft","ArrowUp","ArrowRight","ArrowDown","Enter","Space","stopPropagation","NgbDatepickerContent","NgbDatepicker","_service","cd","_elementRef","_ngbDateAdapter","_controlValue","_destroyed$","_publicState","dateSelect","input","oldDate","viewModel","navigationPrevented","newSelectedDate","newFocusedDate","oldFocusedDate","elementToFocus","navigateTo","focusIns$","_contentEl","focusOuts$","relatedTarget","inputs","dayTemplate","_defaultDayTemplate","onDateSelect","onNavigateDateSelect","onNavigateEvent","NgbDatepickerMonth","contentTemplate","footerTemplate","_keyboardService","onKeyDown","doSelect","isContainedIn","array","some","item","matchesSelectorIfAny","isMobile","isIOS","test","userAgent","maxTouchPoints","isAndroid","wrapAsyncForMobile","setTimeout","ngbAutoClose","closed$","insideElements","ignoreElements","insideSelector","shouldCloseOnClick","button","escapes$","Escape","mouseDowns$","closeableClicks$","shouldClose","FOCUSABLE_ELEMENTS_SELECTOR","join","getFocusableBoundaryElements","list","querySelectorAll","el","tabIndex","ngbFocusTrap","stopFocusTrap$","refocusOnClick","lastFocusedElement$","Tab","tabEvent","focusedElement","last","arr","lastFocusedElement","placementSeparator","spacesRegExp","startPrimaryPlacement","endPrimaryPlacement","startSecondaryPlacement","endSecondaryPlacement","getPopperClassPlacement","placement","newPlacement","popperStartPrimaryPlacement","popperEndPrimaryPlacement","popperStartSecondaryPlacement","popperEndSecondaryPlacement","getBootstrapBaseClassPlacement","baseClass","primary","secondary","newPrimary","classnames","newSecondary","classname","getPopperOptions","placementVals","isArray","allowedPlacements","hasAuto","val","search","popperPlacements","_placement","mainPlacement","bsModifier","enabled","phase","bsClassRegExp","RegExp","popperElement","elements","popper","popperPlacement","trim","modifiers","fallbackPlacements","noop","arg","ngbPositioning","popperInstance","createPopper","positioningOption","updatePopperOptions","popperOptions","hostElement","targetElement","update","setOptions","destroy","NgbInputDatepickerConfig","arguments","autoClose","restoreFocus","addPopperOffset","offset$1","NGB_DATEPICKER_PARSER_FORMATTER_FACTORY","NgbDateISOParserFormatter","NgbDateParserFormatter","parse","dateParts","format","NgbInputDatepicker","_parserFormatter","_elRef","_vcRef","_dateAdapter","_document","_cRef","_elWithFocus","_model","_positioning","_destroyCloseHandlers$","_onChange","_onTouched","_validatorChange","instance","registerOnValidatorChange","validate","c","_fromDateStruct","invalid","actual","_writeModelValue","manualDateChange","updateView","inputValueChanged","_inputValue","createComponent","_applyPopupStyling","location","_applyDatepickerInputs","_subscribeForDatepickerOutputs","changeDetectorRef","container","appendChild","activeElement","positionTarget","HTMLElement","appendToBody","_zoneSubscription","_setCloseHandlers","hostView","unsubscribe","onBlur","onFocus","_applyPopupClass","datepickerInstance","optionName","newClass","oldClass","popupEl","datepickerClass","navigateEvent","ViewContainerRef","NgbCalendarHijri","_setYear","_setMonth","_setDay","toGregorian","MuhDate","fromGregorian","mDays","getDaysPerMonth","isIslamicLeapYear","hYear","isGregorianLeapYear$1","gDate","getIslamicMonthStart","hMonth","ceil","getIslamicYearStart","mod$1","a","b","GREGORIAN_EPOCH$1","ISLAMIC_EPOCH","NgbCalendarIslamicCivil","gYear","gMonth","gDay","julianDay","hDay","hDate","wjd","depoch","quadricent","dqc","cent","dcent","quad","dquad","yindex","gYearStart","yearday","tjd","leapadj","tjd2","GREGORIAN_FIRST_DATE","GREGORIAN_LAST_DATE","HIJRI_BEGIN","HIJRI_END","ONE_DAY","MONTH_LENGTH","getDaysDiff","date1","date2","time1","UTC","time2","diff","abs","NgbCalendarIslamicUmalqura","daysDiff","j","numOfDays","dayDiff","y","m","pos","toGregorian$2","jalaliDate","jdn","jalaliToJulian","julianToGregorian","setHours","fromGregorian$2","gdate","g2d","gregorianToJulian","julianToJalali","setJalaliYear","yearValue","setJalaliMonth","setJalaliDay","mod","div","trunc","jalCal","jalaliYear","breaks","breaksLength","leapJ","jp","jump","jm","n","leapG","march","leap","gy","julianDayNumber","gm","gd","d","r","gregorianDay","jalaliDay","jalaliMonth","numberOfDays","jYear","jMonth","jDay","NgbCalendarPersian","PARTS_PER_HOUR","PARTS_PER_DAY","PARTS_FRACTIONAL_MONTH","PARTS_PER_MONTH","BAHARAD","HEBREW_DAY_ON_JAN_1_1970","GREGORIAN_EPOCH","isGregorianLeapYear","numberOfFirstDayInYear","monthsBeforeYear","fractionalMonthsBeforeYear","dayNumber","timeOfDay","isHebrewLeapYear","getDaysInGregorianMonth","getHebrewMonths","getDaysInHebrewYear","getDaysInHebrewMonth","yearLength","yearType","leapYear","daysInMonth","getDayNumberInHebrewYear","numberOfDay","setHebrewMonth","setHebrewDay","fromGregorian$1","daysSinceHebEpoch","monthsSinceHebEpoch","firstDayOfThisYear","dayOfYear","toGregorian$1","hebrewDate","diffDays","hebrewNumerals","numerals","hArray0_9","hArray10_19","hArray20_90","hArray100_900","hArray1000_9000","geresh","gershaim","mem","result","step","unshift","NgbCalendarHebrew","WEEKDAYS","MONTHS","MONTHS_LEAP","NgbDatepickerI18nHebrew","NgbCalendarBuddhist","NgbDateNativeAdapter","_fromNativeDate","_toNativeDate","NgbDateNativeUTCAdapter","getUTCFullYear","getUTCMonth","getUTCDate","setUTCFullYear","NgbDatepickerModule","NgbDropdownConfig","NgbNavbar","NgbDropdownItem","elementRef","NgbDropdownMenu","dropdown","NgbDropdown","menuItems","NgbDropdownAnchor","NgbDropdownToggle","ngbNavbar","_bodyContainer","_open","openChange","display","_applyPlacementClasses","_applyContainer","_anchor","_menu","dropdownClass","_applyCustomDropdownClass","_positionMenu","_resetContainer","itemElements","_getMenuElements","position","itemElement","isEventFromToggle","_isEventFromToggle","setAttribute","removeAttribute","focusableElements","_isDropup","menu","_getFirstPlacement","renderer","dropdownElement","dropdownMenuElement","removeChild","bodyContainer","createElement","setStyle","NGB_DROPDOWN_DIRECTIVES","NgbDropdownModule","ContentRef","nodes","viewRef","componentRef","PopupService","_type","_injector","_viewContainerRef","_applicationRef","_windowRef","_contentRef","content","_getContentRef","injector","projectableNodes","windowRef","detachView","createEmbeddedView","attachView","rootNodes","createText","NgbModalBackdrop","_el","hide","backdropClass","NgbActiveModal","dismiss","reason","NgbModalRef","_windowCmptRef","_backdropCmptRef","_beforeDismiss","_closed","_dismissed","_hidden","dismissEvent","Promise","resolve","reject","_resolve","_reject","componentInstance","dismissed","_removeModalElements","_dismiss","windowTransition$","backdropTransition$","parentNode","ModalDismissReasons","NgbModalWindow","_closed$","backdrop","fullscreenClass","fullscreen","_show","_disableEventHandling","dialogTransition$","_dialogEl","transitions$","_restoreFocus","_enableEventHandling","_setFocus","requestAnimationFrame","ESC","_bumpBackdrop","preventClose","BACKDROP_CLICK","autoFocusable","firstFocusable","elWithFocus","ariaLabelledBy","ariaDescribedBy","centered","scrollable","size","windowClass","modalDialogClass","ScrollBar","scrollbarWidth","innerWidth","documentElement","clientWidth","bodyStyle","overflow","paddingRight","actualPadding","NgbModalStack","_scrollBar","_rendererFactory","_activeWindowCmptHasChanged","_ariaHiddenValues","_scrollBarRestoreFn","_backdropAttributes","_modalRefs","_windowAttributes","_windowCmpts","_activeInstances","activeWindowCmpt","_revertAriaHidden","_setAriaHidden","_restoreScrollBar","scrollBarRestoreFn","_hideScrollBar","moduleCFR","contentInjector","containerEl","createRenderer","activeModal","contentRef","backdropCmptRef","_attachBackdrop","windowCmptRef","_attachWindowComponent","ngbModalRef","beforeDismiss","_registerModalRef","_registerWindowCmpt","_applyWindowOptions","_applyBackdropOptions","activeInstances","dismissAll","hasOpenModals","backdropFactory","resolveComponentFactory","create","windowFactory","windowInstance","backdropInstance","_createFromTemplateRef","_createFromString","_createFromComponent","component","createTextNode","contentCmptFactory","modalContentInjector","useValue","parent","componentNativeEl","parentElement","children","sibling","nodeName","getAttribute","clear","unregisterModalRef","ngbWindowCmpt","onDestroy","ApplicationRef","RendererFactory2","NgbModalConfig","NgbModal","_moduleCFR","_modalStack","_config","combinedOptions","ComponentFactoryResolver","NgbModalModule","NgbNavConfig","orientation","roles","isValidNavId","navCounter","NgbNavContent","NgbNavItem","nav","_nav","domId","_id","panelDomId","isPanelInDom","NgbNav","role","activeIdChange","destroy$","navItemChange$","navChange","click","_updateActiveId","enabledLinks","links","link","navItem","elRef","nextId","items","_notifyItemChanged","emitNavChange","nextItemId","_getItemById","itemId","NgbNavLink","hasNavItemClass","nodeType","Node","COMMENT_NODE","ngbNavFadeOutTransition","ngbNavFadeInTransition","NgbNavPane","NgbNavOutlet","_activePane","isPanelTransitioning","_updateActivePane","nextItem","activeItem","_getPaneForItem","_b","_getActivePane","_panes","pane","paneRole","NGB_NAV_DIRECTIVES","NgbNavModule","NgbPaginationConfig","boundaryLinks","directionLinks","ellipses","maxSize","pageSize","rotate","NgbPaginationEllipsis","NgbPaginationFirst","NgbPaginationLast","NgbPaginationNext","NgbPaginationNumber","NgbPaginationPrevious","NgbPaginationPages","NgbPagination","pageCount","pages","page","pageChange","hasPrevious","hasNext","previousDisabled","selectPage","pageNumber","_updatePages","isEllipsis","_applyEllipses","_applyRotation","leftOffset","rightOffset","_applyPagination","_setPageInRange","newPageNo","prevPageNo","collectionSize","newPage","tplEllipsis","tplFirst","tplLast","tplNext","tplNumber","tplPrevious","tplPages","DIRECTIVES","NgbPaginationModule","Trigger","isManual","DEFAULT_ALIASES","parseTriggers","triggers","aliases","trimmedTriggers","parsedTriggers","trigger","triggerPair","alias","manualTriggers","observeTriggers","isOpenedFn","subscriber","listeners","openFn","closeFn","toggleFn","listen","unsubscribeFn","delayOrNoop","triggerDelay","openDelay","closeDelay","input$","pending","filteredInput$","currentlyOpen","delayedOpen$","delayedClose$","listenToTriggers","subscription","NgbPopoverConfig","disablePopover","nextId$1","NgbPopoverWindow","isTitleTemplate","popoverClass","NgbPopover","viewContainerRef","applicationRef","_ngbPopoverWindowId","_popupService","_isDisabled","ngbPopover","popoverTitle","_unregisterListenersFn","bind","call","NgbPopoverModule","NgbProgressbarConfig","animated","striped","showValue","NgbProgressbar","textType","_max","getValue","getPercentValue","PercentPipe","class","NgbProgressbarModule","NgbRatingConfig","readonly","resettable","NgbRating","_changeDetectorRef","contexts","hover","leave","rateChange","ariaValueText","nextRate","isInteractive","enter","handleBlur","handleClick","rate","handleKeyDown","_updateMax","_setupContexts","reset","internalChange","newRate","nextValue","fill","k","starTemplate","starTemplateFromContent","NgbRatingModule","NgbTime","hour","minute","second","changeHour","updateHour","NaN","changeMinute","updateMinute","changeSecond","updateSecond","checkSecs","NgbTimepickerConfig","meridian","spinners","seconds","hourStep","minuteStep","secondStep","readonlyInputs","NGB_DATEPICKER_TIME_ADAPTER_FACTORY","NgbTimeStructAdapter","NgbTimeAdapter","NGB_TIMEPICKER_I18N_FACTORY","NgbTimepickerI18nDefault","NgbTimepickerI18n","_periods","Narrow","getMorningPeriod","getAfternoonPeriod","FILTER_REGEX","NgbTimepicker","_ngbTimeAdapter","_hourStep","_minuteStep","_secondStep","structValue","propagateModelChange","newVal","isPM","enteredHour","toggleMeridian","formatInput","formatHour","formatMinSec","isSmallSize","isLargeSize","touched","NgbTimepickerModule","ngbToastFadeInTransition","ngbToastFadeOutTransition","NgbToastConfig","autohide","ariaLive","NgbToastHeader","NgbToast","contentHeaderTpl","_init","show","_clearTimeout","_timeoutID","clearTimeout","header","NgbToastModule","NgbTooltipConfig","disableTooltip","NgbTooltipWindow","tooltipClass","NgbTooltip","_ngbTooltipWindowId","ngbTooltip","_ngbTooltip","NgbTooltipModule","NgbHighlight","highlightClass","accentSensitive","String","prototype","console","warn","terms","term","prepareTerm","escapedTerms","toSplit","parts","substring","NgbTypeaheadWindow","activeIdx","focusFirst","formatter","selectEvent","activeChangeEvent","hasActive","results","getActive","markActive","_activeChanged","resetActive","resultTemplate","popupClass","NgbTypeaheadConfig","editable","showHint","ARIA_LIVE_DELAY","factory","ARIA_LIVE_DELAY_FACTORY","getLiveElement","lazyCreate","Live","_delay","say","message","textContent","setText","nextWindowId","NgbTypeahead","ngZone","_live","_subscription","_inputValueBackup","autocomplete","selectItem","activeDescendant","popupId","_valueChanges","_resubscribeTypeahead","_subscribeToUserInput","ngbTypeahead","_unsubscribeFromUserInput","_closePopup","_writeInputValue","_formatItemForInput","dismissPopup","isPopupOpen","_showHint","_selectResult","_openPopup","_selectResultClosePopup","userInputLowerCase","toLowerCase","formattedVal","substr","apply","inputFormatter","results$","resultFormatter","count","NgbTypeaheadModule","OffcanvasDismissReasons","NgbOffcanvasBackdrop","NgbOffcanvasPanel","offcanvasTransition$","visibility","panelClass","NgbActiveOffcanvas","NgbOffcanvasRef","_panelCmptRef","_removeOffcanvasElements","panelTransition$","NgbOffcanvasStack","_activePanelCmptHasChanged","_panelAttributes","_activeInstance","_panelCmpt","scroll","activeOffcanvas","panelCmptRef","ngbOffcanvasRef","_registerOffcanvasRef","_registerPanelCmpt","_applyPanelOptions","activeInstance","_offcanvasRef","hasOpenOffcanvas","panelFactory","offcanvasContentInjector","unregisterOffcanvasRef","ngbPanelCmpt","NgbOffcanvasConfig","NgbOffcanvas","_offcanvasStack","NgbOffcanvasModule","NGB_MODULES","NgbModule"],"mappings":"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","sourcesContent":["import * as i0 from '@angular/core';\nimport { Injectable, Directive, EventEmitter, Input, Output, ContentChildren, Component, ViewEncapsulation, Optional, Host, NgModule, ChangeDetectionStrategy, forwardRef, PLATFORM_ID, Inject, LOCALE_ID, ElementRef, ViewChild, ContentChild, TemplateRef, Injector, Attribute, ViewChildren, HostBinding, InjectionToken } from '@angular/core';\nimport * as i2 from '@angular/common';\nimport { CommonModule, isPlatformBrowser, getLocaleMonthNames, FormStyle, TranslationWidth, getLocaleDayNames, formatDate, DOCUMENT, getLocaleDayPeriods } from '@angular/common';\nimport { Observable, EMPTY, of, Subject, fromEvent, timer, race, BehaviorSubject, combineLatest, NEVER, zip, merge } from 'rxjs';\nimport { endWith, takeUntil, filter, take, map, startWith, distinctUntilChanged, switchMap, tap, withLatestFrom, delay, mergeMap, skip, share, finalize } from 'rxjs/operators';\nimport * as i3 from '@angular/forms';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS, FormsModule } from '@angular/forms';\nimport { flip, preventOverflow, arrow, createPopperLite, offset } from '@popperjs/core';\n\nfunction toInteger(value) {\n    return parseInt(`${value}`, 10);\n}\nfunction toString(value) {\n    return (value !== undefined && value !== null) ? `${value}` : '';\n}\nfunction getValueInRange(value, max, min = 0) {\n    return Math.max(Math.min(value, max), min);\n}\nfunction isString(value) {\n    return typeof value === 'string';\n}\nfunction isNumber(value) {\n    return !isNaN(toInteger(value));\n}\nfunction isInteger(value) {\n    return typeof value === 'number' && isFinite(value) && Math.floor(value) === value;\n}\nfunction isDefined(value) {\n    return value !== undefined && value !== null;\n}\nfunction isPromise(v) {\n    return v && v.then;\n}\nfunction padNumber(value) {\n    if (isNumber(value)) {\n        return `0${value}`.slice(-2);\n    }\n    else {\n        return '';\n    }\n}\nfunction regExpEscape(text) {\n    return text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n}\nfunction hasClassName(element, className) {\n    return element && element.className && element.className.split &&\n        element.className.split(/\\s+/).indexOf(className) >= 0;\n}\nfunction closest(element, selector) {\n    if (!selector) {\n        return null;\n    }\n    /*\n     * In certain browsers (e.g. Edge 44.18362.449.0) HTMLDocument does\n     * not support `Element.prototype.closest`. To emulate the correct behaviour\n     * we return null when the method is missing.\n     *\n     * Note that in evergreen browsers `closest(document.documentElement, 'html')`\n     * will return the document element whilst in Edge null will be returned. This\n     * compromise was deemed good enough.\n     */\n    if (typeof element.closest === 'undefined') {\n        return null;\n    }\n    return element.closest(selector);\n}\n/**\n * Force a browser reflow\n * @param element element where to apply the reflow\n */\nfunction reflow(element) {\n    return (element || document.body).getBoundingClientRect();\n}\n/**\n * Creates an observable where all callbacks are executed inside a given zone\n *\n * @param zone\n */\nfunction runInZone(zone) {\n    return (source) => {\n        return new Observable(observer => {\n            const next = (value) => zone.run(() => observer.next(value));\n            const error = (e) => zone.run(() => observer.error(e));\n            const complete = () => zone.run(() => observer.complete());\n            return source.subscribe({ next, error, complete });\n        });\n    };\n}\nfunction removeAccents(str) {\n    return str.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '');\n}\n\nfunction getTransitionDurationMs(element) {\n    const { transitionDelay, transitionDuration } = window.getComputedStyle(element);\n    const transitionDelaySec = parseFloat(transitionDelay);\n    const transitionDurationSec = parseFloat(transitionDuration);\n    return (transitionDelaySec + transitionDurationSec) * 1000;\n}\n\nconst environment = {\n    animation: true,\n    transitionTimerDelayMs: 5,\n};\n\nconst noopFn = () => { };\nconst { transitionTimerDelayMs } = environment;\nconst runningTransitions = new Map();\nconst ngbRunTransition = (zone, element, startFn, options) => {\n    // Getting initial context from options\n    let context = options.context || {};\n    // Checking if there are already running transitions on the given element.\n    const running = runningTransitions.get(element);\n    if (running) {\n        switch (options.runningTransition) {\n            // If there is one running and we want for it to 'continue' to run, we have to cancel the new one.\n            // We're not emitting any values, but simply completing the observable (EMPTY).\n            case 'continue':\n                return EMPTY;\n            // If there is one running and we want for it to 'stop', we have to complete the running one.\n            // We're simply completing the running one and not emitting any values and merging newly provided context\n            // with the one coming from currently running transition.\n            case 'stop':\n                zone.run(() => running.transition$.complete());\n                context = Object.assign(running.context, context);\n                runningTransitions.delete(element);\n        }\n    }\n    // Running the start function\n    const endFn = startFn(element, options.animation, context) || noopFn;\n    // If 'prefer-reduced-motion' is enabled, the 'transition' will be set to 'none'.\n    // If animations are disabled, we have to emit a value and complete the observable\n    // In this case we have to call the end function, but can finish immediately by emitting a value,\n    // completing the observable and executing end functions synchronously.\n    if (!options.animation || window.getComputedStyle(element).transitionProperty === 'none') {\n        zone.run(() => endFn());\n        return of(undefined).pipe(runInZone(zone));\n    }\n    // Starting a new transition\n    const transition$ = new Subject();\n    const finishTransition$ = new Subject();\n    const stop$ = transition$.pipe(endWith(true));\n    runningTransitions.set(element, {\n        transition$,\n        complete: () => {\n            finishTransition$.next();\n            finishTransition$.complete();\n        },\n        context\n    });\n    const transitionDurationMs = getTransitionDurationMs(element);\n    // 1. We have to both listen for the 'transitionend' event and have a 'just-in-case' timer,\n    // because 'transitionend' event might not be fired in some browsers, if the transitioning\n    // element becomes invisible (ex. when scrolling, making browser tab inactive, etc.). The timer\n    // guarantees, that we'll release the DOM element and complete 'ngbRunTransition'.\n    // 2. We need to filter transition end events, because they might bubble from shorter transitions\n    // on inner DOM elements. We're only interested in the transition on the 'element' itself.\n    zone.runOutsideAngular(() => {\n        const transitionEnd$ = fromEvent(element, 'transitionend').pipe(takeUntil(stop$), filter(({ target }) => target === element));\n        const timer$ = timer(transitionDurationMs + transitionTimerDelayMs).pipe(takeUntil(stop$));\n        race(timer$, transitionEnd$, finishTransition$).pipe(takeUntil(stop$)).subscribe(() => {\n            runningTransitions.delete(element);\n            zone.run(() => {\n                endFn();\n                transition$.next();\n                transition$.complete();\n            });\n        });\n    });\n    return transition$.asObservable();\n};\nconst ngbCompleteTransition = (element) => {\n    var _a;\n    (_a = runningTransitions.get(element)) === null || _a === void 0 ? void 0 : _a.complete();\n};\n\nfunction measureCollapsingElementHeightPx(element) {\n    // SSR fix for without injecting the PlatformId\n    if (typeof navigator === 'undefined') {\n        return '0px';\n    }\n    const { classList } = element;\n    const hasShownClass = classList.contains('show');\n    if (!hasShownClass) {\n        classList.add('show');\n    }\n    element.style.height = '';\n    const height = element.getBoundingClientRect().height + 'px';\n    if (!hasShownClass) {\n        classList.remove('show');\n    }\n    return height;\n}\nconst ngbCollapsingTransition = (element, animation, context) => {\n    let { direction, maxHeight } = context;\n    const { classList } = element;\n    function setInitialClasses() {\n        classList.add('collapse');\n        if (direction === 'show') {\n            classList.add('show');\n        }\n        else {\n            classList.remove('show');\n        }\n    }\n    // without animations we just need to set initial classes\n    if (!animation) {\n        setInitialClasses();\n        return;\n    }\n    // No maxHeight -> running the transition for the first time\n    if (!maxHeight) {\n        maxHeight = measureCollapsingElementHeightPx(element);\n        context.maxHeight = maxHeight;\n        // Fix the height before starting the animation\n        element.style.height = direction !== 'show' ? maxHeight : '0px';\n        classList.remove('collapse');\n        classList.remove('collapsing');\n        classList.remove('show');\n        reflow(element);\n        // Start the animation\n        classList.add('collapsing');\n    }\n    // Start or revert the animation\n    element.style.height = direction === 'show' ? maxHeight : '0px';\n    return () => {\n        setInitialClasses();\n        classList.remove('collapsing');\n        element.style.height = '';\n    };\n};\n\n/**\n * Global ng-bootstrap config\n *\n * @since 8.0.0\n */\nclass NgbConfig {\n    constructor() {\n        this.animation = environment.animation;\n    }\n}\nNgbConfig.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbConfig, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nNgbConfig.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbConfig, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbConfig, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\n/**\n * A configuration service for the [NgbAccordion](#/components/accordion/api#NgbAccordion) component.\n *\n * You can inject this service, typically in your root component, and customize its properties\n * to provide default values for all accordions used in the application.\n */\nclass NgbAccordionConfig {\n    constructor(_ngbConfig) {\n        this._ngbConfig = _ngbConfig;\n        this.closeOthers = false;\n    }\n    get animation() { return (this._animation === undefined) ? this._ngbConfig.animation : this._animation; }\n    set animation(animation) { this._animation = animation; }\n}\nNgbAccordionConfig.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbAccordionConfig, deps: [{ token: NgbConfig }], target: i0.ɵɵFactoryTarget.Injectable });\nNgbAccordionConfig.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbAccordionConfig, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbAccordionConfig, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: NgbConfig }]; } });\n\nlet nextId$4 = 0;\n/**\n * A directive that wraps an accordion panel header with any HTML markup and a toggling button\n * marked with [`NgbPanelToggle`](#/components/accordion/api#NgbPanelToggle).\n * See the [header customization demo](#/components/accordion/examples#header) for more details.\n *\n * You can also use [`NgbPanelTitle`](#/components/accordion/api#NgbPanelTitle) to customize only the panel title.\n *\n * @since 4.1.0\n */\nclass NgbPanelHeader {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nNgbPanelHeader.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbPanelHeader, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });\nNgbPanelHeader.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.3\", type: NgbPanelHeader, selector: \"ng-template[ngbPanelHeader]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbPanelHeader, decorators: [{\n            type: Directive,\n            args: [{ selector: 'ng-template[ngbPanelHeader]' }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });\n/**\n * A directive that wraps only the panel title with HTML markup inside.\n *\n * You can also use [`NgbPanelHeader`](#/components/accordion/api#NgbPanelHeader) to customize the full panel header.\n */\nclass NgbPanelTitle {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nNgbPanelTitle.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbPanelTitle, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });\nNgbPanelTitle.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.3\", type: NgbPanelTitle, selector: \"ng-template[ngbPanelTitle]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbPanelTitle, decorators: [{\n            type: Directive,\n            args: [{ selector: 'ng-template[ngbPanelTitle]' }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });\n/**\n * A directive that wraps the accordion panel content.\n */\nclass NgbPanelContent {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nNgbPanelContent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbPanelContent, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });\nNgbPanelContent.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.3\", type: NgbPanelContent, selector: \"ng-template[ngbPanelContent]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbPanelContent, decorators: [{\n            type: Directive,\n            args: [{ selector: 'ng-template[ngbPanelContent]' }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });\n/**\n * A directive that wraps an individual accordion panel with title and collapsible content.\n */\nclass NgbPanel {\n    constructor() {\n        /**\n         *  If `true`, the panel is disabled an can't be toggled.\n         */\n        this.disabled = false;\n        /**\n         *  An optional id for the panel that must be unique on the page.\n         *\n         *  If not provided, it will be auto-generated in the `ngb-panel-xxx` format.\n         */\n        this.id = `ngb-panel-${nextId$4++}`;\n        this.isOpen = false;\n        /* A flag to specified that the transition panel classes have been initialized */\n        this.initClassDone = false;\n        /* A flag to specified if the panel is currently being animated, to ensure its presence in the dom */\n        this.transitionRunning = false;\n        /**\n         * An event emitted when the panel is shown, after the transition. It has no payload.\n         *\n         * @since 8.0.0\n         */\n        this.shown = new EventEmitter();\n        /**\n         * An event emitted when the panel is hidden, after the transition. It has no payload.\n         *\n         * @since 8.0.0\n         */\n        this.hidden = new EventEmitter();\n    }\n    ngAfterContentChecked() {\n        // We are using @ContentChildren instead of @ContentChild as in the Angular version being used\n        // only @ContentChildren allows us to specify the {descendants: false} option.\n        // Without {descendants: false} we are hitting bugs described in:\n        // https://github.com/ng-bootstrap/ng-bootstrap/issues/2240\n        this.titleTpl = this.titleTpls.first;\n        this.headerTpl = this.headerTpls.first;\n        this.contentTpl = this.contentTpls.first;\n    }\n}\nNgbPanel.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbPanel, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nNgbPanel.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.3\", type: NgbPanel, selector: \"ngb-panel\", inputs: { disabled: \"disabled\", id: \"id\", title: \"title\", type: \"type\", cardClass: \"cardClass\" }, outputs: { shown: \"shown\", hidden: \"hidden\" }, queries: [{ propertyName: \"titleTpls\", predicate: NgbPanelTitle }, { propertyName: \"headerTpls\", predicate: NgbPanelHeader }, { propertyName: \"contentTpls\", predicate: NgbPanelContent }], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbPanel, decorators: [{\n            type: Directive,\n            args: [{ selector: 'ngb-panel' }]\n        }], propDecorators: { disabled: [{\n                type: Input\n            }], id: [{\n                type: Input\n            }], title: [{\n                type: Input\n            }], type: [{\n                type: Input\n            }], cardClass: [{\n                type: Input\n            }], shown: [{\n                type: Output\n            }], hidden: [{\n                type: Output\n            }], titleTpls: [{\n                type: ContentChildren,\n                args: [NgbPanelTitle, { descendants: false }]\n            }], headerTpls: [{\n                type: ContentChildren,\n                args: [NgbPanelHeader, { descendants: false }]\n            }], contentTpls: [{\n                type: ContentChildren,\n                args: [NgbPanelContent, { descendants: false }]\n            }] } });\nclass NgbRefDirective {\n    constructor(_El) {\n        this._El = _El;\n        this.ngbRef = new EventEmitter();\n    }\n    ngOnInit() { this.ngbRef.emit(this._El.nativeElement); }\n    ngOnDestroy() { this.ngbRef.emit(null); }\n}\nNgbRefDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbRefDirective, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nNgbRefDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.3\", type: NgbRefDirective, selector: \"[ngbRef]\", outputs: { ngbRef: \"ngbRef\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbRefDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: '[ngbRef]' }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { ngbRef: [{\n                type: Output\n            }] } });\n/**\n * Accordion is a collection of collapsible panels (bootstrap cards).\n *\n * It can ensure only one panel is opened at a time and allows to customize panel\n * headers.\n */\nclass NgbAccordion {\n    constructor(config, _ngZone, _changeDetector) {\n        this._ngZone = _ngZone;\n        this._changeDetector = _changeDetector;\n        /**\n         * An array or comma separated strings of panel ids that should be opened **initially**.\n         *\n         * For subsequent changes use methods like `expand()`, `collapse()`, etc. and\n         * the `(panelChange)` event.\n         */\n        this.activeIds = [];\n        /**\n         * If `true`, panel content will be detached from DOM and not simply hidden when the panel is collapsed.\n         */\n        this.destroyOnHide = true;\n        /**\n         * Event emitted right before the panel toggle happens.\n         *\n         * See [NgbPanelChangeEvent](#/components/accordion/api#NgbPanelChangeEvent) for payload details.\n         */\n        this.panelChange = new EventEmitter();\n        /**\n         * An event emitted when the expanding animation is finished on the panel. The payload is the panel id.\n         *\n         * @since 8.0.0\n         */\n        this.shown = new EventEmitter();\n        /**\n         * An event emitted when the collapsing animation is finished on the panel, and before the panel element is removed.\n         * The payload is the panel id.\n         *\n         * @since 8.0.0\n         */\n        this.hidden = new EventEmitter();\n        this.animation = config.animation;\n        this.type = config.type;\n        this.closeOtherPanels = config.closeOthers;\n    }\n    /**\n     * Checks if a panel with a given id is expanded.\n     */\n    isExpanded(panelId) { return this.activeIds.indexOf(panelId) > -1; }\n    /**\n     * Expands a panel with a given id.\n     *\n     * Has no effect if the panel is already expanded or disabled.\n     */\n    expand(panelId) { this._changeOpenState(this._findPanelById(panelId), true); }\n    /**\n     * Expands all panels, if `[closeOthers]` is `false`.\n     *\n     * If `[closeOthers]` is `true`, it will expand the first panel, unless there is already a panel opened.\n     */\n    expandAll() {\n        if (this.closeOtherPanels) {\n            if (this.activeIds.length === 0 && this.panels.length) {\n                this._changeOpenState(this.panels.first, true);\n            }\n        }\n        else {\n            this.panels.forEach(panel => this._changeOpenState(panel, true));\n        }\n    }\n    /**\n     * Collapses a panel with the given id.\n     *\n     * Has no effect if the panel is already collapsed or disabled.\n     */\n    collapse(panelId) { this._changeOpenState(this._findPanelById(panelId), false); }\n    /**\n     * Collapses all opened panels.\n     */\n    collapseAll() {\n        this.panels.forEach((panel) => { this._changeOpenState(panel, false); });\n    }\n    /**\n     * Toggles a panel with the given id.\n     *\n     * Has no effect if the panel is disabled.\n     */\n    toggle(panelId) {\n        const panel = this._findPanelById(panelId);\n        if (panel) {\n            this._changeOpenState(panel, !panel.isOpen);\n        }\n    }\n    ngAfterContentChecked() {\n        // active id updates\n        if (isString(this.activeIds)) {\n            this.activeIds = this.activeIds.split(/\\s*,\\s*/);\n        }\n        // update panels open states\n        this.panels.forEach(panel => { panel.isOpen = !panel.disabled && this.activeIds.indexOf(panel.id) > -1; });\n        // closeOthers updates\n        if (this.activeIds.length > 1 && this.closeOtherPanels) {\n            this._closeOthers(this.activeIds[0], false);\n            this._updateActiveIds();\n        }\n        // Setup the initial classes here\n        this._ngZone.onStable.pipe(take(1)).subscribe(() => {\n            this.panels.forEach(panel => {\n                const panelElement = panel.panelDiv;\n                if (panelElement) {\n                    if (!panel.initClassDone) {\n                        panel.initClassDone = true;\n                        ngbRunTransition(this._ngZone, panelElement, ngbCollapsingTransition, {\n                            animation: false,\n                            runningTransition: 'continue',\n                            context: { direction: panel.isOpen ? 'show' : 'hide' }\n                        });\n                    }\n                }\n                else {\n                    // Classes must be initialized next time it will be in the dom\n                    panel.initClassDone = false;\n                }\n            });\n        });\n    }\n    _changeOpenState(panel, nextState) {\n        if (panel != null && !panel.disabled && panel.isOpen !== nextState) {\n            let defaultPrevented = false;\n            this.panelChange.emit({ panelId: panel.id, nextState: nextState, preventDefault: () => { defaultPrevented = true; } });\n            if (!defaultPrevented) {\n                panel.isOpen = nextState;\n                panel.transitionRunning = true;\n                if (nextState && this.closeOtherPanels) {\n                    this._closeOthers(panel.id);\n                }\n                this._updateActiveIds();\n                this._runTransitions(this.animation);\n            }\n        }\n    }\n    _closeOthers(panelId, enableTransition = true) {\n        this.panels.forEach(panel => {\n            if (panel.id !== panelId && panel.isOpen) {\n                panel.isOpen = false;\n                panel.transitionRunning = enableTransition;\n            }\n        });\n    }\n    _findPanelById(panelId) { return this.panels.find(p => p.id === panelId) || null; }\n    _updateActiveIds() {\n        this.activeIds = this.panels.filter(panel => panel.isOpen && !panel.disabled).map(panel => panel.id);\n    }\n    _runTransitions(animation) {\n        // detectChanges is performed to ensure that all panels are in the dom (via transitionRunning = true)\n        // before starting the animation\n        this._changeDetector.detectChanges();\n        this.panels.forEach(panel => {\n            // When panel.transitionRunning is true, the transition needs to be started OR reversed,\n            // The direction (show or hide) is choosen by each panel.isOpen state\n            if (panel.transitionRunning) {\n                const panelElement = panel.panelDiv;\n                ngbRunTransition(this._ngZone, panelElement, ngbCollapsingTransition, {\n                    animation,\n                    runningTransition: 'stop',\n                    context: { direction: panel.isOpen ? 'show' : 'hide' }\n                }).subscribe(() => {\n                    panel.transitionRunning = false;\n                    const { id } = panel;\n                    if (panel.isOpen) {\n                        panel.shown.emit();\n                        this.shown.emit(id);\n                    }\n                    else {\n                        panel.hidden.emit();\n                        this.hidden.emit(id);\n                    }\n                });\n            }\n        });\n    }\n}\nNgbAccordion.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbAccordion, deps: [{ token: NgbAccordionConfig }, { token: i0.NgZone }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nNgbAccordion.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: NgbAccordion, selector: \"ngb-accordion\", inputs: { animation: \"animation\", activeIds: \"activeIds\", closeOtherPanels: [\"closeOthers\", \"closeOtherPanels\"], destroyOnHide: \"destroyOnHide\", type: \"type\" }, outputs: { panelChange: \"panelChange\", shown: \"shown\", hidden: \"hidden\" }, host: { attributes: { \"role\": \"tablist\" }, properties: { \"attr.aria-multiselectable\": \"!closeOtherPanels\" }, classAttribute: \"accordion\" }, queries: [{ propertyName: \"panels\", predicate: NgbPanel }], exportAs: [\"ngbAccordion\"], ngImport: i0, template: `\n    <ng-template #t ngbPanelHeader let-panel>\n      <button class=\"accordion-button\" [ngbPanelToggle]=\"panel\">\n        {{panel.title}}<ng-template [ngTemplateOutlet]=\"panel.titleTpl?.templateRef\"></ng-template>\n      </button>\n    </ng-template>\n    <ng-template ngFor let-panel [ngForOf]=\"panels\">\n      <div [class]=\"'accordion-item ' + (panel.cardClass || '')\">\n        <div role=\"tab\" id=\"{{panel.id}}-header\" [class]=\"'accordion-header ' + (panel.type ? 'bg-'+panel.type: type ? 'bg-'+type : '')\">\n          <ng-template [ngTemplateOutlet]=\"panel.headerTpl?.templateRef || t\"\n                       [ngTemplateOutletContext]=\"{$implicit: panel, opened: panel.isOpen}\"></ng-template>\n        </div>\n        <div id=\"{{panel.id}}\" (ngbRef)=\"panel.panelDiv = $event\" role=\"tabpanel\" [attr.aria-labelledby]=\"panel.id + '-header'\"\n             *ngIf=\"!destroyOnHide || panel.isOpen || panel.transitionRunning\">\n          <div class=\"accordion-body\">\n            <ng-template [ngTemplateOutlet]=\"panel.contentTpl?.templateRef || null\"></ng-template>\n          </div>\n        </div>\n      </div>\n    </ng-template>\n  `, isInline: true, directives: [{ type: i0.forwardRef(function () { return NgbPanelHeader; }), selector: \"ng-template[ngbPanelHeader]\" }, { type: i0.forwardRef(function () { return NgbPanelToggle; }), selector: \"button[ngbPanelToggle]\", inputs: [\"ngbPanelToggle\"] }, { type: i0.forwardRef(function () { return i2.NgTemplateOutlet; }), selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }, { type: i0.forwardRef(function () { return i2.NgForOf; }), selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i0.forwardRef(function () { return i2.NgIf; }), selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i0.forwardRef(function () { return NgbRefDirective; }), selector: \"[ngbRef]\", outputs: [\"ngbRef\"] }], encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbAccordion, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ngb-accordion',\n                    exportAs: 'ngbAccordion',\n                    encapsulation: ViewEncapsulation.None,\n                    host: { 'class': 'accordion', 'role': 'tablist', '[attr.aria-multiselectable]': '!closeOtherPanels' },\n                    template: `\n    <ng-template #t ngbPanelHeader let-panel>\n      <button class=\"accordion-button\" [ngbPanelToggle]=\"panel\">\n        {{panel.title}}<ng-template [ngTemplateOutlet]=\"panel.titleTpl?.templateRef\"></ng-template>\n      </button>\n    </ng-template>\n    <ng-template ngFor let-panel [ngForOf]=\"panels\">\n      <div [class]=\"'accordion-item ' + (panel.cardClass || '')\">\n        <div role=\"tab\" id=\"{{panel.id}}-header\" [class]=\"'accordion-header ' + (panel.type ? 'bg-'+panel.type: type ? 'bg-'+type : '')\">\n          <ng-template [ngTemplateOutlet]=\"panel.headerTpl?.templateRef || t\"\n                       [ngTemplateOutletContext]=\"{$implicit: panel, opened: panel.isOpen}\"></ng-template>\n        </div>\n        <div id=\"{{panel.id}}\" (ngbRef)=\"panel.panelDiv = $event\" role=\"tabpanel\" [attr.aria-labelledby]=\"panel.id + '-header'\"\n             *ngIf=\"!destroyOnHide || panel.isOpen || panel.transitionRunning\">\n          <div class=\"accordion-body\">\n            <ng-template [ngTemplateOutlet]=\"panel.contentTpl?.templateRef || null\"></ng-template>\n          </div>\n        </div>\n      </div>\n    </ng-template>\n  `\n                }]\n        }], ctorParameters: function () { return [{ type: NgbAccordionConfig }, { type: i0.NgZone }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { panels: [{\n                type: ContentChildren,\n                args: [NgbPanel]\n            }], animation: [{\n                type: Input\n            }], activeIds: [{\n                type: Input\n            }], closeOtherPanels: [{\n                type: Input,\n                args: ['closeOthers']\n            }], destroyOnHide: [{\n                type: Input\n            }], type: [{\n                type: Input\n            }], panelChange: [{\n                type: Output\n            }], shown: [{\n                type: Output\n            }], hidden: [{\n                type: Output\n            }] } });\n/**\n * A directive to put on a button that toggles panel opening and closing.\n *\n * To be used inside the [`NgbPanelHeader`](#/components/accordion/api#NgbPanelHeader)\n *\n * @since 4.1.0\n */\nclass NgbPanelToggle {\n    constructor(accordion, panel) {\n        this.accordion = accordion;\n        this.panel = panel;\n    }\n    set ngbPanelToggle(panel) {\n        if (panel) {\n            this.panel = panel;\n        }\n    }\n}\nNgbPanelToggle.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbPanelToggle, deps: [{ token: NgbAccordion }, { token: NgbPanel, host: true, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nNgbPanelToggle.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.3\", type: NgbPanelToggle, selector: \"button[ngbPanelToggle]\", inputs: { ngbPanelToggle: \"ngbPanelToggle\" }, host: { attributes: { \"type\": \"button\" }, listeners: { \"click\": \"accordion.toggle(panel.id)\" }, properties: { \"disabled\": \"panel.disabled\", \"class.collapsed\": \"!panel.isOpen\", \"attr.aria-expanded\": \"panel.isOpen\", \"attr.aria-controls\": \"panel.id\" } }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbPanelToggle, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'button[ngbPanelToggle]',\n                    host: {\n                        'type': 'button',\n                        '[disabled]': 'panel.disabled',\n                        '[class.collapsed]': '!panel.isOpen',\n                        '[attr.aria-expanded]': 'panel.isOpen',\n                        '[attr.aria-controls]': 'panel.id',\n                        '(click)': 'accordion.toggle(panel.id)'\n                    }\n                }]\n        }], ctorParameters: function () {\n        return [{ type: NgbAccordion }, { type: NgbPanel, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Host\n                    }] }];\n    }, propDecorators: { ngbPanelToggle: [{\n                type: Input\n            }] } });\n\nconst NGB_ACCORDION_DIRECTIVES = [NgbAccordion, NgbPanel, NgbPanelTitle, NgbPanelContent, NgbPanelHeader, NgbPanelToggle];\nclass NgbAccordionModule {\n}\nNgbAccordionModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbAccordionModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nNgbAccordionModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbAccordionModule, declarations: [NgbRefDirective, NgbAccordion, NgbPanel, NgbPanelTitle, NgbPanelContent, NgbPanelHeader, NgbPanelToggle], imports: [CommonModule], exports: [NgbAccordion, NgbPanel, NgbPanelTitle, NgbPanelContent, NgbPanelHeader, NgbPanelToggle] });\nNgbAccordionModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbAccordionModule, imports: [[CommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbAccordionModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [NgbRefDirective, ...NGB_ACCORDION_DIRECTIVES],\n                    exports: NGB_ACCORDION_DIRECTIVES,\n                    imports: [CommonModule]\n                }]\n        }] });\n\nconst ngbAlertFadingTransition = ({ classList }) => {\n    classList.remove('show');\n};\n\n/**\n * A configuration service for the [NgbAlert](#/components/alert/api#NgbAlert) component.\n *\n * You can inject this service, typically in your root component, and customize its properties\n * to provide default values for all alerts used in the application.\n */\nclass NgbAlertConfig {\n    constructor(_ngbConfig) {\n        this._ngbConfig = _ngbConfig;\n        this.dismissible = true;\n        this.type = 'warning';\n    }\n    get animation() { return (this._animation === undefined) ? this._ngbConfig.animation : this._animation; }\n    set animation(animation) { this._animation = animation; }\n}\nNgbAlertConfig.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbAlertConfig, deps: [{ token: NgbConfig }], target: i0.ɵɵFactoryTarget.Injectable });\nNgbAlertConfig.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbAlertConfig, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbAlertConfig, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: NgbConfig }]; } });\n\n/**\n * Alert is a component to provide contextual feedback messages for user.\n *\n * It supports several alert types and can be dismissed.\n */\nclass NgbAlert {\n    constructor(config, _renderer, _element, _zone) {\n        this._renderer = _renderer;\n        this._element = _element;\n        this._zone = _zone;\n        /**\n         * An event emitted when the close button is clicked. It has no payload and only relevant for dismissible alerts.\n         *\n         * @since 8.0.0\n         */\n        this.closed = new EventEmitter();\n        this.dismissible = config.dismissible;\n        this.type = config.type;\n        this.animation = config.animation;\n    }\n    /**\n     * Triggers alert closing programmatically (same as clicking on the close button (×)).\n     *\n     * The returned observable will emit and be completed once the closing transition has finished.\n     * If the animations are turned off this happens synchronously.\n     *\n     * Alternatively you could listen or subscribe to the `(closed)` output\n     *\n     * @since 8.0.0\n     */\n    close() {\n        const transition = ngbRunTransition(this._zone, this._element.nativeElement, ngbAlertFadingTransition, { animation: this.animation, runningTransition: 'continue' });\n        transition.subscribe(() => this.closed.emit());\n        return transition;\n    }\n    ngOnChanges(changes) {\n        const typeChange = changes['type'];\n        if (typeChange && !typeChange.firstChange) {\n            this._renderer.removeClass(this._element.nativeElement, `alert-${typeChange.previousValue}`);\n            this._renderer.addClass(this._element.nativeElement, `alert-${typeChange.currentValue}`);\n        }\n    }\n    ngOnInit() { this._renderer.addClass(this._element.nativeElement, `alert-${this.type}`); }\n}\nNgbAlert.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbAlert, deps: [{ token: NgbAlertConfig }, { token: i0.Renderer2 }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\nNgbAlert.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: NgbAlert, selector: \"ngb-alert\", inputs: { animation: \"animation\", dismissible: \"dismissible\", type: \"type\" }, outputs: { closed: \"closed\" }, host: { attributes: { \"role\": \"alert\" }, properties: { \"class.fade\": \"animation\", \"class.alert-dismissible\": \"dismissible\" }, classAttribute: \"alert show\" }, exportAs: [\"ngbAlert\"], usesOnChanges: true, ngImport: i0, template: `\n    <ng-content></ng-content>\n    <button *ngIf=\"dismissible\" type=\"button\" class=\"btn-close\" aria-label=\"Close\" i18n-aria-label=\"@@ngb.alert.close\"\n      (click)=\"close()\">\n    </button>\n    `, isInline: true, styles: [\"ngb-alert{display:block}\\n\"], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbAlert, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngb-alert', exportAs: 'ngbAlert', changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, host: { 'role': 'alert', 'class': 'alert show', '[class.fade]': 'animation', '[class.alert-dismissible]': 'dismissible' }, template: `\n    <ng-content></ng-content>\n    <button *ngIf=\"dismissible\" type=\"button\" class=\"btn-close\" aria-label=\"Close\" i18n-aria-label=\"@@ngb.alert.close\"\n      (click)=\"close()\">\n    </button>\n    `, styles: [\"ngb-alert{display:block}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: NgbAlertConfig }, { type: i0.Renderer2 }, { type: i0.ElementRef }, { type: i0.NgZone }]; }, propDecorators: { animation: [{\n                type: Input\n            }], dismissible: [{\n                type: Input\n            }], type: [{\n                type: Input\n            }], closed: [{\n                type: Output\n            }] } });\n\nclass NgbAlertModule {\n}\nNgbAlertModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbAlertModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nNgbAlertModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbAlertModule, declarations: [NgbAlert], imports: [CommonModule], exports: [NgbAlert] });\nNgbAlertModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbAlertModule, imports: [[CommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbAlertModule, decorators: [{\n            type: NgModule,\n            args: [{ declarations: [NgbAlert], exports: [NgbAlert], imports: [CommonModule] }]\n        }] });\n\n/* eslint-disable */\n/**\n * @deprecated 12.0.0 Please use native Angular code instead\n */\nclass NgbButtonLabel {\n}\nNgbButtonLabel.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbButtonLabel, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nNgbButtonLabel.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.3\", type: NgbButtonLabel, selector: \"[ngbButtonLabel]\", host: { properties: { \"class.btn\": \"true\", \"class.active\": \"active\", \"class.disabled\": \"disabled\", \"class.focus\": \"focused\" } }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbButtonLabel, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[ngbButtonLabel]',\n                    host: { '[class.btn]': 'true', '[class.active]': 'active', '[class.disabled]': 'disabled', '[class.focus]': 'focused' }\n                }]\n        }] });\n\n/* eslint-disable */\n/**\n * Allows to easily create Bootstrap-style checkbox buttons.\n *\n * Integrates with forms, so the value of a checked button is bound to the underlying form control\n * either in a reactive or template-driven way.\n *\n * @deprecated 12.0.0 Please use native Angular code instead\n */\nclass NgbCheckBox {\n    constructor(_label, _cd) {\n        this._label = _label;\n        this._cd = _cd;\n        /**\n         * If `true`, the checkbox button will be disabled\n         */\n        this.disabled = false;\n        /**\n         * The form control value when the checkbox is checked.\n         */\n        this.valueChecked = true;\n        /**\n         * The form control value when the checkbox is unchecked.\n         */\n        this.valueUnChecked = false;\n        this.onChange = (_) => { };\n        this.onTouched = () => { };\n    }\n    set focused(isFocused) {\n        this._label.focused = isFocused;\n        if (!isFocused) {\n            this.onTouched();\n        }\n    }\n    onInputChange($event) {\n        const modelToPropagate = $event.target.checked ? this.valueChecked : this.valueUnChecked;\n        this.onChange(modelToPropagate);\n        this.onTouched();\n        this.writeValue(modelToPropagate);\n    }\n    registerOnChange(fn) { this.onChange = fn; }\n    registerOnTouched(fn) { this.onTouched = fn; }\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this._label.disabled = isDisabled;\n    }\n    writeValue(value) {\n        this.checked = value === this.valueChecked;\n        this._label.active = this.checked;\n        // label won't be updated, if it is inside the OnPush component when [ngModel] changes\n        this._cd.markForCheck();\n    }\n}\nNgbCheckBox.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbCheckBox, deps: [{ token: NgbButtonLabel }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Directive });\nNgbCheckBox.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.3\", type: NgbCheckBox, selector: \"[ngbButton][type=checkbox]\", inputs: { disabled: \"disabled\", valueChecked: \"valueChecked\", valueUnChecked: \"valueUnChecked\" }, host: { listeners: { \"change\": \"onInputChange($event)\", \"focus\": \"focused = true\", \"blur\": \"focused = false\" }, properties: { \"checked\": \"checked\", \"disabled\": \"disabled\" } }, providers: [{ provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => NgbCheckBox), multi: true }], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbCheckBox, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[ngbButton][type=checkbox]',\n                    host: {\n                        '[checked]': 'checked',\n                        '[disabled]': 'disabled',\n                        '(change)': 'onInputChange($event)',\n                        '(focus)': 'focused = true',\n                        '(blur)': 'focused = false'\n                    },\n                    providers: [{ provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => NgbCheckBox), multi: true }]\n                }]\n        }], ctorParameters: function () { return [{ type: NgbButtonLabel }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { disabled: [{\n                type: Input\n            }], valueChecked: [{\n                type: Input\n            }], valueUnChecked: [{\n                type: Input\n            }] } });\n\n/* eslint-disable */\nlet nextId$3 = 0;\n/**\n * Allows to easily create Bootstrap-style radio buttons.\n *\n * Integrates with forms, so the value of a checked button is bound to the underlying form control\n * either in a reactive or template-driven way.\n *\n * @deprecated 12.0.0 Please use native Angular code instead\n */\nclass NgbRadioGroup {\n    constructor() {\n        this._radios = new Set();\n        this._value = null;\n        /**\n         * Name of the radio group applied to radio input elements.\n         *\n         * Will be applied to all radio input elements inside the group,\n         * unless [`NgbRadio`](#/components/buttons/api#NgbRadio)'s specify names themselves.\n         *\n         * If not provided, will be generated in the `ngb-radio-xx` format.\n         */\n        this.name = `ngb-radio-${nextId$3++}`;\n        this.onChange = (_) => { };\n        this.onTouched = () => { };\n    }\n    get disabled() { return this._disabled; }\n    set disabled(isDisabled) { this.setDisabledState(isDisabled); }\n    onRadioChange(radio) {\n        this.writeValue(radio.value);\n        this.onChange(radio.value);\n    }\n    onRadioValueUpdate() { this._updateRadiosValue(); }\n    register(radio) { this._radios.add(radio); }\n    registerOnChange(fn) { this.onChange = fn; }\n    registerOnTouched(fn) { this.onTouched = fn; }\n    setDisabledState(isDisabled) {\n        this._disabled = isDisabled;\n        this._updateRadiosDisabled();\n    }\n    unregister(radio) { this._radios.delete(radio); }\n    writeValue(value) {\n        this._value = value;\n        this._updateRadiosValue();\n    }\n    _updateRadiosValue() { this._radios.forEach((radio) => radio.updateValue(this._value)); }\n    _updateRadiosDisabled() { this._radios.forEach((radio) => radio.updateDisabled()); }\n}\nNgbRadioGroup.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbRadioGroup, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nNgbRadioGroup.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.3\", type: NgbRadioGroup, selector: \"[ngbRadioGroup]\", inputs: { name: \"name\" }, host: { attributes: { \"role\": \"radiogroup\" } }, providers: [{ provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => NgbRadioGroup), multi: true }], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbRadioGroup, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[ngbRadioGroup]',\n                    host: { 'role': 'radiogroup' },\n                    providers: [{ provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => NgbRadioGroup), multi: true }]\n                }]\n        }], propDecorators: { name: [{\n                type: Input\n            }] } });\n/**\n * A directive that marks an input of type \"radio\" as a part of the\n * [`NgbRadioGroup`](#/components/buttons/api#NgbRadioGroup).\n *\n * @deprecated 12.0.0 Please use native Angular code instead\n */\nclass NgbRadio {\n    constructor(_group, _label, _renderer, _element, _cd) {\n        this._group = _group;\n        this._label = _label;\n        this._renderer = _renderer;\n        this._element = _element;\n        this._cd = _cd;\n        this._value = null;\n        this._group.register(this);\n        this.updateDisabled();\n    }\n    /**\n     * The form control value when current radio button is checked.\n     */\n    set value(value) {\n        this._value = value;\n        const stringValue = value ? value.toString() : '';\n        this._renderer.setProperty(this._element.nativeElement, 'value', stringValue);\n        this._group.onRadioValueUpdate();\n    }\n    /**\n     * If `true`, current radio button will be disabled.\n     */\n    set disabled(isDisabled) {\n        this._disabled = isDisabled !== false;\n        this.updateDisabled();\n    }\n    set focused(isFocused) {\n        if (this._label) {\n            this._label.focused = isFocused;\n        }\n        if (!isFocused) {\n            this._group.onTouched();\n        }\n    }\n    get checked() { return this._checked; }\n    get disabled() { return this._group.disabled || this._disabled; }\n    get value() { return this._value; }\n    get nameAttr() { return this.name || this._group.name; }\n    ngOnDestroy() { this._group.unregister(this); }\n    onChange() { this._group.onRadioChange(this); }\n    updateValue(value) {\n        // label won't be updated, if it is inside the OnPush component when [ngModel] changes\n        if (this.value !== value) {\n            this._cd.markForCheck();\n        }\n        this._checked = this.value === value;\n        this._label.active = this._checked;\n    }\n    updateDisabled() { this._label.disabled = this.disabled; }\n}\nNgbRadio.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbRadio, deps: [{ token: NgbRadioGroup }, { token: NgbButtonLabel }, { token: i0.Renderer2 }, { token: i0.ElementRef }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Directive });\nNgbRadio.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.3\", type: NgbRadio, selector: \"[ngbButton][type=radio]\", inputs: { name: \"name\", value: \"value\", disabled: \"disabled\" }, host: { listeners: { \"change\": \"onChange()\", \"focus\": \"focused = true\", \"blur\": \"focused = false\" }, properties: { \"checked\": \"checked\", \"disabled\": \"disabled\", \"name\": \"nameAttr\" } }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbRadio, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[ngbButton][type=radio]',\n                    host: {\n                        '[checked]': 'checked',\n                        '[disabled]': 'disabled',\n                        '[name]': 'nameAttr',\n                        '(change)': 'onChange()',\n                        '(focus)': 'focused = true',\n                        '(blur)': 'focused = false'\n                    }\n                }]\n        }], ctorParameters: function () { return [{ type: NgbRadioGroup }, { type: NgbButtonLabel }, { type: i0.Renderer2 }, { type: i0.ElementRef }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { name: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }] } });\n\n/* eslint-disable */\nconst NGB_BUTTON_DIRECTIVES = [NgbButtonLabel, NgbCheckBox, NgbRadioGroup, NgbRadio];\n/**\n * @deprecated 12.0.0 Please use native Angular code instead\n */\nclass NgbButtonsModule {\n}\nNgbButtonsModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbButtonsModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nNgbButtonsModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbButtonsModule, declarations: [NgbButtonLabel, NgbCheckBox, NgbRadioGroup, NgbRadio], exports: [NgbButtonLabel, NgbCheckBox, NgbRadioGroup, NgbRadio] });\nNgbButtonsModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbButtonsModule });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbButtonsModule, decorators: [{\n            type: NgModule,\n            args: [{ declarations: NGB_BUTTON_DIRECTIVES, exports: NGB_BUTTON_DIRECTIVES }]\n        }] });\n\n/**\n * Defines the carousel slide transition direction.\n */\nvar NgbSlideEventDirection;\n(function (NgbSlideEventDirection) {\n    NgbSlideEventDirection[\"START\"] = \"start\";\n    NgbSlideEventDirection[\"END\"] = \"end\";\n})(NgbSlideEventDirection || (NgbSlideEventDirection = {}));\nconst isBeingAnimated = ({ classList }) => {\n    return classList.contains('carousel-item-start') || classList.contains('carousel-item-end');\n};\nconst removeDirectionClasses = (classList) => {\n    classList.remove('carousel-item-start');\n    classList.remove('carousel-item-end');\n};\nconst removeClasses = (classList) => {\n    removeDirectionClasses(classList);\n    classList.remove('carousel-item-prev');\n    classList.remove('carousel-item-next');\n};\nconst ngbCarouselTransitionIn = (element, animation, { direction }) => {\n    const { classList } = element;\n    if (!animation) {\n        removeDirectionClasses(classList);\n        removeClasses(classList);\n        classList.add('active');\n        return;\n    }\n    if (isBeingAnimated(element)) {\n        // Revert the transition\n        removeDirectionClasses(classList);\n    }\n    else {\n        // For the 'in' transition, a 'pre-class' is applied to the element to ensure its visibility\n        classList.add('carousel-item-' + (direction === NgbSlideEventDirection.START ? 'next' : 'prev'));\n        reflow(element);\n        classList.add('carousel-item-' + direction);\n    }\n    return () => {\n        removeClasses(classList);\n        classList.add('active');\n    };\n};\nconst ngbCarouselTransitionOut = (element, animation, { direction }) => {\n    const { classList } = element;\n    if (!animation) {\n        removeDirectionClasses(classList);\n        removeClasses(classList);\n        classList.remove('active');\n        return;\n    }\n    //  direction is left or right, depending on the way the slide goes out.\n    if (isBeingAnimated(element)) {\n        // Revert the transition\n        removeDirectionClasses(classList);\n    }\n    else {\n        classList.add('carousel-item-' + direction);\n    }\n    return () => {\n        removeClasses(classList);\n        classList.remove('active');\n    };\n};\n\n/**\n * A configuration service for the [NgbCarousel](#/components/carousel/api#NgbCarousel) component.\n *\n * You can inject this service, typically in your root component, and customize its properties\n * to provide default values for all carousels used in the application.\n */\nclass NgbCarouselConfig {\n    constructor(_ngbConfig) {\n        this._ngbConfig = _ngbConfig;\n        this.interval = 5000;\n        this.wrap = true;\n        this.keyboard = true;\n        this.pauseOnHover = true;\n        this.pauseOnFocus = true;\n        this.showNavigationArrows = true;\n        this.showNavigationIndicators = true;\n    }\n    get animation() { return (this._animation === undefined) ? this._ngbConfig.animation : this._animation; }\n    set animation(animation) { this._animation = animation; }\n}\nNgbCarouselConfig.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbCarouselConfig, deps: [{ token: NgbConfig }], target: i0.ɵɵFactoryTarget.Injectable });\nNgbCarouselConfig.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbCarouselConfig, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbCarouselConfig, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: NgbConfig }]; } });\n\nlet nextId$2 = 0;\n/**\n * A directive that wraps the individual carousel slide.\n */\nclass NgbSlide {\n    constructor(tplRef) {\n        this.tplRef = tplRef;\n        /**\n         * Slide id that must be unique for the entire document.\n         *\n         * If not provided, will be generated in the `ngb-slide-xx` format.\n         */\n        this.id = `ngb-slide-${nextId$2++}`;\n        /**\n         * An event emitted when the slide transition is finished\n         *\n         * @since 8.0.0\n         */\n        this.slid = new EventEmitter();\n    }\n}\nNgbSlide.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbSlide, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });\nNgbSlide.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.3\", type: NgbSlide, selector: \"ng-template[ngbSlide]\", inputs: { id: \"id\" }, outputs: { slid: \"slid\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbSlide, decorators: [{\n            type: Directive,\n            args: [{ selector: 'ng-template[ngbSlide]' }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; }, propDecorators: { id: [{\n                type: Input\n            }], slid: [{\n                type: Output\n            }] } });\n/**\n * Carousel is a component to easily create and control slideshows.\n *\n * Allows to set intervals, change the way user interacts with the slides and provides a programmatic API.\n */\nclass NgbCarousel {\n    constructor(config, _platformId, _ngZone, _cd, _container) {\n        this._platformId = _platformId;\n        this._ngZone = _ngZone;\n        this._cd = _cd;\n        this._container = _container;\n        this.NgbSlideEventSource = NgbSlideEventSource;\n        this._destroy$ = new Subject();\n        this._interval$ = new BehaviorSubject(0);\n        this._mouseHover$ = new BehaviorSubject(false);\n        this._focused$ = new BehaviorSubject(false);\n        this._pauseOnHover$ = new BehaviorSubject(false);\n        this._pauseOnFocus$ = new BehaviorSubject(false);\n        this._pause$ = new BehaviorSubject(false);\n        this._wrap$ = new BehaviorSubject(false);\n        /**\n         * An event emitted just before the slide transition starts.\n         *\n         * See [`NgbSlideEvent`](#/components/carousel/api#NgbSlideEvent) for payload details.\n         */\n        this.slide = new EventEmitter();\n        /**\n         * An event emitted right after the slide transition is completed.\n         *\n         * See [`NgbSlideEvent`](#/components/carousel/api#NgbSlideEvent) for payload details.\n         *\n         * @since 8.0.0\n         */\n        this.slid = new EventEmitter();\n        /*\n         * Keep the ids of the panels currently transitionning\n         * in order to allow only the transition revertion\n         */\n        this._transitionIds = null;\n        this.animation = config.animation;\n        this.interval = config.interval;\n        this.wrap = config.wrap;\n        this.keyboard = config.keyboard;\n        this.pauseOnHover = config.pauseOnHover;\n        this.pauseOnFocus = config.pauseOnFocus;\n        this.showNavigationArrows = config.showNavigationArrows;\n        this.showNavigationIndicators = config.showNavigationIndicators;\n    }\n    /**\n     * Time in milliseconds before the next slide is shown.\n     */\n    set interval(value) {\n        this._interval$.next(value);\n    }\n    get interval() { return this._interval$.value; }\n    /**\n     * If `true`, will 'wrap' the carousel by switching from the last slide back to the first.\n     */\n    set wrap(value) {\n        this._wrap$.next(value);\n    }\n    get wrap() { return this._wrap$.value; }\n    /**\n     * If `true`, will pause slide switching when mouse cursor hovers the slide.\n     *\n     * @since 2.2.0\n     */\n    set pauseOnHover(value) {\n        this._pauseOnHover$.next(value);\n    }\n    get pauseOnHover() { return this._pauseOnHover$.value; }\n    /**\n     * If `true`, will pause slide switching when the focus is inside the carousel.\n     */\n    set pauseOnFocus(value) {\n        this._pauseOnFocus$.next(value);\n    }\n    get pauseOnFocus() { return this._pauseOnFocus$.value; }\n    set mouseHover(value) { this._mouseHover$.next(value); }\n    get mouseHover() { return this._mouseHover$.value; }\n    set focused(value) { this._focused$.next(value); }\n    get focused() { return this._focused$.value; }\n    arrowLeft() {\n        this.focus();\n        this.prev(NgbSlideEventSource.ARROW_LEFT);\n    }\n    arrowRight() {\n        this.focus();\n        this.next(NgbSlideEventSource.ARROW_RIGHT);\n    }\n    ngAfterContentInit() {\n        // setInterval() doesn't play well with SSR and protractor,\n        // so we should run it in the browser and outside Angular\n        if (isPlatformBrowser(this._platformId)) {\n            this._ngZone.runOutsideAngular(() => {\n                const hasNextSlide$ = combineLatest([\n                    this.slide.pipe(map(slideEvent => slideEvent.current), startWith(this.activeId)),\n                    this._wrap$, this.slides.changes.pipe(startWith(null))\n                ])\n                    .pipe(map(([currentSlideId, wrap]) => {\n                    const slideArr = this.slides.toArray();\n                    const currentSlideIdx = this._getSlideIdxById(currentSlideId);\n                    return wrap ? slideArr.length > 1 : currentSlideIdx < slideArr.length - 1;\n                }), distinctUntilChanged());\n                combineLatest([\n                    this._pause$, this._pauseOnHover$, this._mouseHover$, this._pauseOnFocus$, this._focused$, this._interval$,\n                    hasNextSlide$\n                ])\n                    .pipe(map(([pause, pauseOnHover, mouseHover, pauseOnFocus, focused, interval, hasNextSlide]) => ((pause || (pauseOnHover && mouseHover) || (pauseOnFocus && focused) || !hasNextSlide) ?\n                    0 :\n                    interval)), distinctUntilChanged(), switchMap(interval => interval > 0 ? timer(interval, interval) : NEVER), takeUntil(this._destroy$))\n                    .subscribe(() => this._ngZone.run(() => this.next(NgbSlideEventSource.TIMER)));\n            });\n        }\n        this.slides.changes.pipe(takeUntil(this._destroy$)).subscribe(() => {\n            var _a;\n            (_a = this._transitionIds) === null || _a === void 0 ? void 0 : _a.forEach(id => ngbCompleteTransition(this._getSlideElement(id)));\n            this._transitionIds = null;\n            this._cd.markForCheck();\n            // The following code need to be done asynchronously, after the dom becomes stable,\n            // otherwise all changes will be undone.\n            this._ngZone.onStable.pipe(take(1)).subscribe(() => {\n                for (const { id } of this.slides) {\n                    const element = this._getSlideElement(id);\n                    if (id === this.activeId) {\n                        element.classList.add('active');\n                    }\n                    else {\n                        element.classList.remove('active');\n                    }\n                }\n            });\n        });\n    }\n    ngAfterContentChecked() {\n        let activeSlide = this._getSlideById(this.activeId);\n        this.activeId = activeSlide ? activeSlide.id : (this.slides.length ? this.slides.first.id : '');\n    }\n    ngAfterViewInit() {\n        // Initialize the 'active' class (not managed by the template)\n        if (this.activeId) {\n            const element = this._getSlideElement(this.activeId);\n            if (element) {\n                element.classList.add('active');\n            }\n        }\n    }\n    ngOnDestroy() { this._destroy$.next(); }\n    /**\n     * Navigates to a slide with the specified identifier.\n     */\n    select(slideId, source) {\n        this._cycleToSelected(slideId, this._getSlideEventDirection(this.activeId, slideId), source);\n    }\n    /**\n     * Navigates to the previous slide.\n     */\n    prev(source) {\n        this._cycleToSelected(this._getPrevSlide(this.activeId), NgbSlideEventDirection.END, source);\n    }\n    /**\n     * Navigates to the next slide.\n     */\n    next(source) {\n        this._cycleToSelected(this._getNextSlide(this.activeId), NgbSlideEventDirection.START, source);\n    }\n    /**\n     * Pauses cycling through the slides.\n     */\n    pause() { this._pause$.next(true); }\n    /**\n     * Restarts cycling through the slides from start to end.\n     */\n    cycle() { this._pause$.next(false); }\n    /**\n     * Set the focus on the carousel.\n     */\n    focus() { this._container.nativeElement.focus(); }\n    _cycleToSelected(slideIdx, direction, source) {\n        const transitionIds = this._transitionIds;\n        if (transitionIds && (transitionIds[0] !== slideIdx || transitionIds[1] !== this.activeId)) {\n            // Revert prevented\n            return;\n        }\n        let selectedSlide = this._getSlideById(slideIdx);\n        if (selectedSlide && selectedSlide.id !== this.activeId) {\n            this._transitionIds = [this.activeId, slideIdx];\n            this.slide.emit({ prev: this.activeId, current: selectedSlide.id, direction: direction, paused: this._pause$.value, source });\n            const options = {\n                animation: this.animation,\n                runningTransition: 'stop',\n                context: { direction },\n            };\n            const transitions = [];\n            const activeSlide = this._getSlideById(this.activeId);\n            if (activeSlide) {\n                const activeSlideTransition = ngbRunTransition(this._ngZone, this._getSlideElement(activeSlide.id), ngbCarouselTransitionOut, options);\n                activeSlideTransition.subscribe(() => { activeSlide.slid.emit({ isShown: false, direction, source }); });\n                transitions.push(activeSlideTransition);\n            }\n            const previousId = this.activeId;\n            this.activeId = selectedSlide.id;\n            const nextSlide = this._getSlideById(this.activeId);\n            const transition = ngbRunTransition(this._ngZone, this._getSlideElement(selectedSlide.id), ngbCarouselTransitionIn, options);\n            transition.subscribe(() => { nextSlide === null || nextSlide === void 0 ? void 0 : nextSlide.slid.emit({ isShown: true, direction, source }); });\n            transitions.push(transition);\n            zip(...transitions).pipe(take(1)).subscribe(() => {\n                this._transitionIds = null;\n                this.slid.emit({ prev: previousId, current: selectedSlide.id, direction: direction, paused: this._pause$.value, source });\n            });\n        }\n        // we get here after the interval fires or any external API call like next(), prev() or select()\n        this._cd.markForCheck();\n    }\n    _getSlideEventDirection(currentActiveSlideId, nextActiveSlideId) {\n        const currentActiveSlideIdx = this._getSlideIdxById(currentActiveSlideId);\n        const nextActiveSlideIdx = this._getSlideIdxById(nextActiveSlideId);\n        return currentActiveSlideIdx > nextActiveSlideIdx ? NgbSlideEventDirection.END : NgbSlideEventDirection.START;\n    }\n    _getSlideById(slideId) {\n        return this.slides.find(slide => slide.id === slideId) || null;\n    }\n    _getSlideIdxById(slideId) {\n        const slide = this._getSlideById(slideId);\n        return slide != null ? this.slides.toArray().indexOf(slide) : -1;\n    }\n    _getNextSlide(currentSlideId) {\n        const slideArr = this.slides.toArray();\n        const currentSlideIdx = this._getSlideIdxById(currentSlideId);\n        const isLastSlide = currentSlideIdx === slideArr.length - 1;\n        return isLastSlide ? (this.wrap ? slideArr[0].id : slideArr[slideArr.length - 1].id) :\n            slideArr[currentSlideIdx + 1].id;\n    }\n    _getPrevSlide(currentSlideId) {\n        const slideArr = this.slides.toArray();\n        const currentSlideIdx = this._getSlideIdxById(currentSlideId);\n        const isFirstSlide = currentSlideIdx === 0;\n        return isFirstSlide ? (this.wrap ? slideArr[slideArr.length - 1].id : slideArr[0].id) :\n            slideArr[currentSlideIdx - 1].id;\n    }\n    _getSlideElement(slideId) {\n        return this._container.nativeElement.querySelector(`#slide-${slideId}`);\n    }\n}\nNgbCarousel.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbCarousel, deps: [{ token: NgbCarouselConfig }, { token: PLATFORM_ID }, { token: i0.NgZone }, { token: i0.ChangeDetectorRef }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });\nNgbCarousel.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: NgbCarousel, selector: \"ngb-carousel\", inputs: { animation: \"animation\", activeId: \"activeId\", interval: \"interval\", wrap: \"wrap\", keyboard: \"keyboard\", pauseOnHover: \"pauseOnHover\", pauseOnFocus: \"pauseOnFocus\", showNavigationArrows: \"showNavigationArrows\", showNavigationIndicators: \"showNavigationIndicators\" }, outputs: { slide: \"slide\", slid: \"slid\" }, host: { attributes: { \"tabIndex\": \"0\" }, listeners: { \"keydown.arrowLeft\": \"keyboard && arrowLeft()\", \"keydown.arrowRight\": \"keyboard && arrowRight()\", \"mouseenter\": \"mouseHover = true\", \"mouseleave\": \"mouseHover = false\", \"focusin\": \"focused = true\", \"focusout\": \"focused = false\" }, properties: { \"style.display\": \"\\\"block\\\"\", \"attr.aria-activedescendant\": \"'slide-' + activeId\" }, classAttribute: \"carousel slide\" }, queries: [{ propertyName: \"slides\", predicate: NgbSlide }], exportAs: [\"ngbCarousel\"], ngImport: i0, template: `\n    <div class=\"carousel-indicators\" [class.visually-hidden]=\"!showNavigationIndicators\" role=\"tablist\">\n      <button type=\"button\" data-bs-target *ngFor=\"let slide of slides\" [class.active]=\"slide.id === activeId\"\n          role=\"tab\" [attr.aria-labelledby]=\"'slide-' + slide.id\" [attr.aria-controls]=\"'slide-' + slide.id\"\n          [attr.aria-selected]=\"slide.id === activeId\"\n          (click)=\"focus();select(slide.id, NgbSlideEventSource.INDICATOR);\"></button>\n    </div>\n    <div class=\"carousel-inner\">\n      <div *ngFor=\"let slide of slides; index as i; count as c\" class=\"carousel-item\" [id]=\"'slide-' + slide.id\" role=\"tabpanel\">\n        <span class=\"visually-hidden\" i18n=\"Currently selected slide number read by screen reader@@ngb.carousel.slide-number\">\n          Slide {{i + 1}} of {{c}}\n        </span>\n        <ng-template [ngTemplateOutlet]=\"slide.tplRef\"></ng-template>\n      </div>\n    </div>\n    <button class=\"carousel-control-prev\" type=\"button\" (click)=\"arrowLeft()\" *ngIf=\"showNavigationArrows\">\n      <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\n      <span class=\"visually-hidden\" i18n=\"@@ngb.carousel.previous\">Previous</span>\n    </button>\n    <button class=\"carousel-control-next\" type=\"button\" (click)=\"arrowRight()\" *ngIf=\"showNavigationArrows\">\n      <span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\n      <span class=\"visually-hidden\" i18n=\"@@ngb.carousel.next\">Next</span>\n    </button>\n  `, isInline: true, directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i2.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }, { type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbCarousel, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ngb-carousel',\n                    exportAs: 'ngbCarousel',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    host: {\n                        'class': 'carousel slide',\n                        '[style.display]': '\"block\"',\n                        'tabIndex': '0',\n                        '(keydown.arrowLeft)': 'keyboard && arrowLeft()',\n                        '(keydown.arrowRight)': 'keyboard && arrowRight()',\n                        '(mouseenter)': 'mouseHover = true',\n                        '(mouseleave)': 'mouseHover = false',\n                        '(focusin)': 'focused = true',\n                        '(focusout)': 'focused = false',\n                        '[attr.aria-activedescendant]': `'slide-' + activeId`\n                    },\n                    template: `\n    <div class=\"carousel-indicators\" [class.visually-hidden]=\"!showNavigationIndicators\" role=\"tablist\">\n      <button type=\"button\" data-bs-target *ngFor=\"let slide of slides\" [class.active]=\"slide.id === activeId\"\n          role=\"tab\" [attr.aria-labelledby]=\"'slide-' + slide.id\" [attr.aria-controls]=\"'slide-' + slide.id\"\n          [attr.aria-selected]=\"slide.id === activeId\"\n          (click)=\"focus();select(slide.id, NgbSlideEventSource.INDICATOR);\"></button>\n    </div>\n    <div class=\"carousel-inner\">\n      <div *ngFor=\"let slide of slides; index as i; count as c\" class=\"carousel-item\" [id]=\"'slide-' + slide.id\" role=\"tabpanel\">\n        <span class=\"visually-hidden\" i18n=\"Currently selected slide number read by screen reader@@ngb.carousel.slide-number\">\n          Slide {{i + 1}} of {{c}}\n        </span>\n        <ng-template [ngTemplateOutlet]=\"slide.tplRef\"></ng-template>\n      </div>\n    </div>\n    <button class=\"carousel-control-prev\" type=\"button\" (click)=\"arrowLeft()\" *ngIf=\"showNavigationArrows\">\n      <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\n      <span class=\"visually-hidden\" i18n=\"@@ngb.carousel.previous\">Previous</span>\n    </button>\n    <button class=\"carousel-control-next\" type=\"button\" (click)=\"arrowRight()\" *ngIf=\"showNavigationArrows\">\n      <span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\n      <span class=\"visually-hidden\" i18n=\"@@ngb.carousel.next\">Next</span>\n    </button>\n  `\n                }]\n        }], ctorParameters: function () {\n        return [{ type: NgbCarouselConfig }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [PLATFORM_ID]\n                    }] }, { type: i0.NgZone }, { type: i0.ChangeDetectorRef }, { type: i0.ElementRef }];\n    }, propDecorators: { slides: [{\n                type: ContentChildren,\n                args: [NgbSlide]\n            }], animation: [{\n                type: Input\n            }], activeId: [{\n                type: Input\n            }], interval: [{\n                type: Input\n            }], wrap: [{\n                type: Input\n            }], keyboard: [{\n                type: Input\n            }], pauseOnHover: [{\n                type: Input\n            }], pauseOnFocus: [{\n                type: Input\n            }], showNavigationArrows: [{\n                type: Input\n            }], showNavigationIndicators: [{\n                type: Input\n            }], slide: [{\n                type: Output\n            }], slid: [{\n                type: Output\n            }] } });\nvar NgbSlideEventSource;\n(function (NgbSlideEventSource) {\n    NgbSlideEventSource[\"TIMER\"] = \"timer\";\n    NgbSlideEventSource[\"ARROW_LEFT\"] = \"arrowLeft\";\n    NgbSlideEventSource[\"ARROW_RIGHT\"] = \"arrowRight\";\n    NgbSlideEventSource[\"INDICATOR\"] = \"indicator\";\n})(NgbSlideEventSource || (NgbSlideEventSource = {}));\nconst NGB_CAROUSEL_DIRECTIVES = [NgbCarousel, NgbSlide];\n\nclass NgbCarouselModule {\n}\nNgbCarouselModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbCarouselModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nNgbCarouselModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbCarouselModule, declarations: [NgbCarousel, NgbSlide], imports: [CommonModule], exports: [NgbCarousel, NgbSlide] });\nNgbCarouselModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbCarouselModule, imports: [[CommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbCarouselModule, decorators: [{\n            type: NgModule,\n            args: [{ declarations: NGB_CAROUSEL_DIRECTIVES, exports: NGB_CAROUSEL_DIRECTIVES, imports: [CommonModule] }]\n        }] });\n\n/**\n * A configuration service for the [NgbCollapse](#/components/collapse/api#NgbCollapse) component.\n *\n * You can inject this service, typically in your root component, and customize its properties\n * to provide default values for all collapses used in the application.\n */\nclass NgbCollapseConfig {\n    constructor(_ngbConfig) {\n        this._ngbConfig = _ngbConfig;\n    }\n    get animation() { return (this._animation === undefined) ? this._ngbConfig.animation : this._animation; }\n    set animation(animation) { this._animation = animation; }\n}\nNgbCollapseConfig.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbCollapseConfig, deps: [{ token: NgbConfig }], target: i0.ɵɵFactoryTarget.Injectable });\nNgbCollapseConfig.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbCollapseConfig, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbCollapseConfig, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: NgbConfig }]; } });\n\n/**\n * A directive to provide a simple way of hiding and showing elements on the page.\n */\nclass NgbCollapse {\n    constructor(_element, config, _zone) {\n        this._element = _element;\n        this._zone = _zone;\n        /**\n         * If `true`, will collapse the element or show it otherwise.\n         */\n        this.collapsed = false;\n        this.ngbCollapseChange = new EventEmitter();\n        /**\n         * An event emitted when the collapse element is shown, after the transition. It has no payload.\n         *\n         * @since 8.0.0\n         */\n        this.shown = new EventEmitter();\n        /**\n         * An event emitted when the collapse element is hidden, after the transition. It has no payload.\n         *\n         * @since 8.0.0\n         */\n        this.hidden = new EventEmitter();\n        this.animation = config.animation;\n    }\n    ngOnInit() { this._runTransition(this.collapsed, false); }\n    ngOnChanges({ collapsed }) {\n        if (!collapsed.firstChange) {\n            this._runTransitionWithEvents(this.collapsed, this.animation);\n        }\n    }\n    /**\n     * Triggers collapsing programmatically.\n     *\n     * If there is a collapsing transition running already, it will be reversed.\n     * If the animations are turned off this happens synchronously.\n     *\n     * @since 8.0.0\n     */\n    toggle(open = this.collapsed) {\n        this.collapsed = !open;\n        this.ngbCollapseChange.next(this.collapsed);\n        this._runTransitionWithEvents(this.collapsed, this.animation);\n    }\n    _runTransition(collapsed, animation) {\n        return ngbRunTransition(this._zone, this._element.nativeElement, ngbCollapsingTransition, { animation, runningTransition: 'stop', context: { direction: collapsed ? 'hide' : 'show' } });\n    }\n    _runTransitionWithEvents(collapsed, animation) {\n        this._runTransition(collapsed, animation).subscribe(() => {\n            if (collapsed) {\n                this.hidden.emit();\n            }\n            else {\n                this.shown.emit();\n            }\n        });\n    }\n}\nNgbCollapse.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbCollapse, deps: [{ token: i0.ElementRef }, { token: NgbCollapseConfig }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive });\nNgbCollapse.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.3\", type: NgbCollapse, selector: \"[ngbCollapse]\", inputs: { animation: \"animation\", collapsed: [\"ngbCollapse\", \"collapsed\"] }, outputs: { ngbCollapseChange: \"ngbCollapseChange\", shown: \"shown\", hidden: \"hidden\" }, exportAs: [\"ngbCollapse\"], usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbCollapse, decorators: [{\n            type: Directive,\n            args: [{ selector: '[ngbCollapse]', exportAs: 'ngbCollapse' }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: NgbCollapseConfig }, { type: i0.NgZone }]; }, propDecorators: { animation: [{\n                type: Input\n            }], collapsed: [{\n                type: Input,\n                args: ['ngbCollapse']\n            }], ngbCollapseChange: [{\n                type: Output\n            }], shown: [{\n                type: Output\n            }], hidden: [{\n                type: Output\n            }] } });\n\nclass NgbCollapseModule {\n}\nNgbCollapseModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbCollapseModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nNgbCollapseModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbCollapseModule, declarations: [NgbCollapse], exports: [NgbCollapse] });\nNgbCollapseModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbCollapseModule });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbCollapseModule, decorators: [{\n            type: NgModule,\n            args: [{ declarations: [NgbCollapse], exports: [NgbCollapse] }]\n        }] });\n\n/**\n * A simple class that represents a date that datepicker also uses internally.\n *\n * It is the implementation of the `NgbDateStruct` interface that adds some convenience methods,\n * like `.equals()`, `.before()`, etc.\n *\n * All datepicker APIs consume `NgbDateStruct`, but return `NgbDate`.\n *\n * In many cases it is simpler to manipulate these objects together with\n * [`NgbCalendar`](#/components/datepicker/api#NgbCalendar) than native JS Dates.\n *\n * See the [date format overview](#/components/datepicker/overview#date-model) for more details.\n *\n * @since 3.0.0\n */\nclass NgbDate {\n    constructor(year, month, day) {\n        this.year = isInteger(year) ? year : null;\n        this.month = isInteger(month) ? month : null;\n        this.day = isInteger(day) ? day : null;\n    }\n    /**\n     * A **static method** that creates a new date object from the `NgbDateStruct`,\n     *\n     * ex. `NgbDate.from({year: 2000, month: 5, day: 1})`.\n     *\n     * If the `date` is already of `NgbDate` type, the method will return the same object.\n     */\n    static from(date) {\n        if (date instanceof NgbDate) {\n            return date;\n        }\n        return date ? new NgbDate(date.year, date.month, date.day) : null;\n    }\n    /**\n     * Checks if the current date is equal to another date.\n     */\n    equals(other) {\n        return other != null && this.year === other.year && this.month === other.month && this.day === other.day;\n    }\n    /**\n     * Checks if the current date is before another date.\n     */\n    before(other) {\n        if (!other) {\n            return false;\n        }\n        if (this.year === other.year) {\n            if (this.month === other.month) {\n                return this.day === other.day ? false : this.day < other.day;\n            }\n            else {\n                return this.month < other.month;\n            }\n        }\n        else {\n            return this.year < other.year;\n        }\n    }\n    /**\n     * Checks if the current date is after another date.\n     */\n    after(other) {\n        if (!other) {\n            return false;\n        }\n        if (this.year === other.year) {\n            if (this.month === other.month) {\n                return this.day === other.day ? false : this.day > other.day;\n            }\n            else {\n                return this.month > other.month;\n            }\n        }\n        else {\n            return this.year > other.year;\n        }\n    }\n}\n\nfunction isChangedDate(prev, next) {\n    return !dateComparator(prev, next);\n}\nfunction isChangedMonth(prev, next) {\n    return !prev && !next ? false : !prev || !next ? true : prev.year !== next.year || prev.month !== next.month;\n}\nfunction dateComparator(prev, next) {\n    return (!prev && !next) || (!!prev && !!next && prev.equals(next));\n}\nfunction checkMinBeforeMax(minDate, maxDate) {\n    if (maxDate && minDate && maxDate.before(minDate)) {\n        throw new Error(`'maxDate' ${maxDate} should be greater than 'minDate' ${minDate}`);\n    }\n}\nfunction checkDateInRange(date, minDate, maxDate) {\n    if (date && minDate && date.before(minDate)) {\n        return minDate;\n    }\n    if (date && maxDate && date.after(maxDate)) {\n        return maxDate;\n    }\n    return date || null;\n}\nfunction isDateSelectable(date, state) {\n    const { minDate, maxDate, disabled, markDisabled } = state;\n    // clang-format off\n    return !(date === null ||\n        date === undefined ||\n        disabled ||\n        (markDisabled && markDisabled(date, { year: date.year, month: date.month })) ||\n        (minDate && date.before(minDate)) ||\n        (maxDate && date.after(maxDate)));\n    // clang-format on\n}\nfunction generateSelectBoxMonths(calendar, date, minDate, maxDate) {\n    if (!date) {\n        return [];\n    }\n    let months = calendar.getMonths(date.year);\n    if (minDate && date.year === minDate.year) {\n        const index = months.findIndex(month => month === minDate.month);\n        months = months.slice(index);\n    }\n    if (maxDate && date.year === maxDate.year) {\n        const index = months.findIndex(month => month === maxDate.month);\n        months = months.slice(0, index + 1);\n    }\n    return months;\n}\nfunction generateSelectBoxYears(date, minDate, maxDate) {\n    if (!date) {\n        return [];\n    }\n    const start = minDate ? Math.max(minDate.year, date.year - 500) : date.year - 10;\n    const end = maxDate ? Math.min(maxDate.year, date.year + 500) : date.year + 10;\n    const length = end - start + 1;\n    const numbers = Array(length);\n    for (let i = 0; i < length; i++) {\n        numbers[i] = start + i;\n    }\n    return numbers;\n}\nfunction nextMonthDisabled(calendar, date, maxDate) {\n    const nextDate = Object.assign(calendar.getNext(date, 'm'), { day: 1 });\n    return maxDate != null && nextDate.after(maxDate);\n}\nfunction prevMonthDisabled(calendar, date, minDate) {\n    const prevDate = Object.assign(calendar.getPrev(date, 'm'), { day: 1 });\n    return minDate != null && (prevDate.year === minDate.year && prevDate.month < minDate.month ||\n        prevDate.year < minDate.year && minDate.month === 1);\n}\nfunction buildMonths(calendar, date, state, i18n, force) {\n    const { displayMonths, months } = state;\n    // move old months to a temporary array\n    const monthsToReuse = months.splice(0, months.length);\n    // generate new first dates, nullify or reuse months\n    const firstDates = Array.from({ length: displayMonths }, (_, i) => {\n        const firstDate = Object.assign(calendar.getNext(date, 'm', i), { day: 1 });\n        months[i] = null;\n        if (!force) {\n            const reusedIndex = monthsToReuse.findIndex(month => month.firstDate.equals(firstDate));\n            // move reused month back to months\n            if (reusedIndex !== -1) {\n                months[i] = monthsToReuse.splice(reusedIndex, 1)[0];\n            }\n        }\n        return firstDate;\n    });\n    // rebuild nullified months\n    firstDates.forEach((firstDate, i) => {\n        if (months[i] === null) {\n            months[i] = buildMonth(calendar, firstDate, state, i18n, monthsToReuse.shift() || {});\n        }\n    });\n    return months;\n}\nfunction buildMonth(calendar, date, state, i18n, month = {}) {\n    const { dayTemplateData, minDate, maxDate, firstDayOfWeek, markDisabled, outsideDays, weekdayWidth, weekdaysVisible } = state;\n    const calendarToday = calendar.getToday();\n    month.firstDate = null;\n    month.lastDate = null;\n    month.number = date.month;\n    month.year = date.year;\n    month.weeks = month.weeks || [];\n    month.weekdays = month.weekdays || [];\n    date = getFirstViewDate(calendar, date, firstDayOfWeek);\n    // clearing weekdays, if not visible\n    if (!weekdaysVisible) {\n        month.weekdays.length = 0;\n    }\n    // month has weeks\n    for (let week = 0; week < calendar.getWeeksPerMonth(); week++) {\n        let weekObject = month.weeks[week];\n        if (!weekObject) {\n            weekObject = month.weeks[week] = { number: 0, days: [], collapsed: true };\n        }\n        const days = weekObject.days;\n        // week has days\n        for (let day = 0; day < calendar.getDaysPerWeek(); day++) {\n            if (week === 0 && weekdaysVisible) {\n                month.weekdays[day] = i18n.getWeekdayLabel(calendar.getWeekday(date), weekdayWidth);\n            }\n            const newDate = new NgbDate(date.year, date.month, date.day);\n            const nextDate = calendar.getNext(newDate);\n            const ariaLabel = i18n.getDayAriaLabel(newDate);\n            // marking date as disabled\n            let disabled = !!((minDate && newDate.before(minDate)) || (maxDate && newDate.after(maxDate)));\n            if (!disabled && markDisabled) {\n                disabled = markDisabled(newDate, { month: month.number, year: month.year });\n            }\n            // today\n            let today = newDate.equals(calendarToday);\n            // adding user-provided data to the context\n            let contextUserData = dayTemplateData ? dayTemplateData(newDate, { month: month.number, year: month.year }) : undefined;\n            // saving first date of the month\n            if (month.firstDate === null && newDate.month === month.number) {\n                month.firstDate = newDate;\n            }\n            // saving last date of the month\n            if (newDate.month === month.number && nextDate.month !== month.number) {\n                month.lastDate = newDate;\n            }\n            let dayObject = days[day];\n            if (!dayObject) {\n                dayObject = days[day] = {};\n            }\n            dayObject.date = newDate;\n            dayObject.context = Object.assign(dayObject.context || {}, {\n                $implicit: newDate,\n                date: newDate,\n                data: contextUserData,\n                currentMonth: month.number,\n                currentYear: month.year, disabled,\n                focused: false,\n                selected: false, today\n            });\n            dayObject.tabindex = -1;\n            dayObject.ariaLabel = ariaLabel;\n            dayObject.hidden = false;\n            date = nextDate;\n        }\n        weekObject.number = calendar.getWeekNumber(days.map(day => day.date), firstDayOfWeek);\n        // marking week as collapsed\n        weekObject.collapsed = outsideDays === 'collapsed' && days[0].date.month !== month.number &&\n            days[days.length - 1].date.month !== month.number;\n    }\n    return month;\n}\nfunction getFirstViewDate(calendar, date, firstDayOfWeek) {\n    const daysPerWeek = calendar.getDaysPerWeek();\n    const firstMonthDate = new NgbDate(date.year, date.month, 1);\n    const dayOfWeek = calendar.getWeekday(firstMonthDate) % daysPerWeek;\n    return calendar.getPrev(firstMonthDate, 'd', (daysPerWeek + dayOfWeek - firstDayOfWeek) % daysPerWeek);\n}\n\nfunction fromJSDate(jsDate) {\n    return new NgbDate(jsDate.getFullYear(), jsDate.getMonth() + 1, jsDate.getDate());\n}\nfunction toJSDate(date) {\n    const jsDate = new Date(date.year, date.month - 1, date.day, 12);\n    // this is done avoid 30 -> 1930 conversion\n    if (!isNaN(jsDate.getTime())) {\n        jsDate.setFullYear(date.year);\n    }\n    return jsDate;\n}\nfunction NGB_DATEPICKER_CALENDAR_FACTORY() {\n    return new NgbCalendarGregorian();\n}\n/**\n * A service that represents the calendar used by the datepicker.\n *\n * The default implementation uses the Gregorian calendar. You can inject it in your own\n * implementations if necessary to simplify `NgbDate` calculations.\n */\nclass NgbCalendar {\n}\nNgbCalendar.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbCalendar, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nNgbCalendar.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbCalendar, providedIn: 'root', useFactory: NGB_DATEPICKER_CALENDAR_FACTORY });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbCalendar, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root', useFactory: NGB_DATEPICKER_CALENDAR_FACTORY }]\n        }] });\nclass NgbCalendarGregorian extends NgbCalendar {\n    getDaysPerWeek() { return 7; }\n    getMonths() { return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]; }\n    getWeeksPerMonth() { return 6; }\n    getNext(date, period = 'd', number = 1) {\n        let jsDate = toJSDate(date);\n        let checkMonth = true;\n        let expectedMonth = jsDate.getMonth();\n        switch (period) {\n            case 'y':\n                jsDate.setFullYear(jsDate.getFullYear() + number);\n                break;\n            case 'm':\n                expectedMonth += number;\n                jsDate.setMonth(expectedMonth);\n                expectedMonth = expectedMonth % 12;\n                if (expectedMonth < 0) {\n                    expectedMonth = expectedMonth + 12;\n                }\n                break;\n            case 'd':\n                jsDate.setDate(jsDate.getDate() + number);\n                checkMonth = false;\n                break;\n            default:\n                return date;\n        }\n        if (checkMonth && jsDate.getMonth() !== expectedMonth) {\n            // this means the destination month has less days than the initial month\n            // let's go back to the end of the previous month:\n            jsDate.setDate(0);\n        }\n        return fromJSDate(jsDate);\n    }\n    getPrev(date, period = 'd', number = 1) { return this.getNext(date, period, -number); }\n    getWeekday(date) {\n        let jsDate = toJSDate(date);\n        let day = jsDate.getDay();\n        // in JS Date Sun=0, in ISO 8601 Sun=7\n        return day === 0 ? 7 : day;\n    }\n    getWeekNumber(week, firstDayOfWeek) {\n        // in JS Date Sun=0, in ISO 8601 Sun=7\n        if (firstDayOfWeek === 7) {\n            firstDayOfWeek = 0;\n        }\n        const thursdayIndex = (4 + 7 - firstDayOfWeek) % 7;\n        let date = week[thursdayIndex];\n        const jsDate = toJSDate(date);\n        jsDate.setDate(jsDate.getDate() + 4 - (jsDate.getDay() || 7)); // Thursday\n        const time = jsDate.getTime();\n        jsDate.setMonth(0); // Compare with Jan 1\n        jsDate.setDate(1);\n        return Math.floor(Math.round((time - jsDate.getTime()) / 86400000) / 7) + 1;\n    }\n    getToday() { return fromJSDate(new Date()); }\n    isValid(date) {\n        if (!date || !isInteger(date.year) || !isInteger(date.month) || !isInteger(date.day)) {\n            return false;\n        }\n        // year 0 doesn't exist in Gregorian calendar\n        if (date.year === 0) {\n            return false;\n        }\n        const jsDate = toJSDate(date);\n        return !isNaN(jsDate.getTime()) && jsDate.getFullYear() === date.year && jsDate.getMonth() + 1 === date.month &&\n            jsDate.getDate() === date.day;\n    }\n}\nNgbCalendarGregorian.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbCalendarGregorian, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\nNgbCalendarGregorian.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbCalendarGregorian });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbCalendarGregorian, decorators: [{\n            type: Injectable\n        }] });\n\nfunction NGB_DATEPICKER_18N_FACTORY(locale) {\n    return new NgbDatepickerI18nDefault(locale);\n}\n/**\n * A service supplying i18n data to the datepicker component.\n *\n * The default implementation of this service uses the Angular locale and registered locale data for\n * weekdays and month names (as explained in the Angular i18n guide).\n *\n * It also provides a way to i18n data that depends on calendar calculations, like aria labels, day, week and year\n * numerals. For other static labels the datepicker uses the default Angular i18n.\n *\n * See the [i18n demo](#/components/datepicker/examples#i18n) and\n * [Hebrew calendar demo](#/components/datepicker/calendars#hebrew) on how to extend this class and define\n * a custom provider for i18n.\n */\nclass NgbDatepickerI18n {\n    /**\n     * Returns the text label to display above the day view.\n     *\n     * @since 9.1.0\n     */\n    getMonthLabel(date) {\n        return `${this.getMonthFullName(date.month, date.year)} ${this.getYearNumerals(date.year)}`;\n    }\n    /**\n     * Returns the textual representation of a day that is rendered in a day cell.\n     *\n     * @since 3.0.0\n     */\n    getDayNumerals(date) { return `${date.day}`; }\n    /**\n     * Returns the textual representation of a week number rendered by datepicker.\n     *\n     * @since 3.0.0\n     */\n    getWeekNumerals(weekNumber) { return `${weekNumber}`; }\n    /**\n     * Returns the textual representation of a year that is rendered in the datepicker year select box.\n     *\n     * @since 3.0.0\n     */\n    getYearNumerals(year) { return `${year}`; }\n    /**\n     * Returns the week label to display in the heading of the month view.\n     *\n     * @since 9.1.0\n     */\n    getWeekLabel() { return ''; }\n}\nNgbDatepickerI18n.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbDatepickerI18n, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nNgbDatepickerI18n.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbDatepickerI18n, providedIn: 'root', useFactory: NGB_DATEPICKER_18N_FACTORY, deps: [{ token: LOCALE_ID }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbDatepickerI18n, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root', useFactory: NGB_DATEPICKER_18N_FACTORY, deps: [LOCALE_ID] }]\n        }] });\n/**\n * A service providing default implementation for the datepicker i18n.\n * It can be used as a base implementation if necessary.\n *\n * @since 9.1.0\n */\nclass NgbDatepickerI18nDefault extends NgbDatepickerI18n {\n    constructor(_locale) {\n        super();\n        this._locale = _locale;\n        this._monthsShort = getLocaleMonthNames(_locale, FormStyle.Standalone, TranslationWidth.Abbreviated);\n        this._monthsFull = getLocaleMonthNames(_locale, FormStyle.Standalone, TranslationWidth.Wide);\n    }\n    getWeekdayLabel(weekday, width) {\n        const weekdaysStartingOnSunday = getLocaleDayNames(this._locale, FormStyle.Standalone, width === undefined ? TranslationWidth.Short : width);\n        const weekdays = weekdaysStartingOnSunday.map((day, index) => weekdaysStartingOnSunday[(index + 1) % 7]);\n        return weekdays[weekday - 1] || '';\n    }\n    getMonthShortName(month) { return this._monthsShort[month - 1] || ''; }\n    getMonthFullName(month) { return this._monthsFull[month - 1] || ''; }\n    getDayAriaLabel(date) {\n        const jsDate = new Date(date.year, date.month - 1, date.day);\n        return formatDate(jsDate, 'fullDate', this._locale);\n    }\n}\nNgbDatepickerI18nDefault.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbDatepickerI18nDefault, deps: [{ token: LOCALE_ID }], target: i0.ɵɵFactoryTarget.Injectable });\nNgbDatepickerI18nDefault.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbDatepickerI18nDefault });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbDatepickerI18nDefault, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () {\n        return [{ type: undefined, decorators: [{\n                        type: Inject,\n                        args: [LOCALE_ID]\n                    }] }];\n    } });\n\nclass NgbDatepickerService {\n    constructor(_calendar, _i18n) {\n        this._calendar = _calendar;\n        this._i18n = _i18n;\n        this._VALIDATORS = {\n            dayTemplateData: (dayTemplateData) => {\n                if (this._state.dayTemplateData !== dayTemplateData) {\n                    return { dayTemplateData };\n                }\n            },\n            displayMonths: (displayMonths) => {\n                displayMonths = toInteger(displayMonths);\n                if (isInteger(displayMonths) && displayMonths > 0 && this._state.displayMonths !== displayMonths) {\n                    return { displayMonths };\n                }\n            },\n            disabled: (disabled) => {\n                if (this._state.disabled !== disabled) {\n                    return { disabled };\n                }\n            },\n            firstDayOfWeek: (firstDayOfWeek) => {\n                firstDayOfWeek = toInteger(firstDayOfWeek);\n                if (isInteger(firstDayOfWeek) && firstDayOfWeek >= 0 && this._state.firstDayOfWeek !== firstDayOfWeek) {\n                    return { firstDayOfWeek };\n                }\n            },\n            focusVisible: (focusVisible) => {\n                if (this._state.focusVisible !== focusVisible && !this._state.disabled) {\n                    return { focusVisible };\n                }\n            },\n            markDisabled: (markDisabled) => {\n                if (this._state.markDisabled !== markDisabled) {\n                    return { markDisabled };\n                }\n            },\n            maxDate: (date) => {\n                const maxDate = this.toValidDate(date, null);\n                if (isChangedDate(this._state.maxDate, maxDate)) {\n                    return { maxDate };\n                }\n            },\n            minDate: (date) => {\n                const minDate = this.toValidDate(date, null);\n                if (isChangedDate(this._state.minDate, minDate)) {\n                    return { minDate };\n                }\n            },\n            navigation: (navigation) => {\n                if (this._state.navigation !== navigation) {\n                    return { navigation };\n                }\n            },\n            outsideDays: (outsideDays) => {\n                if (this._state.outsideDays !== outsideDays) {\n                    return { outsideDays };\n                }\n            },\n            weekdays: (weekdays) => {\n                const weekdayWidth = weekdays === true || weekdays === false ? TranslationWidth.Short : weekdays;\n                const weekdaysVisible = weekdays === true || weekdays === false ? weekdays : true;\n                if (this._state.weekdayWidth !== weekdayWidth || this._state.weekdaysVisible !== weekdaysVisible) {\n                    return { weekdayWidth, weekdaysVisible };\n                }\n            }\n        };\n        this._model$ = new Subject();\n        this._dateSelect$ = new Subject();\n        this._state = {\n            dayTemplateData: null,\n            markDisabled: null,\n            maxDate: null,\n            minDate: null,\n            disabled: false,\n            displayMonths: 1,\n            firstDate: null,\n            firstDayOfWeek: 1,\n            lastDate: null,\n            focusDate: null,\n            focusVisible: false,\n            months: [],\n            navigation: 'select',\n            outsideDays: 'visible',\n            prevDisabled: false,\n            nextDisabled: false,\n            selectedDate: null,\n            selectBoxes: { years: [], months: [] },\n            weekdayWidth: TranslationWidth.Short,\n            weekdaysVisible: true\n        };\n    }\n    get model$() { return this._model$.pipe(filter(model => model.months.length > 0)); }\n    get dateSelect$() { return this._dateSelect$.pipe(filter(date => date !== null)); }\n    set(options) {\n        let patch = Object.keys(options)\n            .map(key => this._VALIDATORS[key](options[key]))\n            .reduce((obj, part) => (Object.assign(Object.assign({}, obj), part)), {});\n        if (Object.keys(patch).length > 0) {\n            this._nextState(patch);\n        }\n    }\n    focus(date) {\n        const focusedDate = this.toValidDate(date, null);\n        if (focusedDate != null && !this._state.disabled && isChangedDate(this._state.focusDate, focusedDate)) {\n            this._nextState({ focusDate: date });\n        }\n    }\n    focusSelect() {\n        if (isDateSelectable(this._state.focusDate, this._state)) {\n            this.select(this._state.focusDate, { emitEvent: true });\n        }\n    }\n    open(date) {\n        const firstDate = this.toValidDate(date, this._calendar.getToday());\n        if (firstDate != null && !this._state.disabled &&\n            (!this._state.firstDate || isChangedMonth(this._state.firstDate, firstDate))) {\n            this._nextState({ firstDate });\n        }\n    }\n    select(date, options = {}) {\n        const selectedDate = this.toValidDate(date, null);\n        if (selectedDate != null && !this._state.disabled) {\n            if (isChangedDate(this._state.selectedDate, selectedDate)) {\n                this._nextState({ selectedDate });\n            }\n            if (options.emitEvent && isDateSelectable(selectedDate, this._state)) {\n                this._dateSelect$.next(selectedDate);\n            }\n        }\n    }\n    toValidDate(date, defaultValue) {\n        const ngbDate = NgbDate.from(date);\n        if (defaultValue === undefined) {\n            defaultValue = this._calendar.getToday();\n        }\n        return this._calendar.isValid(ngbDate) ? ngbDate : defaultValue;\n    }\n    getMonth(struct) {\n        for (let month of this._state.months) {\n            if (struct.month === month.number && struct.year === month.year) {\n                return month;\n            }\n        }\n        throw new Error(`month ${struct.month} of year ${struct.year} not found`);\n    }\n    _nextState(patch) {\n        const newState = this._updateState(patch);\n        this._patchContexts(newState);\n        this._state = newState;\n        this._model$.next(this._state);\n    }\n    _patchContexts(state) {\n        const { months, displayMonths, selectedDate, focusDate, focusVisible, disabled, outsideDays } = state;\n        state.months.forEach(month => {\n            month.weeks.forEach(week => {\n                week.days.forEach(day => {\n                    // patch focus flag\n                    if (focusDate) {\n                        day.context.focused = focusDate.equals(day.date) && focusVisible;\n                    }\n                    // calculating tabindex\n                    day.tabindex =\n                        !disabled && focusDate && day.date.equals(focusDate) && focusDate.month === month.number ? 0 : -1;\n                    // override context disabled\n                    if (disabled === true) {\n                        day.context.disabled = true;\n                    }\n                    // patch selection flag\n                    if (selectedDate !== undefined) {\n                        day.context.selected = selectedDate !== null && selectedDate.equals(day.date);\n                    }\n                    // visibility\n                    if (month.number !== day.date.month) {\n                        day.hidden = outsideDays === 'hidden' || outsideDays === 'collapsed' ||\n                            (displayMonths > 1 && day.date.after(months[0].firstDate) &&\n                                day.date.before(months[displayMonths - 1].lastDate));\n                    }\n                });\n            });\n        });\n    }\n    _updateState(patch) {\n        // patching fields\n        const state = Object.assign({}, this._state, patch);\n        let startDate = state.firstDate;\n        // min/max dates changed\n        if ('minDate' in patch || 'maxDate' in patch) {\n            checkMinBeforeMax(state.minDate, state.maxDate);\n            state.focusDate = checkDateInRange(state.focusDate, state.minDate, state.maxDate);\n            state.firstDate = checkDateInRange(state.firstDate, state.minDate, state.maxDate);\n            startDate = state.focusDate;\n        }\n        // disabled\n        if ('disabled' in patch) {\n            state.focusVisible = false;\n        }\n        // initial rebuild via 'select()'\n        if ('selectedDate' in patch && this._state.months.length === 0) {\n            startDate = state.selectedDate;\n        }\n        // terminate early if only focus visibility was changed\n        if ('focusVisible' in patch) {\n            return state;\n        }\n        // focus date changed\n        if ('focusDate' in patch) {\n            state.focusDate = checkDateInRange(state.focusDate, state.minDate, state.maxDate);\n            startDate = state.focusDate;\n            // nothing to rebuild if only focus changed and it is still visible\n            if (state.months.length !== 0 && state.focusDate && !state.focusDate.before(state.firstDate) &&\n                !state.focusDate.after(state.lastDate)) {\n                return state;\n            }\n        }\n        // first date changed\n        if ('firstDate' in patch) {\n            state.firstDate = checkDateInRange(state.firstDate, state.minDate, state.maxDate);\n            startDate = state.firstDate;\n        }\n        // rebuilding months\n        if (startDate) {\n            const forceRebuild = 'dayTemplateData' in patch || 'firstDayOfWeek' in patch || 'markDisabled' in patch ||\n                'minDate' in patch || 'maxDate' in patch || 'disabled' in patch || 'outsideDays' in patch ||\n                'weekdaysVisible' in patch;\n            const months = buildMonths(this._calendar, startDate, state, this._i18n, forceRebuild);\n            // updating months and boundary dates\n            state.months = months;\n            state.firstDate = months[0].firstDate;\n            state.lastDate = months[months.length - 1].lastDate;\n            // reset selected date if 'markDisabled' returns true\n            if ('selectedDate' in patch && !isDateSelectable(state.selectedDate, state)) {\n                state.selectedDate = null;\n            }\n            // adjusting focus after months were built\n            if ('firstDate' in patch) {\n                if (!state.focusDate || state.focusDate.before(state.firstDate) || state.focusDate.after(state.lastDate)) {\n                    state.focusDate = startDate;\n                }\n            }\n            // adjusting months/years for the select box navigation\n            const yearChanged = !this._state.firstDate || this._state.firstDate.year !== state.firstDate.year;\n            const monthChanged = !this._state.firstDate || this._state.firstDate.month !== state.firstDate.month;\n            if (state.navigation === 'select') {\n                // years ->  boundaries (min/max were changed)\n                if ('minDate' in patch || 'maxDate' in patch || state.selectBoxes.years.length === 0 || yearChanged) {\n                    state.selectBoxes.years = generateSelectBoxYears(state.firstDate, state.minDate, state.maxDate);\n                }\n                // months -> when current year or boundaries change\n                if ('minDate' in patch || 'maxDate' in patch || state.selectBoxes.months.length === 0 || yearChanged) {\n                    state.selectBoxes.months =\n                        generateSelectBoxMonths(this._calendar, state.firstDate, state.minDate, state.maxDate);\n                }\n            }\n            else {\n                state.selectBoxes = { years: [], months: [] };\n            }\n            // updating navigation arrows -> boundaries change (min/max) or month/year changes\n            if ((state.navigation === 'arrows' || state.navigation === 'select') &&\n                (monthChanged || yearChanged || 'minDate' in patch || 'maxDate' in patch || 'disabled' in patch)) {\n                state.prevDisabled = state.disabled || prevMonthDisabled(this._calendar, state.firstDate, state.minDate);\n                state.nextDisabled = state.disabled || nextMonthDisabled(this._calendar, state.lastDate, state.maxDate);\n            }\n        }\n        return state;\n    }\n}\nNgbDatepickerService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbDatepickerService, deps: [{ token: NgbCalendar }, { token: NgbDatepickerI18n }], target: i0.ɵɵFactoryTarget.Injectable });\nNgbDatepickerService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbDatepickerService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbDatepickerService, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: NgbCalendar }, { type: NgbDatepickerI18n }]; } });\n\n// clang-format on\nvar NavigationEvent;\n(function (NavigationEvent) {\n    NavigationEvent[NavigationEvent[\"PREV\"] = 0] = \"PREV\";\n    NavigationEvent[NavigationEvent[\"NEXT\"] = 1] = \"NEXT\";\n})(NavigationEvent || (NavigationEvent = {}));\n\n/**\n * A configuration service for the [`NgbDatepicker`](#/components/datepicker/api#NgbDatepicker) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the datepickers used in the application.\n */\nclass NgbDatepickerConfig {\n    constructor() {\n        this.displayMonths = 1;\n        this.firstDayOfWeek = 1;\n        this.navigation = 'select';\n        this.outsideDays = 'visible';\n        this.showWeekNumbers = false;\n        this.weekdays = TranslationWidth.Short;\n    }\n}\nNgbDatepickerConfig.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbDatepickerConfig, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nNgbDatepickerConfig.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbDatepickerConfig, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbDatepickerConfig, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\nfunction NGB_DATEPICKER_DATE_ADAPTER_FACTORY() {\n    return new NgbDateStructAdapter();\n}\n/**\n * An abstract service that does the conversion between the internal datepicker `NgbDateStruct` model and\n * any provided user date model `D`, ex. a string, a native date, etc.\n *\n * The adapter is used **only** for conversion when binding datepicker to a form control,\n * ex. `[(ngModel)]=\"userDateModel\"`. Here `userDateModel` can be of any type.\n *\n * The default datepicker implementation assumes we use `NgbDateStruct` as a user model.\n *\n * See the [date format overview](#/components/datepicker/overview#date-model) for more details\n * and the [custom adapter demo](#/components/datepicker/examples#adapter) for an example.\n */\nclass NgbDateAdapter {\n}\nNgbDateAdapter.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbDateAdapter, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nNgbDateAdapter.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbDateAdapter, providedIn: 'root', useFactory: NGB_DATEPICKER_DATE_ADAPTER_FACTORY });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbDateAdapter, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root', useFactory: NGB_DATEPICKER_DATE_ADAPTER_FACTORY }]\n        }] });\nclass NgbDateStructAdapter extends NgbDateAdapter {\n    /**\n     * Converts a NgbDateStruct value into NgbDateStruct value\n     */\n    fromModel(date) {\n        return (date && isInteger(date.year) && isInteger(date.month) && isInteger(date.day)) ?\n            { year: date.year, month: date.month, day: date.day } :\n            null;\n    }\n    /**\n     * Converts a NgbDateStruct value into NgbDateStruct value\n     */\n    toModel(date) {\n        return (date && isInteger(date.year) && isInteger(date.month) && isInteger(date.day)) ?\n            { year: date.year, month: date.month, day: date.day } :\n            null;\n    }\n}\nNgbDateStructAdapter.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbDateStructAdapter, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\nNgbDateStructAdapter.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbDateStructAdapter });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbDateStructAdapter, decorators: [{\n            type: Injectable\n        }] });\n\nclass NgbDatepickerDayView {\n    constructor(i18n) {\n        this.i18n = i18n;\n    }\n    isMuted() { return !this.selected && (this.date.month !== this.currentMonth || this.disabled); }\n}\nNgbDatepickerDayView.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbDatepickerDayView, deps: [{ token: NgbDatepickerI18n }], target: i0.ɵɵFactoryTarget.Component });\nNgbDatepickerDayView.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: NgbDatepickerDayView, selector: \"[ngbDatepickerDayView]\", inputs: { currentMonth: \"currentMonth\", date: \"date\", disabled: \"disabled\", focused: \"focused\", selected: \"selected\" }, host: { properties: { \"class.bg-primary\": \"selected\", \"class.text-white\": \"selected\", \"class.text-muted\": \"isMuted()\", \"class.outside\": \"isMuted()\", \"class.active\": \"focused\" }, classAttribute: \"btn-light\" }, ngImport: i0, template: `{{ i18n.getDayNumerals(date) }}`, isInline: true, styles: [\"[ngbDatepickerDayView]{text-align:center;width:2rem;height:2rem;line-height:2rem;border-radius:.25rem;background:transparent}[ngbDatepickerDayView].outside{opacity:.5}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbDatepickerDayView, decorators: [{\n            type: Component,\n            args: [{ selector: '[ngbDatepickerDayView]', changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, host: {\n                        'class': 'btn-light',\n                        '[class.bg-primary]': 'selected',\n                        '[class.text-white]': 'selected',\n                        '[class.text-muted]': 'isMuted()',\n                        '[class.outside]': 'isMuted()',\n                        '[class.active]': 'focused'\n                    }, template: `{{ i18n.getDayNumerals(date) }}`, styles: [\"[ngbDatepickerDayView]{text-align:center;width:2rem;height:2rem;line-height:2rem;border-radius:.25rem;background:transparent}[ngbDatepickerDayView].outside{opacity:.5}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: NgbDatepickerI18n }]; }, propDecorators: { currentMonth: [{\n                type: Input\n            }], date: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], focused: [{\n                type: Input\n            }], selected: [{\n                type: Input\n            }] } });\n\nclass NgbDatepickerNavigationSelect {\n    constructor(i18n, _renderer) {\n        this.i18n = i18n;\n        this._renderer = _renderer;\n        this.select = new EventEmitter();\n        this._month = -1;\n        this._year = -1;\n    }\n    changeMonth(month) { this.select.emit(new NgbDate(this.date.year, toInteger(month), 1)); }\n    changeYear(year) { this.select.emit(new NgbDate(toInteger(year), this.date.month, 1)); }\n    ngAfterViewChecked() {\n        if (this.date) {\n            if (this.date.month !== this._month) {\n                this._month = this.date.month;\n                this._renderer.setProperty(this.monthSelect.nativeElement, 'value', this._month);\n            }\n            if (this.date.year !== this._year) {\n                this._year = this.date.year;\n                this._renderer.setProperty(this.yearSelect.nativeElement, 'value', this._year);\n            }\n        }\n    }\n}\nNgbDatepickerNavigationSelect.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbDatepickerNavigationSelect, deps: [{ token: NgbDatepickerI18n }, { token: i0.Renderer2 }], target: i0.ɵɵFactoryTarget.Component });\nNgbDatepickerNavigationSelect.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: NgbDatepickerNavigationSelect, selector: \"ngb-datepicker-navigation-select\", inputs: { date: \"date\", disabled: \"disabled\", months: \"months\", years: \"years\" }, outputs: { select: \"select\" }, viewQueries: [{ propertyName: \"monthSelect\", first: true, predicate: [\"month\"], descendants: true, read: ElementRef, static: true }, { propertyName: \"yearSelect\", first: true, predicate: [\"year\"], descendants: true, read: ElementRef, static: true }], ngImport: i0, template: `\n    <select #month\n      [disabled]=\"disabled\"\n      class=\"form-select\"\n      i18n-aria-label=\"@@ngb.datepicker.select-month\" aria-label=\"Select month\"\n      i18n-title=\"@@ngb.datepicker.select-month\" title=\"Select month\"\n      (change)=\"changeMonth($any($event).target.value)\">\n        <option *ngFor=\"let m of months\" [attr.aria-label]=\"i18n.getMonthFullName(m, date?.year)\"\n                [value]=\"m\">{{ i18n.getMonthShortName(m, date?.year) }}</option>\n    </select><select #year\n      [disabled]=\"disabled\"\n      class=\"form-select\"\n      i18n-aria-label=\"@@ngb.datepicker.select-year\" aria-label=\"Select year\"\n      i18n-title=\"@@ngb.datepicker.select-year\" title=\"Select year\"\n      (change)=\"changeYear($any($event).target.value)\">\n        <option *ngFor=\"let y of years\" [value]=\"y\">{{ i18n.getYearNumerals(y) }}</option>\n    </select>\n  `, isInline: true, styles: [\"ngb-datepicker-navigation-select>.form-select{flex:1 1 auto;padding:0 .5rem;font-size:.875rem;height:1.85rem}ngb-datepicker-navigation-select>.form-select:focus{z-index:1}ngb-datepicker-navigation-select>.form-select::-ms-value{background-color:transparent!important}\\n\"], directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i3.NgSelectOption, selector: \"option\", inputs: [\"ngValue\", \"value\"] }, { type: i3.ɵNgSelectMultipleOption, selector: \"option\", inputs: [\"ngValue\", \"value\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbDatepickerNavigationSelect, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngb-datepicker-navigation-select', changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, template: `\n    <select #month\n      [disabled]=\"disabled\"\n      class=\"form-select\"\n      i18n-aria-label=\"@@ngb.datepicker.select-month\" aria-label=\"Select month\"\n      i18n-title=\"@@ngb.datepicker.select-month\" title=\"Select month\"\n      (change)=\"changeMonth($any($event).target.value)\">\n        <option *ngFor=\"let m of months\" [attr.aria-label]=\"i18n.getMonthFullName(m, date?.year)\"\n                [value]=\"m\">{{ i18n.getMonthShortName(m, date?.year) }}</option>\n    </select><select #year\n      [disabled]=\"disabled\"\n      class=\"form-select\"\n      i18n-aria-label=\"@@ngb.datepicker.select-year\" aria-label=\"Select year\"\n      i18n-title=\"@@ngb.datepicker.select-year\" title=\"Select year\"\n      (change)=\"changeYear($any($event).target.value)\">\n        <option *ngFor=\"let y of years\" [value]=\"y\">{{ i18n.getYearNumerals(y) }}</option>\n    </select>\n  `, styles: [\"ngb-datepicker-navigation-select>.form-select{flex:1 1 auto;padding:0 .5rem;font-size:.875rem;height:1.85rem}ngb-datepicker-navigation-select>.form-select:focus{z-index:1}ngb-datepicker-navigation-select>.form-select::-ms-value{background-color:transparent!important}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: NgbDatepickerI18n }, { type: i0.Renderer2 }]; }, propDecorators: { date: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], months: [{\n                type: Input\n            }], years: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], monthSelect: [{\n                type: ViewChild,\n                args: ['month', { static: true, read: ElementRef }]\n            }], yearSelect: [{\n                type: ViewChild,\n                args: ['year', { static: true, read: ElementRef }]\n            }] } });\n\nclass NgbDatepickerNavigation {\n    constructor(i18n) {\n        this.i18n = i18n;\n        this.navigation = NavigationEvent;\n        this.months = [];\n        this.navigate = new EventEmitter();\n        this.select = new EventEmitter();\n    }\n    onClickPrev(event) {\n        event.currentTarget.focus();\n        this.navigate.emit(this.navigation.PREV);\n    }\n    onClickNext(event) {\n        event.currentTarget.focus();\n        this.navigate.emit(this.navigation.NEXT);\n    }\n}\nNgbDatepickerNavigation.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbDatepickerNavigation, deps: [{ token: NgbDatepickerI18n }], target: i0.ɵɵFactoryTarget.Component });\nNgbDatepickerNavigation.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: NgbDatepickerNavigation, selector: \"ngb-datepicker-navigation\", inputs: { date: \"date\", disabled: \"disabled\", months: \"months\", showSelect: \"showSelect\", prevDisabled: \"prevDisabled\", nextDisabled: \"nextDisabled\", selectBoxes: \"selectBoxes\" }, outputs: { navigate: \"navigate\", select: \"select\" }, ngImport: i0, template: `\n    <div class=\"ngb-dp-arrow\">\n      <button type=\"button\" class=\"btn btn-link ngb-dp-arrow-btn\" (click)=\"onClickPrev($event)\" [disabled]=\"prevDisabled\"\n              i18n-aria-label=\"@@ngb.datepicker.previous-month\" aria-label=\"Previous month\"\n              i18n-title=\"@@ngb.datepicker.previous-month\" title=\"Previous month\">\n        <span class=\"ngb-dp-navigation-chevron\"></span>\n      </button>\n    </div>\n    <ngb-datepicker-navigation-select *ngIf=\"showSelect\" class=\"ngb-dp-navigation-select\"\n      [date]=\"date\"\n      [disabled] = \"disabled\"\n      [months]=\"selectBoxes.months\"\n      [years]=\"selectBoxes.years\"\n      (select)=\"select.emit($event)\">\n    </ngb-datepicker-navigation-select>\n\n    <ng-template *ngIf=\"!showSelect\" ngFor let-month [ngForOf]=\"months\" let-i=\"index\">\n      <div class=\"ngb-dp-arrow\" *ngIf=\"i > 0\"></div>\n      <div class=\"ngb-dp-month-name\">\n        {{ i18n.getMonthLabel(month.firstDate) }}\n      </div>\n      <div class=\"ngb-dp-arrow\" *ngIf=\"i !== months.length - 1\"></div>\n    </ng-template>\n    <div class=\"ngb-dp-arrow right\">\n      <button type=\"button\" class=\"btn btn-link ngb-dp-arrow-btn\" (click)=\"onClickNext($event)\" [disabled]=\"nextDisabled\"\n              i18n-aria-label=\"@@ngb.datepicker.next-month\" aria-label=\"Next month\"\n              i18n-title=\"@@ngb.datepicker.next-month\" title=\"Next month\">\n        <span class=\"ngb-dp-navigation-chevron\"></span>\n      </button>\n    </div>\n    `, isInline: true, styles: [\"ngb-datepicker-navigation{display:flex;align-items:center}.ngb-dp-navigation-chevron{border-style:solid;border-width:.2em .2em 0 0;display:inline-block;width:.75em;height:.75em;margin-left:.25em;margin-right:.15em;transform:rotate(-135deg)}.ngb-dp-arrow{display:flex;flex:1 1 auto;padding-right:0;padding-left:0;margin:0;width:2rem;height:2rem}.ngb-dp-arrow.right{justify-content:flex-end}.ngb-dp-arrow.right .ngb-dp-navigation-chevron{transform:rotate(45deg);margin-left:.15em;margin-right:.25em}.ngb-dp-arrow-btn{padding:0 .25rem;margin:0 .5rem;border:none;background-color:transparent;z-index:1}.ngb-dp-arrow-btn:focus{outline-width:1px;outline-style:auto}@media all and (-ms-high-contrast: none),(-ms-high-contrast: active){.ngb-dp-arrow-btn:focus{outline-style:solid}}.ngb-dp-month-name{font-size:larger;height:2rem;line-height:2rem;text-align:center}.ngb-dp-navigation-select{display:flex;flex:1 1 9rem}\\n\"], components: [{ type: NgbDatepickerNavigationSelect, selector: \"ngb-datepicker-navigation-select\", inputs: [\"date\", \"disabled\", \"months\", \"years\"], outputs: [\"select\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbDatepickerNavigation, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngb-datepicker-navigation', changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, template: `\n    <div class=\"ngb-dp-arrow\">\n      <button type=\"button\" class=\"btn btn-link ngb-dp-arrow-btn\" (click)=\"onClickPrev($event)\" [disabled]=\"prevDisabled\"\n              i18n-aria-label=\"@@ngb.datepicker.previous-month\" aria-label=\"Previous month\"\n              i18n-title=\"@@ngb.datepicker.previous-month\" title=\"Previous month\">\n        <span class=\"ngb-dp-navigation-chevron\"></span>\n      </button>\n    </div>\n    <ngb-datepicker-navigation-select *ngIf=\"showSelect\" class=\"ngb-dp-navigation-select\"\n      [date]=\"date\"\n      [disabled] = \"disabled\"\n      [months]=\"selectBoxes.months\"\n      [years]=\"selectBoxes.years\"\n      (select)=\"select.emit($event)\">\n    </ngb-datepicker-navigation-select>\n\n    <ng-template *ngIf=\"!showSelect\" ngFor let-month [ngForOf]=\"months\" let-i=\"index\">\n      <div class=\"ngb-dp-arrow\" *ngIf=\"i > 0\"></div>\n      <div class=\"ngb-dp-month-name\">\n        {{ i18n.getMonthLabel(month.firstDate) }}\n      </div>\n      <div class=\"ngb-dp-arrow\" *ngIf=\"i !== months.length - 1\"></div>\n    </ng-template>\n    <div class=\"ngb-dp-arrow right\">\n      <button type=\"button\" class=\"btn btn-link ngb-dp-arrow-btn\" (click)=\"onClickNext($event)\" [disabled]=\"nextDisabled\"\n              i18n-aria-label=\"@@ngb.datepicker.next-month\" aria-label=\"Next month\"\n              i18n-title=\"@@ngb.datepicker.next-month\" title=\"Next month\">\n        <span class=\"ngb-dp-navigation-chevron\"></span>\n      </button>\n    </div>\n    `, styles: [\"ngb-datepicker-navigation{display:flex;align-items:center}.ngb-dp-navigation-chevron{border-style:solid;border-width:.2em .2em 0 0;display:inline-block;width:.75em;height:.75em;margin-left:.25em;margin-right:.15em;transform:rotate(-135deg)}.ngb-dp-arrow{display:flex;flex:1 1 auto;padding-right:0;padding-left:0;margin:0;width:2rem;height:2rem}.ngb-dp-arrow.right{justify-content:flex-end}.ngb-dp-arrow.right .ngb-dp-navigation-chevron{transform:rotate(45deg);margin-left:.15em;margin-right:.25em}.ngb-dp-arrow-btn{padding:0 .25rem;margin:0 .5rem;border:none;background-color:transparent;z-index:1}.ngb-dp-arrow-btn:focus{outline-width:1px;outline-style:auto}@media all and (-ms-high-contrast: none),(-ms-high-contrast: active){.ngb-dp-arrow-btn:focus{outline-style:solid}}.ngb-dp-month-name{font-size:larger;height:2rem;line-height:2rem;text-align:center}.ngb-dp-navigation-select{display:flex;flex:1 1 9rem}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: NgbDatepickerI18n }]; }, propDecorators: { date: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], months: [{\n                type: Input\n            }], showSelect: [{\n                type: Input\n            }], prevDisabled: [{\n                type: Input\n            }], nextDisabled: [{\n                type: Input\n            }], selectBoxes: [{\n                type: Input\n            }], navigate: [{\n                type: Output\n            }], select: [{\n                type: Output\n            }] } });\n\nvar Key;\n(function (Key) {\n    Key[Key[\"Tab\"] = 9] = \"Tab\";\n    Key[Key[\"Enter\"] = 13] = \"Enter\";\n    Key[Key[\"Escape\"] = 27] = \"Escape\";\n    Key[Key[\"Space\"] = 32] = \"Space\";\n    Key[Key[\"PageUp\"] = 33] = \"PageUp\";\n    Key[Key[\"PageDown\"] = 34] = \"PageDown\";\n    Key[Key[\"End\"] = 35] = \"End\";\n    Key[Key[\"Home\"] = 36] = \"Home\";\n    Key[Key[\"ArrowLeft\"] = 37] = \"ArrowLeft\";\n    Key[Key[\"ArrowUp\"] = 38] = \"ArrowUp\";\n    Key[Key[\"ArrowRight\"] = 39] = \"ArrowRight\";\n    Key[Key[\"ArrowDown\"] = 40] = \"ArrowDown\";\n})(Key || (Key = {}));\n\n/**\n * A service that represents the keyboard navigation.\n *\n * Default keyboard shortcuts [are documented in the overview](#/components/datepicker/overview#keyboard-shortcuts)\n *\n * @since 5.2.0\n */\nclass NgbDatepickerKeyboardService {\n    /**\n     * Processes a keyboard event.\n     */\n    processKey(event, datepicker) {\n        const { state, calendar } = datepicker;\n        /* eslint-disable-next-line deprecation/deprecation */\n        switch (event.which) {\n            case Key.PageUp:\n                datepicker.focusDate(calendar.getPrev(state.focusedDate, event.shiftKey ? 'y' : 'm', 1));\n                break;\n            case Key.PageDown:\n                datepicker.focusDate(calendar.getNext(state.focusedDate, event.shiftKey ? 'y' : 'm', 1));\n                break;\n            case Key.End:\n                datepicker.focusDate(event.shiftKey ? state.maxDate : state.lastDate);\n                break;\n            case Key.Home:\n                datepicker.focusDate(event.shiftKey ? state.minDate : state.firstDate);\n                break;\n            case Key.ArrowLeft:\n                datepicker.focusDate(calendar.getPrev(state.focusedDate, 'd', 1));\n                break;\n            case Key.ArrowUp:\n                datepicker.focusDate(calendar.getPrev(state.focusedDate, 'd', calendar.getDaysPerWeek()));\n                break;\n            case Key.ArrowRight:\n                datepicker.focusDate(calendar.getNext(state.focusedDate, 'd', 1));\n                break;\n            case Key.ArrowDown:\n                datepicker.focusDate(calendar.getNext(state.focusedDate, 'd', calendar.getDaysPerWeek()));\n                break;\n            case Key.Enter:\n            case Key.Space:\n                datepicker.focusSelect();\n                break;\n            default:\n                return;\n        }\n        event.preventDefault();\n        event.stopPropagation();\n    }\n}\nNgbDatepickerKeyboardService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbDatepickerKeyboardService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nNgbDatepickerKeyboardService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbDatepickerKeyboardService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbDatepickerKeyboardService, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\n/**\n * A directive that marks the content template that customizes the way datepicker months are displayed\n *\n * @since 5.3.0\n */\nclass NgbDatepickerContent {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nNgbDatepickerContent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbDatepickerContent, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });\nNgbDatepickerContent.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.3\", type: NgbDatepickerContent, selector: \"ng-template[ngbDatepickerContent]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbDatepickerContent, decorators: [{\n            type: Directive,\n            args: [{ selector: 'ng-template[ngbDatepickerContent]' }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });\n/**\n * A highly configurable component that helps you with selecting calendar dates.\n *\n * `NgbDatepicker` is meant to be displayed inline on a page or put inside a popup.\n */\nclass NgbDatepicker {\n    constructor(_service, _calendar, i18n, config, cd, _elementRef, _ngbDateAdapter, _ngZone) {\n        this._service = _service;\n        this._calendar = _calendar;\n        this.i18n = i18n;\n        this._elementRef = _elementRef;\n        this._ngbDateAdapter = _ngbDateAdapter;\n        this._ngZone = _ngZone;\n        this._controlValue = null;\n        this._destroyed$ = new Subject();\n        this._publicState = {};\n        /**\n         * An event emitted right before the navigation happens and displayed month changes.\n         *\n         * See [`NgbDatepickerNavigateEvent`](#/components/datepicker/api#NgbDatepickerNavigateEvent) for the payload info.\n         */\n        this.navigate = new EventEmitter();\n        /**\n         * An event emitted when user selects a date using keyboard or mouse.\n         *\n         * The payload of the event is currently selected `NgbDate`.\n         *\n         * @since 5.2.0\n         */\n        this.dateSelect = new EventEmitter();\n        this.onChange = (_) => { };\n        this.onTouched = () => { };\n        ['dayTemplate', 'dayTemplateData', 'displayMonths', 'firstDayOfWeek', 'footerTemplate', 'markDisabled', 'minDate',\n            'maxDate', 'navigation', 'outsideDays', 'showWeekNumbers', 'startDate', 'weekdays']\n            .forEach(input => this[input] = config[input]);\n        _service.dateSelect$.pipe(takeUntil(this._destroyed$)).subscribe(date => { this.dateSelect.emit(date); });\n        _service.model$.pipe(takeUntil(this._destroyed$)).subscribe(model => {\n            const newDate = model.firstDate;\n            const oldDate = this.model ? this.model.firstDate : null;\n            // update public state\n            this._publicState = {\n                maxDate: model.maxDate,\n                minDate: model.minDate,\n                firstDate: model.firstDate,\n                lastDate: model.lastDate,\n                focusedDate: model.focusDate,\n                months: model.months.map(viewModel => viewModel.firstDate)\n            };\n            let navigationPrevented = false;\n            // emitting navigation event if the first month changes\n            if (!newDate.equals(oldDate)) {\n                this.navigate.emit({\n                    current: oldDate ? { year: oldDate.year, month: oldDate.month } : null,\n                    next: { year: newDate.year, month: newDate.month },\n                    preventDefault: () => navigationPrevented = true\n                });\n                // can't prevent the very first navigation\n                if (navigationPrevented && oldDate !== null) {\n                    this._service.open(oldDate);\n                    return;\n                }\n            }\n            const newSelectedDate = model.selectedDate;\n            const newFocusedDate = model.focusDate;\n            const oldFocusedDate = this.model ? this.model.focusDate : null;\n            this.model = model;\n            // handling selection change\n            if (isChangedDate(newSelectedDate, this._controlValue)) {\n                this._controlValue = newSelectedDate;\n                this.onTouched();\n                this.onChange(this._ngbDateAdapter.toModel(newSelectedDate));\n            }\n            // handling focus change\n            if (isChangedDate(newFocusedDate, oldFocusedDate) && oldFocusedDate && model.focusVisible) {\n                this.focus();\n            }\n            cd.markForCheck();\n        });\n    }\n    /**\n     *  Returns the readonly public state of the datepicker\n     *\n     * @since 5.2.0\n     */\n    get state() { return this._publicState; }\n    /**\n     *  Returns the calendar service used in the specific datepicker instance.\n     *\n     *  @since 5.3.0\n     */\n    get calendar() { return this._calendar; }\n    /**\n     *  Focuses on given date.\n     */\n    focusDate(date) { this._service.focus(NgbDate.from(date)); }\n    /**\n     *  Selects focused date.\n     */\n    focusSelect() { this._service.focusSelect(); }\n    focus() {\n        this._ngZone.onStable.asObservable().pipe(take(1)).subscribe(() => {\n            const elementToFocus = this._elementRef.nativeElement.querySelector('div.ngb-dp-day[tabindex=\"0\"]');\n            if (elementToFocus) {\n                elementToFocus.focus();\n            }\n        });\n    }\n    /**\n     * Navigates to the provided date.\n     *\n     * With the default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n     * If nothing or invalid date provided calendar will open current month.\n     *\n     * Use the `[startDate]` input as an alternative.\n     */\n    navigateTo(date) {\n        this._service.open(NgbDate.from(date ? date.day ? date : Object.assign(Object.assign({}, date), { day: 1 }) : null));\n    }\n    ngAfterViewInit() {\n        this._ngZone.runOutsideAngular(() => {\n            const focusIns$ = fromEvent(this._contentEl.nativeElement, 'focusin');\n            const focusOuts$ = fromEvent(this._contentEl.nativeElement, 'focusout');\n            const { nativeElement } = this._elementRef;\n            // we're changing 'focusVisible' only when entering or leaving months view\n            // and ignoring all focus events where both 'target' and 'related' target are day cells\n            merge(focusIns$, focusOuts$)\n                .pipe(filter(({ target, relatedTarget }) => !(hasClassName(target, 'ngb-dp-day') && hasClassName(relatedTarget, 'ngb-dp-day') &&\n                nativeElement.contains(target) && nativeElement.contains(relatedTarget))), takeUntil(this._destroyed$))\n                .subscribe(({ type }) => this._ngZone.run(() => this._service.set({ focusVisible: type === 'focusin' })));\n        });\n    }\n    ngOnDestroy() { this._destroyed$.next(); }\n    ngOnInit() {\n        if (this.model === undefined) {\n            const inputs = {};\n            ['dayTemplateData', 'displayMonths', 'markDisabled', 'firstDayOfWeek', 'navigation', 'minDate', 'maxDate',\n                'outsideDays', 'weekdays']\n                .forEach(name => inputs[name] = this[name]);\n            this._service.set(inputs);\n            this.navigateTo(this.startDate);\n        }\n        if (!this.dayTemplate) {\n            this.dayTemplate = this._defaultDayTemplate;\n        }\n    }\n    ngOnChanges(changes) {\n        const inputs = {};\n        ['dayTemplateData', 'displayMonths', 'markDisabled', 'firstDayOfWeek', 'navigation', 'minDate', 'maxDate',\n            'outsideDays', 'weekdays']\n            .filter(name => name in changes)\n            .forEach(name => inputs[name] = this[name]);\n        this._service.set(inputs);\n        if ('startDate' in changes) {\n            const { currentValue, previousValue } = changes.startDate;\n            if (isChangedMonth(previousValue, currentValue)) {\n                this.navigateTo(this.startDate);\n            }\n        }\n    }\n    onDateSelect(date) {\n        this._service.focus(date);\n        this._service.select(date, { emitEvent: true });\n    }\n    onNavigateDateSelect(date) { this._service.open(date); }\n    onNavigateEvent(event) {\n        switch (event) {\n            case NavigationEvent.PREV:\n                this._service.open(this._calendar.getPrev(this.model.firstDate, 'm', 1));\n                break;\n            case NavigationEvent.NEXT:\n                this._service.open(this._calendar.getNext(this.model.firstDate, 'm', 1));\n                break;\n        }\n    }\n    registerOnChange(fn) { this.onChange = fn; }\n    registerOnTouched(fn) { this.onTouched = fn; }\n    setDisabledState(disabled) { this._service.set({ disabled }); }\n    writeValue(value) {\n        this._controlValue = NgbDate.from(this._ngbDateAdapter.fromModel(value));\n        this._service.select(this._controlValue);\n    }\n}\nNgbDatepicker.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbDatepicker, deps: [{ token: NgbDatepickerService }, { token: NgbCalendar }, { token: NgbDatepickerI18n }, { token: NgbDatepickerConfig }, { token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: NgbDateAdapter }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\nNgbDatepicker.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: NgbDatepicker, selector: \"ngb-datepicker\", inputs: { dayTemplate: \"dayTemplate\", dayTemplateData: \"dayTemplateData\", displayMonths: \"displayMonths\", firstDayOfWeek: \"firstDayOfWeek\", footerTemplate: \"footerTemplate\", markDisabled: \"markDisabled\", maxDate: \"maxDate\", minDate: \"minDate\", navigation: \"navigation\", outsideDays: \"outsideDays\", showWeekNumbers: \"showWeekNumbers\", startDate: \"startDate\", weekdays: \"weekdays\" }, outputs: { navigate: \"navigate\", dateSelect: \"dateSelect\" }, providers: [{ provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => NgbDatepicker), multi: true }, NgbDatepickerService], queries: [{ propertyName: \"contentTemplate\", first: true, predicate: NgbDatepickerContent, descendants: true, static: true }], viewQueries: [{ propertyName: \"_defaultDayTemplate\", first: true, predicate: [\"defaultDayTemplate\"], descendants: true, static: true }, { propertyName: \"_contentEl\", first: true, predicate: [\"content\"], descendants: true, static: true }], exportAs: [\"ngbDatepicker\"], usesOnChanges: true, ngImport: i0, template: `\n    <ng-template #defaultDayTemplate let-date=\"date\" let-currentMonth=\"currentMonth\" let-selected=\"selected\"\n                 let-disabled=\"disabled\" let-focused=\"focused\">\n      <div ngbDatepickerDayView\n        [date]=\"date\"\n        [currentMonth]=\"currentMonth\"\n        [selected]=\"selected\"\n        [disabled]=\"disabled\"\n        [focused]=\"focused\">\n      </div>\n    </ng-template>\n\n    <ng-template #defaultContentTemplate>\n      <div *ngFor=\"let month of model.months; let i = index;\" class=\"ngb-dp-month\">\n        <div *ngIf=\"navigation === 'none' || (displayMonths > 1 && navigation === 'select')\" class=\"ngb-dp-month-name\">\n          {{ i18n.getMonthLabel(month.firstDate) }}\n        </div>\n        <ngb-datepicker-month [month]=\"month.firstDate\"></ngb-datepicker-month>\n      </div>\n    </ng-template>\n\n    <div class=\"ngb-dp-header\">\n      <ngb-datepicker-navigation *ngIf=\"navigation !== 'none'\"\n        [date]=\"model.firstDate!\"\n        [months]=\"model.months\"\n        [disabled]=\"model.disabled\"\n        [showSelect]=\"model.navigation === 'select'\"\n        [prevDisabled]=\"model.prevDisabled\"\n        [nextDisabled]=\"model.nextDisabled\"\n        [selectBoxes]=\"model.selectBoxes\"\n        (navigate)=\"onNavigateEvent($event)\"\n        (select)=\"onNavigateDateSelect($event)\">\n      </ngb-datepicker-navigation>\n    </div>\n\n    <div class=\"ngb-dp-content\" [class.ngb-dp-months]=\"!contentTemplate\" #content>\n      <ng-template [ngTemplateOutlet]=\"contentTemplate?.templateRef || defaultContentTemplate\"></ng-template>\n    </div>\n\n    <ng-template [ngTemplateOutlet]=\"footerTemplate\"></ng-template>\n  `, isInline: true, styles: [\"ngb-datepicker{border:1px solid #dfdfdf;border-radius:.25rem;display:inline-block}ngb-datepicker-month{pointer-events:auto}ngb-datepicker.dropdown-menu{padding:0}.ngb-dp-body{z-index:1055}.ngb-dp-header{border-bottom:0;border-radius:.25rem .25rem 0 0;padding-top:.25rem;background-color:#f8f9fa;background-color:var(--bs-light)}.ngb-dp-months{display:flex}.ngb-dp-month{pointer-events:none}.ngb-dp-month-name{font-size:larger;height:2rem;line-height:2rem;text-align:center;background-color:#f8f9fa;background-color:var(--bs-light)}.ngb-dp-month+.ngb-dp-month .ngb-dp-month-name,.ngb-dp-month+.ngb-dp-month .ngb-dp-week{padding-left:1rem}.ngb-dp-month:last-child .ngb-dp-week{padding-right:.25rem}.ngb-dp-month:first-child .ngb-dp-week{padding-left:.25rem}.ngb-dp-month .ngb-dp-week:last-child{padding-bottom:.25rem}\\n\"], components: [{ type: i0.forwardRef(function () { return NgbDatepickerDayView; }), selector: \"[ngbDatepickerDayView]\", inputs: [\"currentMonth\", \"date\", \"disabled\", \"focused\", \"selected\"] }, { type: i0.forwardRef(function () { return NgbDatepickerMonth; }), selector: \"ngb-datepicker-month\", inputs: [\"month\"] }, { type: i0.forwardRef(function () { return NgbDatepickerNavigation; }), selector: \"ngb-datepicker-navigation\", inputs: [\"date\", \"disabled\", \"months\", \"showSelect\", \"prevDisabled\", \"nextDisabled\", \"selectBoxes\"], outputs: [\"navigate\", \"select\"] }], directives: [{ type: i0.forwardRef(function () { return i2.NgForOf; }), selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i0.forwardRef(function () { return i2.NgIf; }), selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i0.forwardRef(function () { return i2.NgTemplateOutlet; }), selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbDatepicker, decorators: [{\n            type: Component,\n            args: [{ exportAs: 'ngbDatepicker', selector: 'ngb-datepicker', changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, template: `\n    <ng-template #defaultDayTemplate let-date=\"date\" let-currentMonth=\"currentMonth\" let-selected=\"selected\"\n                 let-disabled=\"disabled\" let-focused=\"focused\">\n      <div ngbDatepickerDayView\n        [date]=\"date\"\n        [currentMonth]=\"currentMonth\"\n        [selected]=\"selected\"\n        [disabled]=\"disabled\"\n        [focused]=\"focused\">\n      </div>\n    </ng-template>\n\n    <ng-template #defaultContentTemplate>\n      <div *ngFor=\"let month of model.months; let i = index;\" class=\"ngb-dp-month\">\n        <div *ngIf=\"navigation === 'none' || (displayMonths > 1 && navigation === 'select')\" class=\"ngb-dp-month-name\">\n          {{ i18n.getMonthLabel(month.firstDate) }}\n        </div>\n        <ngb-datepicker-month [month]=\"month.firstDate\"></ngb-datepicker-month>\n      </div>\n    </ng-template>\n\n    <div class=\"ngb-dp-header\">\n      <ngb-datepicker-navigation *ngIf=\"navigation !== 'none'\"\n        [date]=\"model.firstDate!\"\n        [months]=\"model.months\"\n        [disabled]=\"model.disabled\"\n        [showSelect]=\"model.navigation === 'select'\"\n        [prevDisabled]=\"model.prevDisabled\"\n        [nextDisabled]=\"model.nextDisabled\"\n        [selectBoxes]=\"model.selectBoxes\"\n        (navigate)=\"onNavigateEvent($event)\"\n        (select)=\"onNavigateDateSelect($event)\">\n      </ngb-datepicker-navigation>\n    </div>\n\n    <div class=\"ngb-dp-content\" [class.ngb-dp-months]=\"!contentTemplate\" #content>\n      <ng-template [ngTemplateOutlet]=\"contentTemplate?.templateRef || defaultContentTemplate\"></ng-template>\n    </div>\n\n    <ng-template [ngTemplateOutlet]=\"footerTemplate\"></ng-template>\n  `, providers: [{ provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => NgbDatepicker), multi: true }, NgbDatepickerService], styles: [\"ngb-datepicker{border:1px solid #dfdfdf;border-radius:.25rem;display:inline-block}ngb-datepicker-month{pointer-events:auto}ngb-datepicker.dropdown-menu{padding:0}.ngb-dp-body{z-index:1055}.ngb-dp-header{border-bottom:0;border-radius:.25rem .25rem 0 0;padding-top:.25rem;background-color:#f8f9fa;background-color:var(--bs-light)}.ngb-dp-months{display:flex}.ngb-dp-month{pointer-events:none}.ngb-dp-month-name{font-size:larger;height:2rem;line-height:2rem;text-align:center;background-color:#f8f9fa;background-color:var(--bs-light)}.ngb-dp-month+.ngb-dp-month .ngb-dp-month-name,.ngb-dp-month+.ngb-dp-month .ngb-dp-week{padding-left:1rem}.ngb-dp-month:last-child .ngb-dp-week{padding-right:.25rem}.ngb-dp-month:first-child .ngb-dp-week{padding-left:.25rem}.ngb-dp-month .ngb-dp-week:last-child{padding-bottom:.25rem}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: NgbDatepickerService }, { type: NgbCalendar }, { type: NgbDatepickerI18n }, { type: NgbDatepickerConfig }, { type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: NgbDateAdapter }, { type: i0.NgZone }]; }, propDecorators: { _defaultDayTemplate: [{\n                type: ViewChild,\n                args: ['defaultDayTemplate', { static: true }]\n            }], _contentEl: [{\n                type: ViewChild,\n                args: ['content', { static: true }]\n            }], contentTemplate: [{\n                type: ContentChild,\n                args: [NgbDatepickerContent, { static: true }]\n            }], dayTemplate: [{\n                type: Input\n            }], dayTemplateData: [{\n                type: Input\n            }], displayMonths: [{\n                type: Input\n            }], firstDayOfWeek: [{\n                type: Input\n            }], footerTemplate: [{\n                type: Input\n            }], markDisabled: [{\n                type: Input\n            }], maxDate: [{\n                type: Input\n            }], minDate: [{\n                type: Input\n            }], navigation: [{\n                type: Input\n            }], outsideDays: [{\n                type: Input\n            }], showWeekNumbers: [{\n                type: Input\n            }], startDate: [{\n                type: Input\n            }], weekdays: [{\n                type: Input\n            }], navigate: [{\n                type: Output\n            }], dateSelect: [{\n                type: Output\n            }] } });\n/**\n * A component that renders one month including all the days, weekdays and week numbers. Can be used inside\n * the `<ng-template ngbDatepickerMonths></ng-template>` when you want to customize months layout.\n *\n * For a usage example, see [custom month layout demo](#/components/datepicker/examples#custommonth)\n *\n * @since 5.3.0\n */\nclass NgbDatepickerMonth {\n    constructor(i18n, datepicker, _keyboardService, _service) {\n        this.i18n = i18n;\n        this.datepicker = datepicker;\n        this._keyboardService = _keyboardService;\n        this._service = _service;\n    }\n    /**\n     * The first date of month to be rendered.\n     *\n     * This month must one of the months present in the\n     * [datepicker state](#/components/datepicker/api#NgbDatepickerState).\n     */\n    set month(month) {\n        this.viewModel = this._service.getMonth(month);\n    }\n    onKeyDown(event) { this._keyboardService.processKey(event, this.datepicker); }\n    doSelect(day) {\n        if (!day.context.disabled && !day.hidden) {\n            this.datepicker.onDateSelect(day.date);\n        }\n    }\n}\nNgbDatepickerMonth.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbDatepickerMonth, deps: [{ token: NgbDatepickerI18n }, { token: NgbDatepicker }, { token: NgbDatepickerKeyboardService }, { token: NgbDatepickerService }], target: i0.ɵɵFactoryTarget.Component });\nNgbDatepickerMonth.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: NgbDatepickerMonth, selector: \"ngb-datepicker-month\", inputs: { month: \"month\" }, host: { attributes: { \"role\": \"grid\" }, listeners: { \"keydown\": \"onKeyDown($event)\" } }, ngImport: i0, template: `\n    <div *ngIf=\"viewModel.weekdays.length > 0\" class=\"ngb-dp-week ngb-dp-weekdays\" role=\"row\">\n      <div *ngIf=\"datepicker.showWeekNumbers\" class=\"ngb-dp-weekday ngb-dp-showweek small\">{{ i18n.getWeekLabel() }}</div>\n      <div *ngFor=\"let weekday of viewModel.weekdays\" class=\"ngb-dp-weekday small\" role=\"columnheader\">{{ weekday }}</div>\n    </div>\n    <ng-template ngFor let-week [ngForOf]=\"viewModel.weeks\">\n      <div *ngIf=\"!week.collapsed\" class=\"ngb-dp-week\" role=\"row\">\n        <div *ngIf=\"datepicker.showWeekNumbers\" class=\"ngb-dp-week-number small text-muted\">{{ i18n.getWeekNumerals(week.number) }}</div>\n        <div *ngFor=\"let day of week.days\" (click)=\"doSelect(day); $event.preventDefault()\" class=\"ngb-dp-day\" role=\"gridcell\"\n             [class.disabled]=\"day.context.disabled\"\n             [tabindex]=\"day.tabindex\"\n             [class.hidden]=\"day.hidden\"\n             [class.ngb-dp-today]=\"day.context.today\"\n             [attr.aria-label]=\"day.ariaLabel\">\n          <ng-template [ngIf]=\"!day.hidden\">\n            <ng-template [ngTemplateOutlet]=\"datepicker.dayTemplate\" [ngTemplateOutletContext]=\"day.context\"></ng-template>\n          </ng-template>\n        </div>\n      </div>\n    </ng-template>\n  `, isInline: true, styles: [\"ngb-datepicker-month{display:block}.ngb-dp-weekday,.ngb-dp-week-number{line-height:2rem;text-align:center;font-style:italic}.ngb-dp-weekday{color:#0dcaf0;color:var(--bs-info)}.ngb-dp-week{border-radius:.25rem;display:flex}.ngb-dp-weekdays{border-bottom:1px solid rgba(0,0,0,.125);border-radius:0;background-color:#f8f9fa;background-color:var(--bs-light)}.ngb-dp-day,.ngb-dp-weekday,.ngb-dp-week-number{width:2rem;height:2rem}.ngb-dp-day{cursor:pointer}.ngb-dp-day.disabled,.ngb-dp-day.hidden{cursor:default;pointer-events:none}.ngb-dp-day[tabindex=\\\"0\\\"]{z-index:1}\\n\"], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i2.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }], encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbDatepickerMonth, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngb-datepicker-month', host: { 'role': 'grid', '(keydown)': 'onKeyDown($event)' }, encapsulation: ViewEncapsulation.None, template: `\n    <div *ngIf=\"viewModel.weekdays.length > 0\" class=\"ngb-dp-week ngb-dp-weekdays\" role=\"row\">\n      <div *ngIf=\"datepicker.showWeekNumbers\" class=\"ngb-dp-weekday ngb-dp-showweek small\">{{ i18n.getWeekLabel() }}</div>\n      <div *ngFor=\"let weekday of viewModel.weekdays\" class=\"ngb-dp-weekday small\" role=\"columnheader\">{{ weekday }}</div>\n    </div>\n    <ng-template ngFor let-week [ngForOf]=\"viewModel.weeks\">\n      <div *ngIf=\"!week.collapsed\" class=\"ngb-dp-week\" role=\"row\">\n        <div *ngIf=\"datepicker.showWeekNumbers\" class=\"ngb-dp-week-number small text-muted\">{{ i18n.getWeekNumerals(week.number) }}</div>\n        <div *ngFor=\"let day of week.days\" (click)=\"doSelect(day); $event.preventDefault()\" class=\"ngb-dp-day\" role=\"gridcell\"\n             [class.disabled]=\"day.context.disabled\"\n             [tabindex]=\"day.tabindex\"\n             [class.hidden]=\"day.hidden\"\n             [class.ngb-dp-today]=\"day.context.today\"\n             [attr.aria-label]=\"day.ariaLabel\">\n          <ng-template [ngIf]=\"!day.hidden\">\n            <ng-template [ngTemplateOutlet]=\"datepicker.dayTemplate\" [ngTemplateOutletContext]=\"day.context\"></ng-template>\n          </ng-template>\n        </div>\n      </div>\n    </ng-template>\n  `, styles: [\"ngb-datepicker-month{display:block}.ngb-dp-weekday,.ngb-dp-week-number{line-height:2rem;text-align:center;font-style:italic}.ngb-dp-weekday{color:#0dcaf0;color:var(--bs-info)}.ngb-dp-week{border-radius:.25rem;display:flex}.ngb-dp-weekdays{border-bottom:1px solid rgba(0,0,0,.125);border-radius:0;background-color:#f8f9fa;background-color:var(--bs-light)}.ngb-dp-day,.ngb-dp-weekday,.ngb-dp-week-number{width:2rem;height:2rem}.ngb-dp-day{cursor:pointer}.ngb-dp-day.disabled,.ngb-dp-day.hidden{cursor:default;pointer-events:none}.ngb-dp-day[tabindex=\\\"0\\\"]{z-index:1}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: NgbDatepickerI18n }, { type: NgbDatepicker }, { type: NgbDatepickerKeyboardService }, { type: NgbDatepickerService }]; }, propDecorators: { month: [{\n                type: Input\n            }] } });\n\nconst isContainedIn = (element, array) => array ? array.some(item => item.contains(element)) : false;\nconst matchesSelectorIfAny = (element, selector) => !selector || closest(element, selector) != null;\n// we have to add a more significant delay to avoid re-opening when handling (click) on a toggling element\n// TODO: use proper Angular platform detection when NgbAutoClose becomes a service and we can inject PLATFORM_ID\nconst isMobile = (() => {\n    const isIOS = () => /iPad|iPhone|iPod/.test(navigator.userAgent) ||\n        (/Macintosh/.test(navigator.userAgent) && navigator.maxTouchPoints && navigator.maxTouchPoints > 2);\n    const isAndroid = () => /Android/.test(navigator.userAgent);\n    return typeof navigator !== 'undefined' ? !!navigator.userAgent && (isIOS() || isAndroid()) : false;\n})();\n// setting 'ngbAutoClose' synchronously on mobile results in immediate popup closing\n// when tapping on the triggering element\nconst wrapAsyncForMobile = fn => isMobile ? () => setTimeout(() => fn(), 100) : fn;\nfunction ngbAutoClose(zone, document, type, close, closed$, insideElements, ignoreElements, insideSelector) {\n    // closing on ESC and outside clicks\n    if (type) {\n        zone.runOutsideAngular(wrapAsyncForMobile(() => {\n            const shouldCloseOnClick = (event) => {\n                const element = event.target;\n                if (event.button === 2 || isContainedIn(element, ignoreElements)) {\n                    return false;\n                }\n                if (type === 'inside') {\n                    return isContainedIn(element, insideElements) && matchesSelectorIfAny(element, insideSelector);\n                }\n                else if (type === 'outside') {\n                    return !isContainedIn(element, insideElements);\n                }\n                else /* if (type === true) */ {\n                    return matchesSelectorIfAny(element, insideSelector) || !isContainedIn(element, insideElements);\n                }\n            };\n            const escapes$ = fromEvent(document, 'keydown')\n                .pipe(takeUntil(closed$), \n            /* eslint-disable-next-line deprecation/deprecation */\n            filter(e => e.which === Key.Escape), tap(e => e.preventDefault()));\n            // we have to pre-calculate 'shouldCloseOnClick' on 'mousedown',\n            // because on 'mouseup' DOM nodes might be detached\n            const mouseDowns$ = fromEvent(document, 'mousedown').pipe(map(shouldCloseOnClick), takeUntil(closed$));\n            const closeableClicks$ = fromEvent(document, 'mouseup')\n                .pipe(withLatestFrom(mouseDowns$), filter(([_, shouldClose]) => shouldClose), delay(0), takeUntil(closed$));\n            race([\n                escapes$.pipe(map(_ => 0 /* ESCAPE */)), closeableClicks$.pipe(map(_ => 1 /* CLICK */))\n            ]).subscribe((source) => zone.run(() => close(source)));\n        }));\n    }\n}\n\nconst FOCUSABLE_ELEMENTS_SELECTOR = [\n    'a[href]', 'button:not([disabled])', 'input:not([disabled]):not([type=\"hidden\"])', 'select:not([disabled])',\n    'textarea:not([disabled])', '[contenteditable]', '[tabindex]:not([tabindex=\"-1\"])'\n].join(', ');\n/**\n * Returns first and last focusable elements inside of a given element based on specific CSS selector\n */\nfunction getFocusableBoundaryElements(element) {\n    const list = Array.from(element.querySelectorAll(FOCUSABLE_ELEMENTS_SELECTOR))\n        .filter(el => el.tabIndex !== -1);\n    return [list[0], list[list.length - 1]];\n}\n/**\n * Function that enforces browser focus to be trapped inside a DOM element.\n *\n * Works only for clicks inside the element and navigation with 'Tab', ignoring clicks outside of the element\n *\n * @param zone Angular zone\n * @param element The element around which focus will be trapped inside\n * @param stopFocusTrap$ The observable stream. When completed the focus trap will clean up listeners\n * and free internal resources\n * @param refocusOnClick Put the focus back to the last focused element whenever a click occurs on element (default to\n * false)\n */\nconst ngbFocusTrap = (zone, element, stopFocusTrap$, refocusOnClick = false) => {\n    zone.runOutsideAngular(() => {\n        // last focused element\n        const lastFocusedElement$ = fromEvent(element, 'focusin').pipe(takeUntil(stopFocusTrap$), map(e => e.target));\n        // 'tab' / 'shift+tab' stream\n        fromEvent(element, 'keydown')\n            .pipe(takeUntil(stopFocusTrap$), \n        /* eslint-disable-next-line deprecation/deprecation */\n        filter(e => e.which === Key.Tab), withLatestFrom(lastFocusedElement$))\n            .subscribe(([tabEvent, focusedElement]) => {\n            const [first, last] = getFocusableBoundaryElements(element);\n            if ((focusedElement === first || focusedElement === element) && tabEvent.shiftKey) {\n                last.focus();\n                tabEvent.preventDefault();\n            }\n            if (focusedElement === last && !tabEvent.shiftKey) {\n                first.focus();\n                tabEvent.preventDefault();\n            }\n        });\n        // inside click\n        if (refocusOnClick) {\n            fromEvent(element, 'click')\n                .pipe(takeUntil(stopFocusTrap$), withLatestFrom(lastFocusedElement$), map(arr => arr[1]))\n                .subscribe(lastFocusedElement => lastFocusedElement.focus());\n        }\n    });\n};\n\nconst placementSeparator = /\\s+/;\nconst spacesRegExp = /  +/gi;\nconst startPrimaryPlacement = /^start/;\nconst endPrimaryPlacement = /^end/;\nconst startSecondaryPlacement = /-(top|left)$/;\nconst endSecondaryPlacement = /-(bottom|right)$/;\nfunction getPopperClassPlacement(placement) {\n    const newPlacement = placement.replace(startPrimaryPlacement, 'left')\n        .replace(endPrimaryPlacement, 'right')\n        .replace(startSecondaryPlacement, '-start')\n        .replace(endSecondaryPlacement, '-end');\n    return newPlacement;\n}\nconst popperStartPrimaryPlacement = /^left/;\nconst popperEndPrimaryPlacement = /^right/;\nconst popperStartSecondaryPlacement = /^start/;\nconst popperEndSecondaryPlacement = /^end/;\nfunction getBootstrapBaseClassPlacement(baseClass, placement) {\n    let [primary, secondary] = placement.split('-');\n    const newPrimary = primary.replace(popperStartPrimaryPlacement, 'start').replace(popperEndPrimaryPlacement, 'end');\n    let classnames = [newPrimary];\n    if (secondary) {\n        let newSecondary = secondary;\n        if (primary === 'left' || primary === 'right') {\n            newSecondary =\n                newSecondary.replace(popperStartSecondaryPlacement, 'top').replace(popperEndSecondaryPlacement, 'bottom');\n        }\n        classnames.push(`${newPrimary}-${newSecondary}`);\n    }\n    if (baseClass) {\n        classnames = classnames.map((classname) => `${baseClass}-${classname}`);\n    }\n    return classnames.join(' ');\n}\n/*\n * Accept the placement array and applies the appropriate placement dependent on the viewport.\n * Returns the applied placement.\n * In case of auto placement, placements are selected in order\n *   'top', 'bottom', 'start', 'end',\n *   'top-start', 'top-end',\n *   'bottom-start', 'bottom-end',\n *   'start-top', 'start-bottom',\n *   'end-top', 'end-bottom'.\n * */\nfunction getPopperOptions({ placement, baseClass }) {\n    let placementVals = Array.isArray(placement) ? placement : placement.split(placementSeparator);\n    // No need to consider left and right here, as start and end are enough, and it is used for 'auto' placement only\n    const allowedPlacements = [\n        'top', 'bottom', 'start', 'end', 'top-start', 'top-end', 'bottom-start', 'bottom-end', 'start-top', 'start-bottom',\n        'end-top', 'end-bottom'\n    ];\n    // replace auto placement with other placements\n    let hasAuto = placementVals.findIndex(val => val === 'auto');\n    if (hasAuto >= 0) {\n        allowedPlacements.forEach(function (obj) {\n            if (placementVals.find(val => val.search('^' + obj) !== -1) == null) {\n                placementVals.splice(hasAuto++, 1, obj);\n            }\n        });\n    }\n    const popperPlacements = placementVals.map((_placement) => { return getPopperClassPlacement(_placement); });\n    let mainPlacement = popperPlacements.shift();\n    const bsModifier = {\n        name: 'bootstrapClasses',\n        enabled: !!baseClass,\n        phase: 'write',\n        fn({ state }) {\n            const bsClassRegExp = new RegExp(baseClass + '(-[a-z]+)*', 'gi');\n            const popperElement = state.elements.popper;\n            const popperPlacement = state.placement;\n            let className = popperElement.className;\n            // Remove old bootstrap classes\n            className = className.replace(bsClassRegExp, '');\n            // Add current placements\n            className += ` ${getBootstrapBaseClassPlacement(baseClass, popperPlacement)}`;\n            // Remove multiple spaces\n            className = className.trim().replace(spacesRegExp, ' ');\n            // Reassign\n            popperElement.className = className;\n        },\n    };\n    return {\n        placement: mainPlacement,\n        modifiers: [\n            bsModifier,\n            flip,\n            preventOverflow,\n            arrow,\n            {\n                enabled: true,\n                name: 'flip',\n                options: {\n                    fallbackPlacements: popperPlacements,\n                },\n            },\n            {\n                enabled: true,\n                name: 'preventOverflow',\n                phase: 'main',\n                fn: function () { },\n            },\n        ]\n    };\n}\nfunction noop(arg) {\n    return arg;\n}\nfunction ngbPositioning() {\n    let popperInstance = null;\n    return {\n        createPopper(positioningOption) {\n            if (!popperInstance) {\n                const updatePopperOptions = positioningOption.updatePopperOptions || noop;\n                let popperOptions = updatePopperOptions(getPopperOptions(positioningOption));\n                popperInstance =\n                    createPopperLite(positioningOption.hostElement, positioningOption.targetElement, popperOptions);\n            }\n        },\n        update() {\n            if (popperInstance) {\n                popperInstance.update();\n            }\n        },\n        setOptions(positioningOption) {\n            if (popperInstance) {\n                const updatePopperOptions = positioningOption.updatePopperOptions || noop;\n                let popperOptions = updatePopperOptions(getPopperOptions(positioningOption));\n                popperInstance.setOptions(popperOptions);\n            }\n        },\n        destroy() {\n            if (popperInstance) {\n                popperInstance.destroy();\n                popperInstance = null;\n            }\n        }\n    };\n}\n\n/**\n * A configuration service for the [`NgbDatepickerInput`](#/components/datepicker/api#NgbDatepicker) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the datepicker inputs used in the application.\n *\n * @since 5.2.0\n */\nclass NgbInputDatepickerConfig extends NgbDatepickerConfig {\n    constructor() {\n        super(...arguments);\n        this.autoClose = true;\n        this.placement = ['bottom-start', 'bottom-end', 'top-start', 'top-end'];\n        this.restoreFocus = true;\n    }\n}\nNgbInputDatepickerConfig.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbInputDatepickerConfig, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\nNgbInputDatepickerConfig.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbInputDatepickerConfig, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbInputDatepickerConfig, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\nfunction addPopperOffset(offset$1) {\n    return (options) => {\n        options.modifiers.push(offset, {\n            name: 'offset',\n            options: {\n                offset: () => offset$1,\n            },\n        });\n        return options;\n    };\n}\n\nfunction NGB_DATEPICKER_PARSER_FORMATTER_FACTORY() {\n    return new NgbDateISOParserFormatter();\n}\n/**\n * An abstract service for parsing and formatting dates for the\n * [`NgbInputDatepicker`](#/components/datepicker/api#NgbInputDatepicker) directive.\n * Converts between the internal `NgbDateStruct` model presentation and a `string` that is displayed in the\n * input element.\n *\n * When user types something in the input this service attempts to parse it into a `NgbDateStruct` object.\n * And vice versa, when users selects a date in the calendar with the mouse, it must be displayed as a `string`\n * in the input.\n *\n * Default implementation uses the ISO 8601 format, but you can provide another implementation via DI\n * to use an alternative string format or a custom parsing logic.\n *\n * See the [date format overview](#/components/datepicker/overview#date-model) for more details.\n */\nclass NgbDateParserFormatter {\n}\nNgbDateParserFormatter.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbDateParserFormatter, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nNgbDateParserFormatter.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbDateParserFormatter, providedIn: 'root', useFactory: NGB_DATEPICKER_PARSER_FORMATTER_FACTORY });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbDateParserFormatter, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root', useFactory: NGB_DATEPICKER_PARSER_FORMATTER_FACTORY }]\n        }] });\nclass NgbDateISOParserFormatter extends NgbDateParserFormatter {\n    parse(value) {\n        if (value != null) {\n            const dateParts = value.trim().split('-');\n            if (dateParts.length === 1 && isNumber(dateParts[0])) {\n                return { year: toInteger(dateParts[0]), month: null, day: null };\n            }\n            else if (dateParts.length === 2 && isNumber(dateParts[0]) && isNumber(dateParts[1])) {\n                return { year: toInteger(dateParts[0]), month: toInteger(dateParts[1]), day: null };\n            }\n            else if (dateParts.length === 3 && isNumber(dateParts[0]) && isNumber(dateParts[1]) && isNumber(dateParts[2])) {\n                return { year: toInteger(dateParts[0]), month: toInteger(dateParts[1]), day: toInteger(dateParts[2]) };\n            }\n        }\n        return null;\n    }\n    format(date) {\n        return date ?\n            `${date.year}-${isNumber(date.month) ? padNumber(date.month) : ''}-${isNumber(date.day) ? padNumber(date.day) : ''}` :\n            '';\n    }\n}\nNgbDateISOParserFormatter.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbDateISOParserFormatter, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\nNgbDateISOParserFormatter.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbDateISOParserFormatter });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbDateISOParserFormatter, decorators: [{\n            type: Injectable\n        }] });\n\n/**\n * A directive that allows to stick a datepicker popup to an input field.\n *\n * Manages interaction with the input field itself, does value formatting and provides forms integration.\n */\nclass NgbInputDatepicker {\n    constructor(_parserFormatter, _elRef, _vcRef, _renderer, _ngZone, _calendar, _dateAdapter, _document, _changeDetector, config) {\n        this._parserFormatter = _parserFormatter;\n        this._elRef = _elRef;\n        this._vcRef = _vcRef;\n        this._renderer = _renderer;\n        this._ngZone = _ngZone;\n        this._calendar = _calendar;\n        this._dateAdapter = _dateAdapter;\n        this._document = _document;\n        this._changeDetector = _changeDetector;\n        this._cRef = null;\n        this._disabled = false;\n        this._elWithFocus = null;\n        this._model = null;\n        this._positioning = ngbPositioning();\n        this._destroyCloseHandlers$ = new Subject();\n        /**\n         * An event emitted when user selects a date using keyboard or mouse.\n         *\n         * The payload of the event is currently selected `NgbDate`.\n         *\n         * @since 1.1.1\n         */\n        this.dateSelect = new EventEmitter();\n        /**\n         * Event emitted right after the navigation happens and displayed month changes.\n         *\n         * See [`NgbDatepickerNavigateEvent`](#/components/datepicker/api#NgbDatepickerNavigateEvent) for the payload info.\n         */\n        this.navigate = new EventEmitter();\n        /**\n         * An event fired after closing datepicker window.\n         *\n         * @since 4.2.0\n         */\n        this.closed = new EventEmitter();\n        this._onChange = (_) => { };\n        this._onTouched = () => { };\n        this._validatorChange = () => { };\n        ['autoClose', 'container', 'positionTarget', 'placement'].forEach(input => this[input] = config[input]);\n    }\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = value === '' || (value && value !== 'false');\n        if (this.isOpen()) {\n            this._cRef.instance.setDisabledState(this._disabled);\n        }\n    }\n    registerOnChange(fn) { this._onChange = fn; }\n    registerOnTouched(fn) { this._onTouched = fn; }\n    registerOnValidatorChange(fn) { this._validatorChange = fn; }\n    setDisabledState(isDisabled) { this.disabled = isDisabled; }\n    validate(c) {\n        const { value } = c;\n        if (value != null) {\n            const ngbDate = this._fromDateStruct(this._dateAdapter.fromModel(value));\n            if (!ngbDate) {\n                return { 'ngbDate': { invalid: value } };\n            }\n            if (this.minDate && ngbDate.before(NgbDate.from(this.minDate))) {\n                return { 'ngbDate': { minDate: { minDate: this.minDate, actual: value } } };\n            }\n            if (this.maxDate && ngbDate.after(NgbDate.from(this.maxDate))) {\n                return { 'ngbDate': { maxDate: { maxDate: this.maxDate, actual: value } } };\n            }\n        }\n        return null;\n    }\n    writeValue(value) {\n        this._model = this._fromDateStruct(this._dateAdapter.fromModel(value));\n        this._writeModelValue(this._model);\n    }\n    manualDateChange(value, updateView = false) {\n        const inputValueChanged = value !== this._inputValue;\n        if (inputValueChanged) {\n            this._inputValue = value;\n            this._model = this._fromDateStruct(this._parserFormatter.parse(value));\n        }\n        if (inputValueChanged || !updateView) {\n            this._onChange(this._model ? this._dateAdapter.toModel(this._model) : (value === '' ? null : value));\n        }\n        if (updateView && this._model) {\n            this._writeModelValue(this._model);\n        }\n    }\n    isOpen() { return !!this._cRef; }\n    /**\n     * Opens the datepicker popup.\n     *\n     * If the related form control contains a valid date, the corresponding month will be opened.\n     */\n    open() {\n        if (!this.isOpen()) {\n            this._cRef = this._vcRef.createComponent(NgbDatepicker);\n            this._applyPopupStyling(this._cRef.location.nativeElement);\n            this._applyDatepickerInputs(this._cRef.instance);\n            this._subscribeForDatepickerOutputs(this._cRef.instance);\n            this._cRef.instance.ngOnInit();\n            this._cRef.instance.writeValue(this._dateAdapter.toModel(this._model));\n            // date selection event handling\n            this._cRef.instance.registerOnChange((selectedDate) => {\n                this.writeValue(selectedDate);\n                this._onChange(selectedDate);\n                this._onTouched();\n            });\n            this._cRef.changeDetectorRef.detectChanges();\n            this._cRef.instance.setDisabledState(this.disabled);\n            if (this.container === 'body') {\n                this._document.querySelector(this.container).appendChild(this._cRef.location.nativeElement);\n            }\n            // focus handling\n            this._elWithFocus = this._document.activeElement;\n            ngbFocusTrap(this._ngZone, this._cRef.location.nativeElement, this.closed, true);\n            setTimeout(() => { var _a; return (_a = this._cRef) === null || _a === void 0 ? void 0 : _a.instance.focus(); });\n            let hostElement;\n            if (isString(this.positionTarget)) {\n                hostElement = this._document.querySelector(this.positionTarget);\n            }\n            else if (this.positionTarget instanceof HTMLElement) {\n                hostElement = this.positionTarget;\n            }\n            else {\n                hostElement = this._elRef.nativeElement;\n            }\n            // Setting up popper and scheduling updates when zone is stable\n            this._ngZone.runOutsideAngular(() => {\n                if (this._cRef) {\n                    this._positioning.createPopper({\n                        hostElement,\n                        targetElement: this._cRef.location.nativeElement,\n                        placement: this.placement,\n                        appendToBody: this.container === 'body',\n                        updatePopperOptions: addPopperOffset([0, 2])\n                    });\n                    this._zoneSubscription = this._ngZone.onStable.subscribe(() => this._positioning.update());\n                }\n            });\n            if (this.positionTarget && !hostElement) {\n                throw new Error('ngbDatepicker could not find element declared in [positionTarget] to position against.');\n            }\n            this._setCloseHandlers();\n        }\n    }\n    /**\n     * Closes the datepicker popup.\n     */\n    close() {\n        var _a;\n        if (this.isOpen()) {\n            this._vcRef.remove(this._vcRef.indexOf(this._cRef.hostView));\n            this._cRef = null;\n            this._positioning.destroy();\n            (_a = this._zoneSubscription) === null || _a === void 0 ? void 0 : _a.unsubscribe();\n            this._destroyCloseHandlers$.next();\n            this.closed.emit();\n            this._changeDetector.markForCheck();\n            // restore focus\n            let elementToFocus = this._elWithFocus;\n            if (isString(this.restoreFocus)) {\n                elementToFocus = this._document.querySelector(this.restoreFocus);\n            }\n            else if (this.restoreFocus !== undefined) {\n                elementToFocus = this.restoreFocus;\n            }\n            // in IE document.activeElement can contain an object without 'focus()' sometimes\n            if (elementToFocus && elementToFocus['focus']) {\n                elementToFocus.focus();\n            }\n            else {\n                this._document.body.focus();\n            }\n        }\n    }\n    /**\n     * Toggles the datepicker popup.\n     */\n    toggle() {\n        if (this.isOpen()) {\n            this.close();\n        }\n        else {\n            this.open();\n        }\n    }\n    /**\n     * Navigates to the provided date.\n     *\n     * With the default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n     * If nothing or invalid date provided calendar will open current month.\n     *\n     * Use the `[startDate]` input as an alternative.\n     */\n    navigateTo(date) {\n        if (this.isOpen()) {\n            this._cRef.instance.navigateTo(date);\n        }\n    }\n    onBlur() { this._onTouched(); }\n    onFocus() { this._elWithFocus = this._elRef.nativeElement; }\n    ngOnChanges(changes) {\n        if (changes['minDate'] || changes['maxDate']) {\n            this._validatorChange();\n            if (this.isOpen()) {\n                if (changes['minDate']) {\n                    this._cRef.instance.minDate = this.minDate;\n                }\n                if (changes['maxDate']) {\n                    this._cRef.instance.maxDate = this.maxDate;\n                }\n                this._cRef.instance.ngOnChanges(changes);\n            }\n        }\n        if (changes['datepickerClass']) {\n            const { currentValue, previousValue } = changes['datepickerClass'];\n            this._applyPopupClass(currentValue, previousValue);\n        }\n        if (changes['autoClose'] && this.isOpen()) {\n            this._setCloseHandlers();\n        }\n    }\n    ngOnDestroy() { this.close(); }\n    _applyDatepickerInputs(datepickerInstance) {\n        ['dayTemplate', 'dayTemplateData', 'displayMonths', 'firstDayOfWeek', 'footerTemplate', 'markDisabled', 'minDate',\n            'maxDate', 'navigation', 'outsideDays', 'showNavigation', 'showWeekNumbers', 'weekdays']\n            .forEach((optionName) => {\n            if (this[optionName] !== undefined) {\n                datepickerInstance[optionName] = this[optionName];\n            }\n        });\n        datepickerInstance.startDate = this.startDate || this._model;\n    }\n    _applyPopupClass(newClass, oldClass) {\n        var _a;\n        const popupEl = (_a = this._cRef) === null || _a === void 0 ? void 0 : _a.location.nativeElement;\n        if (popupEl) {\n            if (newClass) {\n                this._renderer.addClass(popupEl, newClass);\n            }\n            if (oldClass) {\n                this._renderer.removeClass(popupEl, oldClass);\n            }\n        }\n    }\n    _applyPopupStyling(nativeElement) {\n        this._renderer.addClass(nativeElement, 'dropdown-menu');\n        this._renderer.addClass(nativeElement, 'show');\n        if (this.container === 'body') {\n            this._renderer.addClass(nativeElement, 'ngb-dp-body');\n        }\n        this._applyPopupClass(this.datepickerClass);\n    }\n    _subscribeForDatepickerOutputs(datepickerInstance) {\n        datepickerInstance.navigate.subscribe(navigateEvent => this.navigate.emit(navigateEvent));\n        datepickerInstance.dateSelect.subscribe(date => {\n            this.dateSelect.emit(date);\n            if (this.autoClose === true || this.autoClose === 'inside') {\n                this.close();\n            }\n        });\n    }\n    _writeModelValue(model) {\n        const value = this._parserFormatter.format(model);\n        this._inputValue = value;\n        this._renderer.setProperty(this._elRef.nativeElement, 'value', value);\n        if (this.isOpen()) {\n            this._cRef.instance.writeValue(this._dateAdapter.toModel(model));\n            this._onTouched();\n        }\n    }\n    _fromDateStruct(date) {\n        const ngbDate = date ? new NgbDate(date.year, date.month, date.day) : null;\n        return this._calendar.isValid(ngbDate) ? ngbDate : null;\n    }\n    _setCloseHandlers() {\n        this._destroyCloseHandlers$.next();\n        ngbAutoClose(this._ngZone, this._document, this.autoClose, () => this.close(), this._destroyCloseHandlers$, [], [this._elRef.nativeElement, this._cRef.location.nativeElement]);\n    }\n}\nNgbInputDatepicker.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbInputDatepicker, deps: [{ token: NgbDateParserFormatter }, { token: i0.ElementRef }, { token: i0.ViewContainerRef }, { token: i0.Renderer2 }, { token: i0.NgZone }, { token: NgbCalendar }, { token: NgbDateAdapter }, { token: DOCUMENT }, { token: i0.ChangeDetectorRef }, { token: NgbInputDatepickerConfig }], target: i0.ɵɵFactoryTarget.Directive });\nNgbInputDatepicker.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.3\", type: NgbInputDatepicker, selector: \"input[ngbDatepicker]\", inputs: { autoClose: \"autoClose\", datepickerClass: \"datepickerClass\", dayTemplate: \"dayTemplate\", dayTemplateData: \"dayTemplateData\", displayMonths: \"displayMonths\", firstDayOfWeek: \"firstDayOfWeek\", footerTemplate: \"footerTemplate\", markDisabled: \"markDisabled\", minDate: \"minDate\", maxDate: \"maxDate\", navigation: \"navigation\", outsideDays: \"outsideDays\", placement: \"placement\", restoreFocus: \"restoreFocus\", showWeekNumbers: \"showWeekNumbers\", startDate: \"startDate\", container: \"container\", positionTarget: \"positionTarget\", weekdays: \"weekdays\", disabled: \"disabled\" }, outputs: { dateSelect: \"dateSelect\", navigate: \"navigate\", closed: \"closed\" }, host: { listeners: { \"input\": \"manualDateChange($event.target.value)\", \"change\": \"manualDateChange($event.target.value, true)\", \"focus\": \"onFocus()\", \"blur\": \"onBlur()\" }, properties: { \"disabled\": \"disabled\" } }, providers: [\n        { provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => NgbInputDatepicker), multi: true },\n        { provide: NG_VALIDATORS, useExisting: forwardRef(() => NgbInputDatepicker), multi: true },\n        { provide: NgbDatepickerConfig, useExisting: NgbInputDatepickerConfig }\n    ], exportAs: [\"ngbDatepicker\"], usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbInputDatepicker, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'input[ngbDatepicker]',\n                    exportAs: 'ngbDatepicker',\n                    host: {\n                        '(input)': 'manualDateChange($event.target.value)',\n                        '(change)': 'manualDateChange($event.target.value, true)',\n                        '(focus)': 'onFocus()',\n                        '(blur)': 'onBlur()',\n                        '[disabled]': 'disabled'\n                    },\n                    providers: [\n                        { provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => NgbInputDatepicker), multi: true },\n                        { provide: NG_VALIDATORS, useExisting: forwardRef(() => NgbInputDatepicker), multi: true },\n                        { provide: NgbDatepickerConfig, useExisting: NgbInputDatepickerConfig }\n                    ],\n                }]\n        }], ctorParameters: function () {\n        return [{ type: NgbDateParserFormatter }, { type: i0.ElementRef }, { type: i0.ViewContainerRef }, { type: i0.Renderer2 }, { type: i0.NgZone }, { type: NgbCalendar }, { type: NgbDateAdapter }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }, { type: i0.ChangeDetectorRef }, { type: NgbInputDatepickerConfig }];\n    }, propDecorators: { autoClose: [{\n                type: Input\n            }], datepickerClass: [{\n                type: Input\n            }], dayTemplate: [{\n                type: Input\n            }], dayTemplateData: [{\n                type: Input\n            }], displayMonths: [{\n                type: Input\n            }], firstDayOfWeek: [{\n                type: Input\n            }], footerTemplate: [{\n                type: Input\n            }], markDisabled: [{\n                type: Input\n            }], minDate: [{\n                type: Input\n            }], maxDate: [{\n                type: Input\n            }], navigation: [{\n                type: Input\n            }], outsideDays: [{\n                type: Input\n            }], placement: [{\n                type: Input\n            }], restoreFocus: [{\n                type: Input\n            }], showWeekNumbers: [{\n                type: Input\n            }], startDate: [{\n                type: Input\n            }], container: [{\n                type: Input\n            }], positionTarget: [{\n                type: Input\n            }], weekdays: [{\n                type: Input\n            }], dateSelect: [{\n                type: Output\n            }], navigate: [{\n                type: Output\n            }], closed: [{\n                type: Output\n            }], disabled: [{\n                type: Input\n            }] } });\n\nclass NgbCalendarHijri extends NgbCalendar {\n    getDaysPerWeek() { return 7; }\n    getMonths() { return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]; }\n    getWeeksPerMonth() { return 6; }\n    getNext(date, period = 'd', number = 1) {\n        date = new NgbDate(date.year, date.month, date.day);\n        switch (period) {\n            case 'y':\n                date = this._setYear(date, date.year + number);\n                date.month = 1;\n                date.day = 1;\n                return date;\n            case 'm':\n                date = this._setMonth(date, date.month + number);\n                date.day = 1;\n                return date;\n            case 'd':\n                return this._setDay(date, date.day + number);\n            default:\n                return date;\n        }\n    }\n    getPrev(date, period = 'd', number = 1) { return this.getNext(date, period, -number); }\n    getWeekday(date) {\n        const day = this.toGregorian(date).getDay();\n        // in JS Date Sun=0, in ISO 8601 Sun=7\n        return day === 0 ? 7 : day;\n    }\n    getWeekNumber(week, firstDayOfWeek) {\n        // in JS Date Sun=0, in ISO 8601 Sun=7\n        if (firstDayOfWeek === 7) {\n            firstDayOfWeek = 0;\n        }\n        const thursdayIndex = (4 + 7 - firstDayOfWeek) % 7;\n        const date = week[thursdayIndex];\n        const jsDate = this.toGregorian(date);\n        jsDate.setDate(jsDate.getDate() + 4 - (jsDate.getDay() || 7)); // Thursday\n        const time = jsDate.getTime();\n        const MuhDate = this.toGregorian(new NgbDate(date.year, 1, 1)); // Compare with Muharram 1\n        return Math.floor(Math.round((time - MuhDate.getTime()) / 86400000) / 7) + 1;\n    }\n    getToday() { return this.fromGregorian(new Date()); }\n    isValid(date) {\n        return date != null && isNumber(date.year) && isNumber(date.month) && isNumber(date.day) &&\n            !isNaN(this.toGregorian(date).getTime());\n    }\n    _setDay(date, day) {\n        day = +day;\n        let mDays = this.getDaysPerMonth(date.month, date.year);\n        if (day <= 0) {\n            while (day <= 0) {\n                date = this._setMonth(date, date.month - 1);\n                mDays = this.getDaysPerMonth(date.month, date.year);\n                day += mDays;\n            }\n        }\n        else if (day > mDays) {\n            while (day > mDays) {\n                day -= mDays;\n                date = this._setMonth(date, date.month + 1);\n                mDays = this.getDaysPerMonth(date.month, date.year);\n            }\n        }\n        date.day = day;\n        return date;\n    }\n    _setMonth(date, month) {\n        month = +month;\n        date.year = date.year + Math.floor((month - 1) / 12);\n        date.month = Math.floor(((month - 1) % 12 + 12) % 12) + 1;\n        return date;\n    }\n    _setYear(date, year) {\n        date.year = +year;\n        return date;\n    }\n}\nNgbCalendarHijri.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbCalendarHijri, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\nNgbCalendarHijri.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbCalendarHijri });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbCalendarHijri, decorators: [{\n            type: Injectable\n        }] });\n\n/**\n * Checks if islamic year is a leap year\n */\nfunction isIslamicLeapYear(hYear) {\n    return (14 + 11 * hYear) % 30 < 11;\n}\n/**\n * Checks if gregorian years is a leap year\n */\nfunction isGregorianLeapYear$1(gDate) {\n    const year = gDate.getFullYear();\n    return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n}\n/**\n * Returns the start of Hijri Month.\n * `hMonth` is 0 for Muharram, 1 for Safar, etc.\n * `hYear` is any Hijri hYear.\n */\nfunction getIslamicMonthStart(hYear, hMonth) {\n    return Math.ceil(29.5 * hMonth) + (hYear - 1) * 354 + Math.floor((3 + 11 * hYear) / 30.0);\n}\n/**\n * Returns the start of Hijri year.\n * `year` is any Hijri year.\n */\nfunction getIslamicYearStart(year) {\n    return (year - 1) * 354 + Math.floor((3 + 11 * year) / 30.0);\n}\nfunction mod$1(a, b) {\n    return a - b * Math.floor(a / b);\n}\n/**\n * The civil calendar is one type of Hijri calendars used in islamic countries.\n * Uses a fixed cycle of alternating 29- and 30-day months,\n * with a leap day added to the last month of 11 out of every 30 years.\n * http://cldr.unicode.org/development/development-process/design-proposals/islamic-calendar-types\n * All the calculations here are based on the equations from \"Calendrical Calculations\" By Edward M. Reingold, Nachum\n * Dershowitz.\n */\nconst GREGORIAN_EPOCH$1 = 1721425.5;\nconst ISLAMIC_EPOCH = 1948439.5;\nclass NgbCalendarIslamicCivil extends NgbCalendarHijri {\n    /**\n     * Returns the equivalent islamic(civil) date value for a give input Gregorian date.\n     * `gDate` is a JS Date to be converted to Hijri.\n     */\n    fromGregorian(gDate) {\n        const gYear = gDate.getFullYear(), gMonth = gDate.getMonth(), gDay = gDate.getDate();\n        let julianDay = GREGORIAN_EPOCH$1 - 1 + 365 * (gYear - 1) + Math.floor((gYear - 1) / 4) +\n            -Math.floor((gYear - 1) / 100) + Math.floor((gYear - 1) / 400) +\n            Math.floor((367 * (gMonth + 1) - 362) / 12 + (gMonth + 1 <= 2 ? 0 : isGregorianLeapYear$1(gDate) ? -1 : -2) + gDay);\n        julianDay = Math.floor(julianDay) + 0.5;\n        const days = julianDay - ISLAMIC_EPOCH;\n        const hYear = Math.floor((30 * days + 10646) / 10631.0);\n        let hMonth = Math.ceil((days - 29 - getIslamicYearStart(hYear)) / 29.5);\n        hMonth = Math.min(hMonth, 11);\n        const hDay = Math.ceil(days - getIslamicMonthStart(hYear, hMonth)) + 1;\n        return new NgbDate(hYear, hMonth + 1, hDay);\n    }\n    /**\n     * Returns the equivalent JS date value for a give input islamic(civil) date.\n     * `hDate` is an islamic(civil) date to be converted to Gregorian.\n     */\n    toGregorian(hDate) {\n        const hYear = hDate.year;\n        const hMonth = hDate.month - 1;\n        const hDay = hDate.day;\n        const julianDay = hDay + Math.ceil(29.5 * hMonth) + (hYear - 1) * 354 + Math.floor((3 + 11 * hYear) / 30) + ISLAMIC_EPOCH - 1;\n        const wjd = Math.floor(julianDay - 0.5) + 0.5, depoch = wjd - GREGORIAN_EPOCH$1, quadricent = Math.floor(depoch / 146097), dqc = mod$1(depoch, 146097), cent = Math.floor(dqc / 36524), dcent = mod$1(dqc, 36524), quad = Math.floor(dcent / 1461), dquad = mod$1(dcent, 1461), yindex = Math.floor(dquad / 365);\n        let year = quadricent * 400 + cent * 100 + quad * 4 + yindex;\n        if (!(cent === 4 || yindex === 4)) {\n            year++;\n        }\n        const gYearStart = GREGORIAN_EPOCH$1 + 365 * (year - 1) + Math.floor((year - 1) / 4) - Math.floor((year - 1) / 100) +\n            Math.floor((year - 1) / 400);\n        const yearday = wjd - gYearStart;\n        const tjd = GREGORIAN_EPOCH$1 - 1 + 365 * (year - 1) + Math.floor((year - 1) / 4) - Math.floor((year - 1) / 100) +\n            Math.floor((year - 1) / 400) + Math.floor(739 / 12 + (isGregorianLeapYear$1(new Date(year, 3, 1)) ? -1 : -2) + 1);\n        const leapadj = wjd < tjd ? 0 : isGregorianLeapYear$1(new Date(year, 3, 1)) ? 1 : 2;\n        const month = Math.floor(((yearday + leapadj) * 12 + 373) / 367);\n        const tjd2 = GREGORIAN_EPOCH$1 - 1 + 365 * (year - 1) + Math.floor((year - 1) / 4) - Math.floor((year - 1) / 100) +\n            Math.floor((year - 1) / 400) +\n            Math.floor((367 * month - 362) / 12 + (month <= 2 ? 0 : isGregorianLeapYear$1(new Date(year, month - 1, 1)) ? -1 : -2) +\n                1);\n        const day = wjd - tjd2 + 1;\n        return new Date(year, month - 1, day);\n    }\n    /**\n     * Returns the number of days in a specific Hijri month.\n     * `month` is 1 for Muharram, 2 for Safar, etc.\n     * `year` is any Hijri year.\n     */\n    getDaysPerMonth(month, year) {\n        year = year + Math.floor(month / 13);\n        month = ((month - 1) % 12) + 1;\n        let length = 29 + month % 2;\n        if (month === 12 && isIslamicLeapYear(year)) {\n            length++;\n        }\n        return length;\n    }\n}\nNgbCalendarIslamicCivil.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbCalendarIslamicCivil, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\nNgbCalendarIslamicCivil.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbCalendarIslamicCivil });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbCalendarIslamicCivil, decorators: [{\n            type: Injectable\n        }] });\n\n/**\n * Umalqura calendar is one type of Hijri calendars used in islamic countries.\n * This Calendar is used by Saudi Arabia for administrative purpose.\n * Unlike tabular calendars, the algorithm involves astronomical calculation, but it's still deterministic.\n * http://cldr.unicode.org/development/development-process/design-proposals/islamic-calendar-types\n */\nconst GREGORIAN_FIRST_DATE = new Date(1882, 10, 12);\nconst GREGORIAN_LAST_DATE = new Date(2174, 10, 25);\nconst HIJRI_BEGIN = 1300;\nconst HIJRI_END = 1600;\nconst ONE_DAY = 1000 * 60 * 60 * 24;\nconst MONTH_LENGTH = [\n    // 1300-1304\n    '101010101010', '110101010100', '111011001001', '011011010100', '011011101010',\n    // 1305-1309\n    '001101101100', '101010101101', '010101010101', '011010101001', '011110010010',\n    // 1310-1314\n    '101110101001', '010111010100', '101011011010', '010101011100', '110100101101',\n    // 1315-1319\n    '011010010101', '011101001010', '101101010100', '101101101010', '010110101101',\n    // 1320-1324\n    '010010101110', '101001001111', '010100010111', '011010001011', '011010100101',\n    // 1325-1329\n    '101011010101', '001011010110', '100101011011', '010010011101', '101001001101',\n    // 1330-1334\n    '110100100110', '110110010101', '010110101100', '100110110110', '001010111010',\n    // 1335-1339\n    '101001011011', '010100101011', '101010010101', '011011001010', '101011101001',\n    // 1340-1344\n    '001011110100', '100101110110', '001010110110', '100101010110', '101011001010',\n    // 1345-1349\n    '101110100100', '101111010010', '010111011001', '001011011100', '100101101101',\n    // 1350-1354\n    '010101001101', '101010100101', '101101010010', '101110100101', '010110110100',\n    // 1355-1359\n    '100110110110', '010101010111', '001010010111', '010101001011', '011010100011',\n    // 1360-1364\n    '011101010010', '101101100101', '010101101010', '101010101011', '010100101011',\n    // 1365-1369\n    '110010010101', '110101001010', '110110100101', '010111001010', '101011010110',\n    // 1370-1374\n    '100101010111', '010010101011', '100101001011', '101010100101', '101101010010',\n    // 1375-1379\n    '101101101010', '010101110101', '001001110110', '100010110111', '010001011011',\n    // 1380-1384\n    '010101010101', '010110101001', '010110110100', '100111011010', '010011011101',\n    // 1385-1389\n    '001001101110', '100100110110', '101010101010', '110101010100', '110110110010',\n    // 1390-1394\n    '010111010101', '001011011010', '100101011011', '010010101011', '101001010101',\n    // 1395-1399\n    '101101001001', '101101100100', '101101110001', '010110110100', '101010110101',\n    // 1400-1404\n    '101001010101', '110100100101', '111010010010', '111011001001', '011011010100',\n    // 1405-1409\n    '101011101001', '100101101011', '010010101011', '101010010011', '110101001001',\n    // 1410-1414\n    '110110100100', '110110110010', '101010111001', '010010111010', '101001011011',\n    // 1415-1419\n    '010100101011', '101010010101', '101100101010', '101101010101', '010101011100',\n    // 1420-1424\n    '010010111101', '001000111101', '100100011101', '101010010101', '101101001010',\n    // 1425-1429\n    '101101011010', '010101101101', '001010110110', '100100111011', '010010011011',\n    // 1430-1434\n    '011001010101', '011010101001', '011101010100', '101101101010', '010101101100',\n    // 1435-1439\n    '101010101101', '010101010101', '101100101001', '101110010010', '101110101001',\n    // 1440-1444\n    '010111010100', '101011011010', '010101011010', '101010101011', '010110010101',\n    // 1445-1449\n    '011101001001', '011101100100', '101110101010', '010110110101', '001010110110',\n    // 1450-1454\n    '101001010110', '111001001101', '101100100101', '101101010010', '101101101010',\n    // 1455-1459\n    '010110101101', '001010101110', '100100101111', '010010010111', '011001001011',\n    // 1460-1464\n    '011010100101', '011010101100', '101011010110', '010101011101', '010010011101',\n    // 1465-1469\n    '101001001101', '110100010110', '110110010101', '010110101010', '010110110101',\n    // 1470-1474\n    '001011011010', '100101011011', '010010101101', '010110010101', '011011001010',\n    // 1475-1479\n    '011011100100', '101011101010', '010011110101', '001010110110', '100101010110',\n    // 1480-1484\n    '101010101010', '101101010100', '101111010010', '010111011001', '001011101010',\n    // 1485-1489\n    '100101101101', '010010101101', '101010010101', '101101001010', '101110100101',\n    // 1490-1494\n    '010110110010', '100110110101', '010011010110', '101010010111', '010101000111',\n    // 1495-1499\n    '011010010011', '011101001001', '101101010101', '010101101010', '101001101011',\n    // 1500-1504\n    '010100101011', '101010001011', '110101000110', '110110100011', '010111001010',\n    // 1505-1509\n    '101011010110', '010011011011', '001001101011', '100101001011', '101010100101',\n    // 1510-1514\n    '101101010010', '101101101001', '010101110101', '000101110110', '100010110111',\n    // 1515-1519\n    '001001011011', '010100101011', '010101100101', '010110110100', '100111011010',\n    // 1520-1524\n    '010011101101', '000101101101', '100010110110', '101010100110', '110101010010',\n    // 1525-1529\n    '110110101001', '010111010100', '101011011010', '100101011011', '010010101011',\n    // 1530-1534\n    '011001010011', '011100101001', '011101100010', '101110101001', '010110110010',\n    // 1535-1539\n    '101010110101', '010101010101', '101100100101', '110110010010', '111011001001',\n    // 1540-1544\n    '011011010010', '101011101001', '010101101011', '010010101011', '101001010101',\n    // 1545-1549\n    '110100101001', '110101010100', '110110101010', '100110110101', '010010111010',\n    // 1550-1554\n    '101000111011', '010010011011', '101001001101', '101010101010', '101011010101',\n    // 1555-1559\n    '001011011010', '100101011101', '010001011110', '101000101110', '110010011010',\n    // 1560-1564\n    '110101010101', '011010110010', '011010111001', '010010111010', '101001011101',\n    // 1565-1569\n    '010100101101', '101010010101', '101101010010', '101110101000', '101110110100',\n    // 1570-1574\n    '010110111001', '001011011010', '100101011010', '101101001010', '110110100100',\n    // 1575-1579\n    '111011010001', '011011101000', '101101101010', '010101101101', '010100110101',\n    // 1580-1584\n    '011010010101', '110101001010', '110110101000', '110111010100', '011011011010',\n    // 1585-1589\n    '010101011011', '001010011101', '011000101011', '101100010101', '101101001010',\n    // 1590-1594\n    '101110010101', '010110101010', '101010101110', '100100101110', '110010001111',\n    // 1595-1599\n    '010100100111', '011010010101', '011010101010', '101011010110', '010101011101',\n    // 1600\n    '001010011101'\n];\nfunction getDaysDiff(date1, date2) {\n    // Ignores the time part in date1 and date2:\n    const time1 = Date.UTC(date1.getFullYear(), date1.getMonth(), date1.getDate());\n    const time2 = Date.UTC(date2.getFullYear(), date2.getMonth(), date2.getDate());\n    const diff = Math.abs(time1 - time2);\n    return Math.round(diff / ONE_DAY);\n}\nclass NgbCalendarIslamicUmalqura extends NgbCalendarIslamicCivil {\n    /**\n    * Returns the equivalent islamic(Umalqura) date value for a give input Gregorian date.\n    * `gdate` is s JS Date to be converted to Hijri.\n    */\n    fromGregorian(gDate) {\n        let hDay = 1, hMonth = 0, hYear = 1300;\n        let daysDiff = getDaysDiff(gDate, GREGORIAN_FIRST_DATE);\n        if (gDate.getTime() - GREGORIAN_FIRST_DATE.getTime() >= 0 && gDate.getTime() - GREGORIAN_LAST_DATE.getTime() <= 0) {\n            let year = 1300;\n            for (let i = 0; i < MONTH_LENGTH.length; i++, year++) {\n                for (let j = 0; j < 12; j++) {\n                    let numOfDays = +MONTH_LENGTH[i][j] + 29;\n                    if (daysDiff <= numOfDays) {\n                        hDay = daysDiff + 1;\n                        if (hDay > numOfDays) {\n                            hDay = 1;\n                            j++;\n                        }\n                        if (j > 11) {\n                            j = 0;\n                            year++;\n                        }\n                        hMonth = j;\n                        hYear = year;\n                        return new NgbDate(hYear, hMonth + 1, hDay);\n                    }\n                    daysDiff = daysDiff - numOfDays;\n                }\n            }\n            return null;\n        }\n        else {\n            return super.fromGregorian(gDate);\n        }\n    }\n    /**\n    * Converts the current Hijri date to Gregorian.\n    */\n    toGregorian(hDate) {\n        const hYear = hDate.year;\n        const hMonth = hDate.month - 1;\n        const hDay = hDate.day;\n        let gDate = new Date(GREGORIAN_FIRST_DATE);\n        let dayDiff = hDay - 1;\n        if (hYear >= HIJRI_BEGIN && hYear <= HIJRI_END) {\n            for (let y = 0; y < hYear - HIJRI_BEGIN; y++) {\n                for (let m = 0; m < 12; m++) {\n                    dayDiff += +MONTH_LENGTH[y][m] + 29;\n                }\n            }\n            for (let m = 0; m < hMonth; m++) {\n                dayDiff += +MONTH_LENGTH[hYear - HIJRI_BEGIN][m] + 29;\n            }\n            gDate.setDate(GREGORIAN_FIRST_DATE.getDate() + dayDiff);\n        }\n        else {\n            gDate = super.toGregorian(hDate);\n        }\n        return gDate;\n    }\n    /**\n    * Returns the number of days in a specific Hijri hMonth.\n    * `hMonth` is 1 for Muharram, 2 for Safar, etc.\n    * `hYear` is any Hijri hYear.\n    */\n    getDaysPerMonth(hMonth, hYear) {\n        if (hYear >= HIJRI_BEGIN && hYear <= HIJRI_END) {\n            const pos = hYear - HIJRI_BEGIN;\n            return +MONTH_LENGTH[pos][hMonth - 1] + 29;\n        }\n        return super.getDaysPerMonth(hMonth, hYear);\n    }\n}\nNgbCalendarIslamicUmalqura.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbCalendarIslamicUmalqura, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\nNgbCalendarIslamicUmalqura.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbCalendarIslamicUmalqura });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbCalendarIslamicUmalqura, decorators: [{\n            type: Injectable\n        }] });\n\n/**\n * Returns the equivalent JS date value for a give input Jalali date.\n * `jalaliDate` is an Jalali date to be converted to Gregorian.\n */\nfunction toGregorian$2(jalaliDate) {\n    let jdn = jalaliToJulian(jalaliDate.year, jalaliDate.month, jalaliDate.day);\n    let date = julianToGregorian(jdn);\n    date.setHours(6, 30, 3, 200);\n    return date;\n}\n/**\n * Returns the equivalent jalali date value for a give input Gregorian date.\n * `gdate` is a JS Date to be converted to jalali.\n * utc to local\n */\nfunction fromGregorian$2(gdate) {\n    let g2d = gregorianToJulian(gdate.getFullYear(), gdate.getMonth() + 1, gdate.getDate());\n    return julianToJalali(g2d);\n}\nfunction setJalaliYear(date, yearValue) {\n    date.year = +yearValue;\n    return date;\n}\nfunction setJalaliMonth(date, month) {\n    month = +month;\n    date.year = date.year + Math.floor((month - 1) / 12);\n    date.month = Math.floor(((month - 1) % 12 + 12) % 12) + 1;\n    return date;\n}\nfunction setJalaliDay(date, day) {\n    let mDays = getDaysPerMonth(date.month, date.year);\n    if (day <= 0) {\n        while (day <= 0) {\n            date = setJalaliMonth(date, date.month - 1);\n            mDays = getDaysPerMonth(date.month, date.year);\n            day += mDays;\n        }\n    }\n    else if (day > mDays) {\n        while (day > mDays) {\n            day -= mDays;\n            date = setJalaliMonth(date, date.month + 1);\n            mDays = getDaysPerMonth(date.month, date.year);\n        }\n    }\n    date.day = day;\n    return date;\n}\nfunction mod(a, b) {\n    return a - b * Math.floor(a / b);\n}\nfunction div(a, b) {\n    return Math.trunc(a / b);\n}\n/*\n This function determines if the Jalali (Persian) year is\n leap (366-day long) or is the common year (365 days), and\n finds the day in March (Gregorian calendar) of the first\n day of the Jalali year (jalaliYear).\n @param jalaliYear Jalali calendar year (-61 to 3177)\n @return\n leap: number of years since the last leap year (0 to 4)\n gYear: Gregorian year of the beginning of Jalali year\n march: the March day of Farvardin the 1st (1st day of jalaliYear)\n @see: http://www.astro.uni.torun.pl/~kb/Papers/EMP/PersianC-EMP.htm\n @see: http://www.fourmilab.ch/documents/calendar/\n */\nfunction jalCal(jalaliYear) {\n    // Jalali years starting the 33-year rule.\n    let breaks = [-61, 9, 38, 199, 426, 686, 756, 818, 1111, 1181, 1210, 1635, 2060, 2097, 2192, 2262, 2324, 2394, 2456, 3178];\n    const breaksLength = breaks.length;\n    const gYear = jalaliYear + 621;\n    let leapJ = -14;\n    let jp = breaks[0];\n    if (jalaliYear < jp || jalaliYear >= breaks[breaksLength - 1]) {\n        throw new Error('Invalid Jalali year ' + jalaliYear);\n    }\n    // Find the limiting years for the Jalali year jalaliYear.\n    let jump;\n    for (let i = 1; i < breaksLength; i += 1) {\n        const jm = breaks[i];\n        jump = jm - jp;\n        if (jalaliYear < jm) {\n            break;\n        }\n        leapJ = leapJ + div(jump, 33) * 8 + div(mod(jump, 33), 4);\n        jp = jm;\n    }\n    let n = jalaliYear - jp;\n    // Find the number of leap years from AD 621 to the beginning\n    // of the current Jalali year in the Persian calendar.\n    leapJ = leapJ + div(n, 33) * 8 + div(mod(n, 33) + 3, 4);\n    if (mod(jump, 33) === 4 && jump - n === 4) {\n        leapJ += 1;\n    }\n    // And the same in the Gregorian calendar (until the year gYear).\n    const leapG = div(gYear, 4) - div((div(gYear, 100) + 1) * 3, 4) - 150;\n    // Determine the Gregorian date of Farvardin the 1st.\n    const march = 20 + leapJ - leapG;\n    // Find how many years have passed since the last leap year.\n    if (jump - n < 6) {\n        n = n - jump + div(jump + 4, 33) * 33;\n    }\n    let leap = mod(mod(n + 1, 33) - 1, 4);\n    if (leap === -1) {\n        leap = 4;\n    }\n    return { leap: leap, gy: gYear, march: march };\n}\n/*\n Calculates Gregorian and Julian calendar dates from the Julian Day number\n (jdn) for the period since jdn=-34839655 (i.e. the year -100100 of both\n calendars) to some millions years ahead of the present.\n @param jdn Julian Day number\n @return\n gYear: Calendar year (years BC numbered 0, -1, -2, ...)\n gMonth: Calendar month (1 to 12)\n gDay: Calendar day of the month M (1 to 28/29/30/31)\n */\nfunction julianToGregorian(julianDayNumber) {\n    let j = 4 * julianDayNumber + 139361631;\n    j = j + div(div(4 * julianDayNumber + 183187720, 146097) * 3, 4) * 4 - 3908;\n    const i = div(mod(j, 1461), 4) * 5 + 308;\n    const gDay = div(mod(i, 153), 5) + 1;\n    const gMonth = mod(div(i, 153), 12) + 1;\n    const gYear = div(j, 1461) - 100100 + div(8 - gMonth, 6);\n    return new Date(gYear, gMonth - 1, gDay);\n}\n/*\n Converts a date of the Jalali calendar to the Julian Day number.\n @param jy Jalali year (1 to 3100)\n @param jm Jalali month (1 to 12)\n @param jd Jalali day (1 to 29/31)\n @return Julian Day number\n */\nfunction gregorianToJulian(gy, gm, gd) {\n    let d = div((gy + div(gm - 8, 6) + 100100) * 1461, 4) + div(153 * mod(gm + 9, 12) + 2, 5) + gd - 34840408;\n    d = d - div(div(gy + 100100 + div(gm - 8, 6), 100) * 3, 4) + 752;\n    return d;\n}\n/*\n Converts the Julian Day number to a date in the Jalali calendar.\n @param julianDayNumber Julian Day number\n @return\n jalaliYear: Jalali year (1 to 3100)\n jalaliMonth: Jalali month (1 to 12)\n jalaliDay: Jalali day (1 to 29/31)\n */\nfunction julianToJalali(julianDayNumber) {\n    let gy = julianToGregorian(julianDayNumber).getFullYear() // Calculate Gregorian year (gy).\n    , jalaliYear = gy - 621, r = jalCal(jalaliYear), gregorianDay = gregorianToJulian(gy, 3, r.march), jalaliDay, jalaliMonth, numberOfDays;\n    // Find number of days that passed since 1 Farvardin.\n    numberOfDays = julianDayNumber - gregorianDay;\n    if (numberOfDays >= 0) {\n        if (numberOfDays <= 185) {\n            // The first 6 months.\n            jalaliMonth = 1 + div(numberOfDays, 31);\n            jalaliDay = mod(numberOfDays, 31) + 1;\n            return new NgbDate(jalaliYear, jalaliMonth, jalaliDay);\n        }\n        else {\n            // The remaining months.\n            numberOfDays -= 186;\n        }\n    }\n    else {\n        // Previous Jalali year.\n        jalaliYear -= 1;\n        numberOfDays += 179;\n        if (r.leap === 1) {\n            numberOfDays += 1;\n        }\n    }\n    jalaliMonth = 7 + div(numberOfDays, 30);\n    jalaliDay = mod(numberOfDays, 30) + 1;\n    return new NgbDate(jalaliYear, jalaliMonth, jalaliDay);\n}\n/*\n Converts a date of the Jalali calendar to the Julian Day number.\n @param jYear Jalali year (1 to 3100)\n @param jMonth Jalali month (1 to 12)\n @param jDay Jalali day (1 to 29/31)\n @return Julian Day number\n */\nfunction jalaliToJulian(jYear, jMonth, jDay) {\n    let r = jalCal(jYear);\n    return gregorianToJulian(r.gy, 3, r.march) + (jMonth - 1) * 31 - div(jMonth, 7) * (jMonth - 7) + jDay - 1;\n}\n/**\n * Returns the number of days in a specific jalali month.\n */\nfunction getDaysPerMonth(month, year) {\n    if (month <= 6) {\n        return 31;\n    }\n    if (month <= 11) {\n        return 30;\n    }\n    if (jalCal(year).leap === 0) {\n        return 30;\n    }\n    return 29;\n}\n\nclass NgbCalendarPersian extends NgbCalendar {\n    getDaysPerWeek() { return 7; }\n    getMonths() { return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]; }\n    getWeeksPerMonth() { return 6; }\n    getNext(date, period = 'd', number = 1) {\n        date = new NgbDate(date.year, date.month, date.day);\n        switch (period) {\n            case 'y':\n                date = setJalaliYear(date, date.year + number);\n                date.month = 1;\n                date.day = 1;\n                return date;\n            case 'm':\n                date = setJalaliMonth(date, date.month + number);\n                date.day = 1;\n                return date;\n            case 'd':\n                return setJalaliDay(date, date.day + number);\n            default:\n                return date;\n        }\n    }\n    getPrev(date, period = 'd', number = 1) { return this.getNext(date, period, -number); }\n    getWeekday(date) {\n        const day = toGregorian$2(date).getDay();\n        // in JS Date Sun=0, in ISO 8601 Sun=7\n        return day === 0 ? 7 : day;\n    }\n    getWeekNumber(week, firstDayOfWeek) {\n        // in JS Date Sun=0, in ISO 8601 Sun=7\n        if (firstDayOfWeek === 7) {\n            firstDayOfWeek = 0;\n        }\n        const thursdayIndex = (4 + 7 - firstDayOfWeek) % 7;\n        const date = week[thursdayIndex];\n        const jsDate = toGregorian$2(date);\n        jsDate.setDate(jsDate.getDate() + 4 - (jsDate.getDay() || 7)); // Thursday\n        const time = jsDate.getTime();\n        const startDate = toGregorian$2(new NgbDate(date.year, 1, 1));\n        return Math.floor(Math.round((time - startDate.getTime()) / 86400000) / 7) + 1;\n    }\n    getToday() { return fromGregorian$2(new Date()); }\n    isValid(date) {\n        return date != null && isInteger(date.year) && isInteger(date.month) && isInteger(date.day) &&\n            !isNaN(toGregorian$2(date).getTime());\n    }\n}\nNgbCalendarPersian.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbCalendarPersian, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\nNgbCalendarPersian.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbCalendarPersian });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbCalendarPersian, decorators: [{\n            type: Injectable\n        }] });\n\nconst PARTS_PER_HOUR = 1080;\nconst PARTS_PER_DAY = 24 * PARTS_PER_HOUR;\nconst PARTS_FRACTIONAL_MONTH = 12 * PARTS_PER_HOUR + 793;\nconst PARTS_PER_MONTH = 29 * PARTS_PER_DAY + PARTS_FRACTIONAL_MONTH;\nconst BAHARAD = 11 * PARTS_PER_HOUR + 204;\nconst HEBREW_DAY_ON_JAN_1_1970 = 2092591;\nconst GREGORIAN_EPOCH = 1721425.5;\nfunction isGregorianLeapYear(year) {\n    return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n}\nfunction numberOfFirstDayInYear(year) {\n    let monthsBeforeYear = Math.floor((235 * year - 234) / 19);\n    let fractionalMonthsBeforeYear = monthsBeforeYear * PARTS_FRACTIONAL_MONTH + BAHARAD;\n    let dayNumber = monthsBeforeYear * 29 + Math.floor(fractionalMonthsBeforeYear / PARTS_PER_DAY);\n    let timeOfDay = fractionalMonthsBeforeYear % PARTS_PER_DAY;\n    let dayOfWeek = dayNumber % 7; // 0 == Monday\n    if (dayOfWeek === 2 || dayOfWeek === 4 || dayOfWeek === 6) {\n        dayNumber++;\n        dayOfWeek = dayNumber % 7;\n    }\n    if (dayOfWeek === 1 && timeOfDay > 15 * PARTS_PER_HOUR + 204 && !isHebrewLeapYear(year)) {\n        dayNumber += 2;\n    }\n    else if (dayOfWeek === 0 && timeOfDay > 21 * PARTS_PER_HOUR + 589 && isHebrewLeapYear(year - 1)) {\n        dayNumber++;\n    }\n    return dayNumber;\n}\nfunction getDaysInGregorianMonth(month, year) {\n    let days = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n    if (isGregorianLeapYear(year)) {\n        days[1]++;\n    }\n    return days[month - 1];\n}\nfunction getHebrewMonths(year) {\n    return isHebrewLeapYear(year) ? 13 : 12;\n}\n/**\n * Returns the number of days in a specific Hebrew year.\n * `year` is any Hebrew year.\n */\nfunction getDaysInHebrewYear(year) {\n    return numberOfFirstDayInYear(year + 1) - numberOfFirstDayInYear(year);\n}\nfunction isHebrewLeapYear(year) {\n    if (year != null) {\n        let b = (year * 12 + 17) % 19;\n        return b >= ((b < 0) ? -7 : 12);\n    }\n    return false;\n}\n/**\n * Returns the number of days in a specific Hebrew month.\n * `month` is 1 for Nisan, 2 for Iyar etc. Note: Hebrew leap year contains 13 months.\n * `year` is any Hebrew year.\n */\nfunction getDaysInHebrewMonth(month, year) {\n    let yearLength = numberOfFirstDayInYear(year + 1) - numberOfFirstDayInYear(year);\n    let yearType = (yearLength <= 380 ? yearLength : (yearLength - 30)) - 353;\n    let leapYear = isHebrewLeapYear(year);\n    let daysInMonth = leapYear ? [30, 29, 29, 29, 30, 30, 29, 30, 29, 30, 29, 30, 29] :\n        [30, 29, 29, 29, 30, 29, 30, 29, 30, 29, 30, 29];\n    if (yearType > 0) {\n        daysInMonth[2]++; // Kislev gets an extra day in normal or complete years.\n    }\n    if (yearType > 1) {\n        daysInMonth[1]++; // Heshvan gets an extra day in complete years only.\n    }\n    return daysInMonth[month - 1];\n}\nfunction getDayNumberInHebrewYear(date) {\n    let numberOfDay = 0;\n    for (let i = 1; i < date.month; i++) {\n        numberOfDay += getDaysInHebrewMonth(i, date.year);\n    }\n    return numberOfDay + date.day;\n}\nfunction setHebrewMonth(date, val) {\n    let after = val >= 0;\n    if (!after) {\n        val = -val;\n    }\n    while (val > 0) {\n        if (after) {\n            if (val > getHebrewMonths(date.year) - date.month) {\n                val -= getHebrewMonths(date.year) - date.month + 1;\n                date.year++;\n                date.month = 1;\n            }\n            else {\n                date.month += val;\n                val = 0;\n            }\n        }\n        else {\n            if (val >= date.month) {\n                date.year--;\n                val -= date.month;\n                date.month = getHebrewMonths(date.year);\n            }\n            else {\n                date.month -= val;\n                val = 0;\n            }\n        }\n    }\n    return date;\n}\nfunction setHebrewDay(date, val) {\n    let after = val >= 0;\n    if (!after) {\n        val = -val;\n    }\n    while (val > 0) {\n        if (after) {\n            if (val > getDaysInHebrewYear(date.year) - getDayNumberInHebrewYear(date)) {\n                val -= getDaysInHebrewYear(date.year) - getDayNumberInHebrewYear(date) + 1;\n                date.year++;\n                date.month = 1;\n                date.day = 1;\n            }\n            else if (val > getDaysInHebrewMonth(date.month, date.year) - date.day) {\n                val -= getDaysInHebrewMonth(date.month, date.year) - date.day + 1;\n                date.month++;\n                date.day = 1;\n            }\n            else {\n                date.day += val;\n                val = 0;\n            }\n        }\n        else {\n            if (val >= date.day) {\n                val -= date.day;\n                date.month--;\n                if (date.month === 0) {\n                    date.year--;\n                    date.month = getHebrewMonths(date.year);\n                }\n                date.day = getDaysInHebrewMonth(date.month, date.year);\n            }\n            else {\n                date.day -= val;\n                val = 0;\n            }\n        }\n    }\n    return date;\n}\n/**\n * Returns the equivalent Hebrew date value for a give input Gregorian date.\n * `gdate` is a JS Date to be converted to Hebrew date.\n */\nfunction fromGregorian$1(gdate) {\n    const date = new Date(gdate);\n    const gYear = date.getFullYear(), gMonth = date.getMonth(), gDay = date.getDate();\n    let julianDay = GREGORIAN_EPOCH - 1 + 365 * (gYear - 1) + Math.floor((gYear - 1) / 4) -\n        Math.floor((gYear - 1) / 100) + Math.floor((gYear - 1) / 400) +\n        Math.floor((367 * (gMonth + 1) - 362) / 12 + (gMonth + 1 <= 2 ? 0 : isGregorianLeapYear(gYear) ? -1 : -2) + gDay);\n    julianDay = Math.floor(julianDay + 0.5);\n    let daysSinceHebEpoch = julianDay - 347997;\n    let monthsSinceHebEpoch = Math.floor(daysSinceHebEpoch * PARTS_PER_DAY / PARTS_PER_MONTH);\n    let hYear = Math.floor((monthsSinceHebEpoch * 19 + 234) / 235) + 1;\n    let firstDayOfThisYear = numberOfFirstDayInYear(hYear);\n    let dayOfYear = daysSinceHebEpoch - firstDayOfThisYear;\n    while (dayOfYear < 1) {\n        hYear--;\n        firstDayOfThisYear = numberOfFirstDayInYear(hYear);\n        dayOfYear = daysSinceHebEpoch - firstDayOfThisYear;\n    }\n    let hMonth = 1;\n    let hDay = dayOfYear;\n    while (hDay > getDaysInHebrewMonth(hMonth, hYear)) {\n        hDay -= getDaysInHebrewMonth(hMonth, hYear);\n        hMonth++;\n    }\n    return new NgbDate(hYear, hMonth, hDay);\n}\n/**\n * Returns the equivalent JS date value for a given Hebrew date.\n * `hebrewDate` is an Hebrew date to be converted to Gregorian.\n */\nfunction toGregorian$1(hebrewDate) {\n    const hYear = hebrewDate.year;\n    const hMonth = hebrewDate.month;\n    const hDay = hebrewDate.day;\n    let days = numberOfFirstDayInYear(hYear);\n    for (let i = 1; i < hMonth; i++) {\n        days += getDaysInHebrewMonth(i, hYear);\n    }\n    days += hDay;\n    let diffDays = days - HEBREW_DAY_ON_JAN_1_1970;\n    let after = diffDays >= 0;\n    if (!after) {\n        diffDays = -diffDays;\n    }\n    let gYear = 1970;\n    let gMonth = 1;\n    let gDay = 1;\n    while (diffDays > 0) {\n        if (after) {\n            if (diffDays >= (isGregorianLeapYear(gYear) ? 366 : 365)) {\n                diffDays -= isGregorianLeapYear(gYear) ? 366 : 365;\n                gYear++;\n            }\n            else if (diffDays >= getDaysInGregorianMonth(gMonth, gYear)) {\n                diffDays -= getDaysInGregorianMonth(gMonth, gYear);\n                gMonth++;\n            }\n            else {\n                gDay += diffDays;\n                diffDays = 0;\n            }\n        }\n        else {\n            if (diffDays >= (isGregorianLeapYear(gYear - 1) ? 366 : 365)) {\n                diffDays -= isGregorianLeapYear(gYear - 1) ? 366 : 365;\n                gYear--;\n            }\n            else {\n                if (gMonth > 1) {\n                    gMonth--;\n                }\n                else {\n                    gMonth = 12;\n                    gYear--;\n                }\n                if (diffDays >= getDaysInGregorianMonth(gMonth, gYear)) {\n                    diffDays -= getDaysInGregorianMonth(gMonth, gYear);\n                }\n                else {\n                    gDay = getDaysInGregorianMonth(gMonth, gYear) - diffDays + 1;\n                    diffDays = 0;\n                }\n            }\n        }\n    }\n    return new Date(gYear, gMonth - 1, gDay);\n}\nfunction hebrewNumerals(numerals) {\n    if (!numerals) {\n        return '';\n    }\n    const hArray0_9 = ['', '\\u05d0', '\\u05d1', '\\u05d2', '\\u05d3', '\\u05d4', '\\u05d5', '\\u05d6', '\\u05d7', '\\u05d8'];\n    const hArray10_19 = [\n        '\\u05d9', '\\u05d9\\u05d0', '\\u05d9\\u05d1', '\\u05d9\\u05d2', '\\u05d9\\u05d3', '\\u05d8\\u05d5', '\\u05d8\\u05d6',\n        '\\u05d9\\u05d6', '\\u05d9\\u05d7', '\\u05d9\\u05d8'\n    ];\n    const hArray20_90 = ['', '', '\\u05db', '\\u05dc', '\\u05de', '\\u05e0', '\\u05e1', '\\u05e2', '\\u05e4', '\\u05e6'];\n    const hArray100_900 = [\n        '', '\\u05e7', '\\u05e8', '\\u05e9', '\\u05ea', '\\u05ea\\u05e7', '\\u05ea\\u05e8', '\\u05ea\\u05e9', '\\u05ea\\u05ea',\n        '\\u05ea\\u05ea\\u05e7'\n    ];\n    const hArray1000_9000 = [\n        '', '\\u05d0', '\\u05d1', '\\u05d1\\u05d0', '\\u05d1\\u05d1', '\\u05d4', '\\u05d4\\u05d0', '\\u05d4\\u05d1',\n        '\\u05d4\\u05d1\\u05d0', '\\u05d4\\u05d1\\u05d1'\n    ];\n    const geresh = '\\u05f3', gershaim = '\\u05f4';\n    let mem = 0;\n    let result = [];\n    let step = 0;\n    while (numerals > 0) {\n        let m = numerals % 10;\n        if (step === 0) {\n            mem = m;\n        }\n        else if (step === 1) {\n            if (m !== 1) {\n                result.unshift(hArray20_90[m], hArray0_9[mem]);\n            }\n            else {\n                result.unshift(hArray10_19[mem]);\n            }\n        }\n        else if (step === 2) {\n            result.unshift(hArray100_900[m]);\n        }\n        else {\n            if (m !== 5) {\n                result.unshift(hArray1000_9000[m], geresh, ' ');\n            }\n            break;\n        }\n        numerals = Math.floor(numerals / 10);\n        if (step === 0 && numerals === 0) {\n            result.unshift(hArray0_9[m]);\n        }\n        step++;\n    }\n    result = result.join('').split('');\n    if (result.length === 1) {\n        result.push(geresh);\n    }\n    else if (result.length > 1) {\n        result.splice(result.length - 1, 0, gershaim);\n    }\n    return result.join('');\n}\n\n/**\n * @since 3.2.0\n */\nclass NgbCalendarHebrew extends NgbCalendar {\n    getDaysPerWeek() { return 7; }\n    getMonths(year) {\n        if (year && isHebrewLeapYear(year)) {\n            return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13];\n        }\n        else {\n            return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n        }\n    }\n    getWeeksPerMonth() { return 6; }\n    isValid(date) {\n        if (date != null) {\n            let b = isNumber(date.year) && isNumber(date.month) && isNumber(date.day);\n            b = b && date.month > 0 && date.month <= (isHebrewLeapYear(date.year) ? 13 : 12);\n            b = b && date.day > 0 && date.day <= getDaysInHebrewMonth(date.month, date.year);\n            return b && !isNaN(toGregorian$1(date).getTime());\n        }\n        return false;\n    }\n    getNext(date, period = 'd', number = 1) {\n        date = new NgbDate(date.year, date.month, date.day);\n        switch (period) {\n            case 'y':\n                date.year += number;\n                date.month = 1;\n                date.day = 1;\n                return date;\n            case 'm':\n                date = setHebrewMonth(date, number);\n                date.day = 1;\n                return date;\n            case 'd':\n                return setHebrewDay(date, number);\n            default:\n                return date;\n        }\n    }\n    getPrev(date, period = 'd', number = 1) { return this.getNext(date, period, -number); }\n    getWeekday(date) {\n        const day = toGregorian$1(date).getDay();\n        // in JS Date Sun=0, in ISO 8601 Sun=7\n        return day === 0 ? 7 : day;\n    }\n    getWeekNumber(week, firstDayOfWeek) {\n        const date = week[week.length - 1];\n        return Math.ceil(getDayNumberInHebrewYear(date) / 7);\n    }\n    getToday() { return fromGregorian$1(new Date()); }\n    /**\n     * @since 3.4.0\n     */\n    toGregorian(date) { return fromJSDate(toGregorian$1(date)); }\n    /**\n     * @since 3.4.0\n     */\n    fromGregorian(date) { return fromGregorian$1(toJSDate(date)); }\n}\nNgbCalendarHebrew.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbCalendarHebrew, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\nNgbCalendarHebrew.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbCalendarHebrew });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbCalendarHebrew, decorators: [{\n            type: Injectable\n        }] });\n\nconst WEEKDAYS = ['שני', 'שלישי', 'רביעי', 'חמישי', 'שישי', 'שבת', 'ראשון'];\nconst MONTHS = ['תשרי', 'חשון', 'כסלו', 'טבת', 'שבט', 'אדר', 'ניסן', 'אייר', 'סיון', 'תמוז', 'אב', 'אלול'];\nconst MONTHS_LEAP = ['תשרי', 'חשון', 'כסלו', 'טבת', 'שבט', 'אדר א׳', 'אדר ב׳', 'ניסן', 'אייר', 'סיון', 'תמוז', 'אב', 'אלול'];\n/**\n * @since 3.2.0\n */\nclass NgbDatepickerI18nHebrew extends NgbDatepickerI18n {\n    getMonthShortName(month, year) { return this.getMonthFullName(month, year); }\n    getMonthFullName(month, year) {\n        return isHebrewLeapYear(year) ? MONTHS_LEAP[month - 1] || '' : MONTHS[month - 1] || '';\n    }\n    getWeekdayLabel(weekday, width) { return WEEKDAYS[weekday - 1] || ''; }\n    getDayAriaLabel(date) {\n        return `${hebrewNumerals(date.day)} ${this.getMonthFullName(date.month, date.year)} ${hebrewNumerals(date.year)}`;\n    }\n    getDayNumerals(date) { return hebrewNumerals(date.day); }\n    getWeekNumerals(weekNumber) { return hebrewNumerals(weekNumber); }\n    getYearNumerals(year) { return hebrewNumerals(year); }\n}\nNgbDatepickerI18nHebrew.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbDatepickerI18nHebrew, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\nNgbDatepickerI18nHebrew.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbDatepickerI18nHebrew });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbDatepickerI18nHebrew, decorators: [{\n            type: Injectable\n        }] });\n\n/**\n * Returns the equivalent JS date value for a give input Buddhist date.\n * `date` is an Buddhist date to be converted to Gregorian.\n */\nfunction toGregorian(date) {\n    return new Date(date.year - 543, date.month - 1, date.day);\n}\n/**\n * Returns the equivalent Buddhist date value for a give input Gregorian date.\n * `gdate` is a JS Date to be converted to Buddhist.\n * utc to local\n */\nfunction fromGregorian(gdate) {\n    return new NgbDate(gdate.getFullYear() + 543, gdate.getMonth() + 1, gdate.getDate());\n}\n\n/**\n * @since 9.1.0\n */\nclass NgbCalendarBuddhist extends NgbCalendarGregorian {\n    getToday() { return fromGregorian(new Date()); }\n    getNext(date, period = 'd', number = 1) {\n        let jsDate = toGregorian(date);\n        let checkMonth = true;\n        let expectedMonth = jsDate.getMonth();\n        switch (period) {\n            case 'y':\n                jsDate.setFullYear(jsDate.getFullYear() + number);\n                break;\n            case 'm':\n                expectedMonth += number;\n                jsDate.setMonth(expectedMonth);\n                expectedMonth = expectedMonth % 12;\n                if (expectedMonth < 0) {\n                    expectedMonth = expectedMonth + 12;\n                }\n                break;\n            case 'd':\n                jsDate.setDate(jsDate.getDate() + number);\n                checkMonth = false;\n                break;\n            default:\n                return date;\n        }\n        if (checkMonth && jsDate.getMonth() !== expectedMonth) {\n            // this means the destination month has less days than the initial month\n            // let's go back to the end of the previous month:\n            jsDate.setDate(0);\n        }\n        return fromGregorian(jsDate);\n    }\n    getPrev(date, period = 'd', number = 1) { return this.getNext(date, period, -number); }\n    getWeekday(date) {\n        let jsDate = toGregorian(date);\n        let day = jsDate.getDay();\n        // in JS Date Sun=0, in ISO 8601 Sun=7\n        return day === 0 ? 7 : day;\n    }\n    getWeekNumber(week, firstDayOfWeek) {\n        // in JS Date Sun=0, in ISO 8601 Sun=7\n        if (firstDayOfWeek === 7) {\n            firstDayOfWeek = 0;\n        }\n        const thursdayIndex = (4 + 7 - firstDayOfWeek) % 7;\n        let date = week[thursdayIndex];\n        const jsDate = toGregorian(date);\n        jsDate.setDate(jsDate.getDate() + 4 - (jsDate.getDay() || 7)); // Thursday\n        const time = jsDate.getTime();\n        jsDate.setMonth(0); // Compare with Jan 1\n        jsDate.setDate(1);\n        return Math.floor(Math.round((time - jsDate.getTime()) / 86400000) / 7) + 1;\n    }\n    isValid(date) {\n        if (!date || !isInteger(date.year) || !isInteger(date.month) || !isInteger(date.day)) {\n            return false;\n        }\n        // year 0 doesn't exist in Gregorian calendar\n        if (date.year === 0) {\n            return false;\n        }\n        const jsDate = toGregorian(date);\n        return !isNaN(jsDate.getTime()) && jsDate.getFullYear() === date.year - 543 &&\n            jsDate.getMonth() + 1 === date.month && jsDate.getDate() === date.day;\n    }\n}\nNgbCalendarBuddhist.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbCalendarBuddhist, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\nNgbCalendarBuddhist.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbCalendarBuddhist });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbCalendarBuddhist, decorators: [{\n            type: Injectable\n        }] });\n\n/**\n * [`NgbDateAdapter`](#/components/datepicker/api#NgbDateAdapter) implementation that uses\n * native javascript dates as a user date model.\n */\nclass NgbDateNativeAdapter extends NgbDateAdapter {\n    /**\n     * Converts a native `Date` to a `NgbDateStruct`.\n     */\n    fromModel(date) {\n        return (date instanceof Date && !isNaN(date.getTime())) ? this._fromNativeDate(date) : null;\n    }\n    /**\n     * Converts a `NgbDateStruct` to a native `Date`.\n     */\n    toModel(date) {\n        return date && isInteger(date.year) && isInteger(date.month) && isInteger(date.day) ? this._toNativeDate(date) :\n            null;\n    }\n    _fromNativeDate(date) {\n        return { year: date.getFullYear(), month: date.getMonth() + 1, day: date.getDate() };\n    }\n    _toNativeDate(date) {\n        const jsDate = new Date(date.year, date.month - 1, date.day, 12);\n        // avoid 30 -> 1930 conversion\n        jsDate.setFullYear(date.year);\n        return jsDate;\n    }\n}\nNgbDateNativeAdapter.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbDateNativeAdapter, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\nNgbDateNativeAdapter.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbDateNativeAdapter });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbDateNativeAdapter, decorators: [{\n            type: Injectable\n        }] });\n\n/**\n * Same as [`NgbDateNativeAdapter`](#/components/datepicker/api#NgbDateNativeAdapter), but with UTC dates.\n *\n * @since 3.2.0\n */\nclass NgbDateNativeUTCAdapter extends NgbDateNativeAdapter {\n    _fromNativeDate(date) {\n        return { year: date.getUTCFullYear(), month: date.getUTCMonth() + 1, day: date.getUTCDate() };\n    }\n    _toNativeDate(date) {\n        const jsDate = new Date(Date.UTC(date.year, date.month - 1, date.day));\n        // avoid 30 -> 1930 conversion\n        jsDate.setUTCFullYear(date.year);\n        return jsDate;\n    }\n}\nNgbDateNativeUTCAdapter.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbDateNativeUTCAdapter, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\nNgbDateNativeUTCAdapter.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbDateNativeUTCAdapter });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbDateNativeUTCAdapter, decorators: [{\n            type: Injectable\n        }] });\n\nclass NgbDatepickerModule {\n}\nNgbDatepickerModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbDatepickerModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nNgbDatepickerModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbDatepickerModule, declarations: [NgbDatepicker, NgbDatepickerContent, NgbDatepickerMonth, NgbDatepickerNavigation, NgbDatepickerNavigationSelect,\n        NgbDatepickerDayView, NgbInputDatepicker], imports: [CommonModule, FormsModule], exports: [NgbDatepicker, NgbDatepickerContent, NgbInputDatepicker, NgbDatepickerMonth] });\nNgbDatepickerModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbDatepickerModule, imports: [[CommonModule, FormsModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbDatepickerModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        NgbDatepicker, NgbDatepickerContent, NgbDatepickerMonth, NgbDatepickerNavigation, NgbDatepickerNavigationSelect,\n                        NgbDatepickerDayView, NgbInputDatepicker\n                    ],\n                    exports: [NgbDatepicker, NgbDatepickerContent, NgbInputDatepicker, NgbDatepickerMonth],\n                    imports: [CommonModule, FormsModule]\n                }]\n        }] });\n\n/**\n * A configuration service for the [`NgbDropdown`](#/components/dropdown/api#NgbDropdown) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the dropdowns used in the application.\n */\nclass NgbDropdownConfig {\n    constructor() {\n        this.autoClose = true;\n        this.placement = ['bottom-start', 'bottom-end', 'top-start', 'top-end'];\n    }\n}\nNgbDropdownConfig.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbDropdownConfig, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nNgbDropdownConfig.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbDropdownConfig, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbDropdownConfig, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\nclass NgbNavbar {\n}\nNgbNavbar.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbNavbar, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nNgbNavbar.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.3\", type: NgbNavbar, selector: \".navbar\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbNavbar, decorators: [{\n            type: Directive,\n            args: [{ selector: '.navbar' }]\n        }] });\n/**\n * A directive you should put on a dropdown item to enable keyboard navigation.\n * Arrow keys will move focus between items marked with this directive.\n *\n * @since 4.1.0\n */\nclass NgbDropdownItem {\n    constructor(elementRef, _renderer) {\n        this.elementRef = elementRef;\n        this._renderer = _renderer;\n        this._disabled = false;\n    }\n    set disabled(value) {\n        this._disabled = value === '' || value === true; // accept an empty attribute as true\n        // note: we don't use a host binding for disabled because when used on links, it fails because links don't have a\n        // disabled property\n        // setting the property using the renderer, OTOH, works fine in both cases.\n        this._renderer.setProperty(this.elementRef.nativeElement, 'disabled', this._disabled);\n    }\n    get disabled() { return this._disabled; }\n}\nNgbDropdownItem.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbDropdownItem, deps: [{ token: i0.ElementRef }, { token: i0.Renderer2 }], target: i0.ɵɵFactoryTarget.Directive });\nNgbDropdownItem.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.3\", type: NgbDropdownItem, selector: \"[ngbDropdownItem]\", inputs: { disabled: \"disabled\" }, host: { properties: { \"class.disabled\": \"disabled\", \"tabIndex\": \"disabled ? -1 : 0\" }, classAttribute: \"dropdown-item\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbDropdownItem, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[ngbDropdownItem]',\n                    host: { 'class': 'dropdown-item', '[class.disabled]': 'disabled', '[tabIndex]': 'disabled ? -1 : 0' }\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.Renderer2 }]; }, propDecorators: { disabled: [{\n                type: Input\n            }] } });\n/**\n * A directive that wraps dropdown menu content and dropdown items.\n */\nclass NgbDropdownMenu {\n    constructor(dropdown, _elementRef) {\n        this.dropdown = dropdown;\n        this.placement = 'bottom';\n        this.isOpen = false;\n        this.nativeElement = _elementRef.nativeElement;\n    }\n}\nNgbDropdownMenu.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbDropdownMenu, deps: [{ token: forwardRef(() => NgbDropdown) }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nNgbDropdownMenu.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.3\", type: NgbDropdownMenu, selector: \"[ngbDropdownMenu]\", host: { listeners: { \"keydown.ArrowUp\": \"dropdown.onKeyDown($event)\", \"keydown.ArrowDown\": \"dropdown.onKeyDown($event)\", \"keydown.Home\": \"dropdown.onKeyDown($event)\", \"keydown.End\": \"dropdown.onKeyDown($event)\", \"keydown.Enter\": \"dropdown.onKeyDown($event)\", \"keydown.Space\": \"dropdown.onKeyDown($event)\", \"keydown.Tab\": \"dropdown.onKeyDown($event)\", \"keydown.Shift.Tab\": \"dropdown.onKeyDown($event)\" }, properties: { \"class.dropdown-menu\": \"true\", \"class.show\": \"dropdown.isOpen()\" } }, queries: [{ propertyName: \"menuItems\", predicate: NgbDropdownItem }], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbDropdownMenu, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[ngbDropdownMenu]',\n                    host: {\n                        '[class.dropdown-menu]': 'true',\n                        '[class.show]': 'dropdown.isOpen()',\n                        '(keydown.ArrowUp)': 'dropdown.onKeyDown($event)',\n                        '(keydown.ArrowDown)': 'dropdown.onKeyDown($event)',\n                        '(keydown.Home)': 'dropdown.onKeyDown($event)',\n                        '(keydown.End)': 'dropdown.onKeyDown($event)',\n                        '(keydown.Enter)': 'dropdown.onKeyDown($event)',\n                        '(keydown.Space)': 'dropdown.onKeyDown($event)',\n                        '(keydown.Tab)': 'dropdown.onKeyDown($event)',\n                        '(keydown.Shift.Tab)': 'dropdown.onKeyDown($event)'\n                    }\n                }]\n        }], ctorParameters: function () {\n        return [{ type: undefined, decorators: [{\n                        type: Inject,\n                        args: [forwardRef(() => NgbDropdown)]\n                    }] }, { type: i0.ElementRef }];\n    }, propDecorators: { menuItems: [{\n                type: ContentChildren,\n                args: [NgbDropdownItem]\n            }] } });\n/**\n * A directive to mark an element to which dropdown menu will be anchored.\n *\n * This is a simple version of the `NgbDropdownToggle` directive.\n * It plays the same role, but doesn't listen to click events to toggle dropdown menu thus enabling support\n * for events other than click.\n *\n * @since 1.1.0\n */\nclass NgbDropdownAnchor {\n    constructor(dropdown, _elementRef) {\n        this.dropdown = dropdown;\n        this.nativeElement = _elementRef.nativeElement;\n    }\n}\nNgbDropdownAnchor.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbDropdownAnchor, deps: [{ token: forwardRef(() => NgbDropdown) }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nNgbDropdownAnchor.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.3\", type: NgbDropdownAnchor, selector: \"[ngbDropdownAnchor]\", host: { properties: { \"attr.aria-expanded\": \"dropdown.isOpen()\" }, classAttribute: \"dropdown-toggle\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbDropdownAnchor, decorators: [{\n            type: Directive,\n            args: [{ selector: '[ngbDropdownAnchor]', host: { 'class': 'dropdown-toggle', '[attr.aria-expanded]': 'dropdown.isOpen()' } }]\n        }], ctorParameters: function () {\n        return [{ type: undefined, decorators: [{\n                        type: Inject,\n                        args: [forwardRef(() => NgbDropdown)]\n                    }] }, { type: i0.ElementRef }];\n    } });\n/**\n * A directive to mark an element that will toggle dropdown via the `click` event.\n *\n * You can also use `NgbDropdownAnchor` as an alternative.\n */\nclass NgbDropdownToggle extends NgbDropdownAnchor {\n    constructor(dropdown, elementRef) {\n        super(dropdown, elementRef);\n    }\n}\nNgbDropdownToggle.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbDropdownToggle, deps: [{ token: forwardRef(() => NgbDropdown) }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nNgbDropdownToggle.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.3\", type: NgbDropdownToggle, selector: \"[ngbDropdownToggle]\", host: { listeners: { \"click\": \"dropdown.toggle()\", \"keydown.ArrowUp\": \"dropdown.onKeyDown($event)\", \"keydown.ArrowDown\": \"dropdown.onKeyDown($event)\", \"keydown.Home\": \"dropdown.onKeyDown($event)\", \"keydown.End\": \"dropdown.onKeyDown($event)\", \"keydown.Tab\": \"dropdown.onKeyDown($event)\", \"keydown.Shift.Tab\": \"dropdown.onKeyDown($event)\" }, properties: { \"attr.aria-expanded\": \"dropdown.isOpen()\" }, classAttribute: \"dropdown-toggle\" }, providers: [{ provide: NgbDropdownAnchor, useExisting: forwardRef(() => NgbDropdownToggle) }], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbDropdownToggle, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[ngbDropdownToggle]',\n                    host: {\n                        'class': 'dropdown-toggle',\n                        '[attr.aria-expanded]': 'dropdown.isOpen()',\n                        '(click)': 'dropdown.toggle()',\n                        '(keydown.ArrowUp)': 'dropdown.onKeyDown($event)',\n                        '(keydown.ArrowDown)': 'dropdown.onKeyDown($event)',\n                        '(keydown.Home)': 'dropdown.onKeyDown($event)',\n                        '(keydown.End)': 'dropdown.onKeyDown($event)',\n                        '(keydown.Tab)': 'dropdown.onKeyDown($event)',\n                        '(keydown.Shift.Tab)': 'dropdown.onKeyDown($event)'\n                    },\n                    providers: [{ provide: NgbDropdownAnchor, useExisting: forwardRef(() => NgbDropdownToggle) }]\n                }]\n        }], ctorParameters: function () {\n        return [{ type: undefined, decorators: [{\n                        type: Inject,\n                        args: [forwardRef(() => NgbDropdown)]\n                    }] }, { type: i0.ElementRef }];\n    } });\n/**\n * A directive that provides contextual overlays for displaying lists of links and more.\n */\nclass NgbDropdown {\n    constructor(_changeDetector, config, _document, _ngZone, _elementRef, _renderer, ngbNavbar) {\n        this._changeDetector = _changeDetector;\n        this._document = _document;\n        this._ngZone = _ngZone;\n        this._elementRef = _elementRef;\n        this._renderer = _renderer;\n        this._destroyCloseHandlers$ = new Subject();\n        this._bodyContainer = null;\n        this._positioning = ngbPositioning();\n        /**\n         * Defines whether or not the dropdown menu is opened initially.\n         */\n        this._open = false;\n        /**\n         * An event fired when the dropdown is opened or closed.\n         *\n         * The event payload is a `boolean`:\n         * * `true` - the dropdown was opened\n         * * `false` - the dropdown was closed\n         */\n        this.openChange = new EventEmitter();\n        this.placement = config.placement;\n        this.container = config.container;\n        this.autoClose = config.autoClose;\n        this.display = ngbNavbar ? 'static' : 'dynamic';\n    }\n    ngAfterContentInit() {\n        this._ngZone.onStable.pipe(take(1)).subscribe(() => {\n            this._applyPlacementClasses();\n            if (this._open) {\n                this._setCloseHandlers();\n            }\n        });\n    }\n    ngOnChanges(changes) {\n        if (changes.container && this._open) {\n            this._applyContainer(this.container);\n        }\n        if (changes.placement && !changes.placement.firstChange) {\n            this._positioning.setOptions({\n                hostElement: this._anchor.nativeElement,\n                targetElement: this._bodyContainer || this._menu.nativeElement,\n                placement: this.placement,\n                appendToBody: this.container === 'body',\n            });\n            this._applyPlacementClasses();\n        }\n        if (changes.dropdownClass) {\n            const { currentValue, previousValue } = changes.dropdownClass;\n            this._applyCustomDropdownClass(currentValue, previousValue);\n        }\n        if (changes.autoClose && this._open) {\n            this.autoClose = changes.autoClose.currentValue;\n            this._setCloseHandlers();\n        }\n    }\n    /**\n     * Checks if the dropdown menu is open.\n     */\n    isOpen() { return this._open; }\n    /**\n     * Opens the dropdown menu.\n     */\n    open() {\n        if (!this._open) {\n            this._open = true;\n            this._applyContainer(this.container);\n            this.openChange.emit(true);\n            this._setCloseHandlers();\n            if (this._anchor) {\n                this._anchor.nativeElement.focus();\n                if (this.display === 'dynamic') {\n                    this._ngZone.runOutsideAngular(() => {\n                        this._positioning.createPopper({\n                            hostElement: this._anchor.nativeElement,\n                            targetElement: this._bodyContainer || this._menu.nativeElement,\n                            placement: this.placement,\n                            appendToBody: this.container === 'body',\n                            updatePopperOptions: addPopperOffset([0, 2]),\n                        });\n                        this._applyPlacementClasses();\n                        this._zoneSubscription = this._ngZone.onStable.subscribe(() => this._positionMenu());\n                    });\n                }\n            }\n        }\n    }\n    _setCloseHandlers() {\n        this._destroyCloseHandlers$.next(); // destroy any existing close handlers\n        ngbAutoClose(this._ngZone, this._document, this.autoClose, (source) => {\n            this.close();\n            if (source === 0 /* ESCAPE */) {\n                this._anchor.nativeElement.focus();\n            }\n        }, this._destroyCloseHandlers$, this._menu ? [this._menu.nativeElement] : [], this._anchor ? [this._anchor.nativeElement] : [], '.dropdown-item,.dropdown-divider');\n    }\n    /**\n     * Closes the dropdown menu.\n     */\n    close() {\n        var _a;\n        if (this._open) {\n            this._open = false;\n            this._resetContainer();\n            this._positioning.destroy();\n            (_a = this._zoneSubscription) === null || _a === void 0 ? void 0 : _a.unsubscribe();\n            this._destroyCloseHandlers$.next();\n            this.openChange.emit(false);\n            this._changeDetector.markForCheck();\n        }\n    }\n    /**\n     * Toggles the dropdown menu.\n     */\n    toggle() {\n        if (this.isOpen()) {\n            this.close();\n        }\n        else {\n            this.open();\n        }\n    }\n    ngOnDestroy() { this.close(); }\n    onKeyDown(event) {\n        /* eslint-disable-next-line deprecation/deprecation */\n        const key = event.which;\n        const itemElements = this._getMenuElements();\n        let position = -1;\n        let itemElement = null;\n        const isEventFromToggle = this._isEventFromToggle(event);\n        if (!isEventFromToggle && itemElements.length) {\n            itemElements.forEach((item, index) => {\n                if (item.contains(event.target)) {\n                    itemElement = item;\n                }\n                if (item === this._document.activeElement) {\n                    position = index;\n                }\n            });\n        }\n        // closing on Enter / Space\n        if (key === Key.Space || key === Key.Enter) {\n            if (itemElement && (this.autoClose === true || this.autoClose === 'inside')) {\n                // Item is either a button or a link, so click will be triggered by the browser on Enter or Space.\n                // So we have to register a one-time click handler that will fire after any user defined click handlers\n                // to close the dropdown\n                fromEvent(itemElement, 'click').pipe(take(1)).subscribe(() => this.close());\n            }\n            return;\n        }\n        if (key === Key.Tab) {\n            if (event.target && this.isOpen() && this.autoClose) {\n                if (this._anchor.nativeElement === event.target) {\n                    if (this.container === 'body' && !event.shiftKey) {\n                        /* This case is special: user is using [Tab] from the anchor/toggle.\n                           User expects the next focusable element in the dropdown menu to get focus.\n                           But the menu is not a sibling to anchor/toggle, it is at the end of the body.\n                           Trick is to synchronously focus the menu element, and let the [keydown.Tab] go\n                           so that browser will focus the proper element (first one focusable in the menu) */\n                        this._renderer.setAttribute(this._menu.nativeElement, 'tabindex', '0');\n                        this._menu.nativeElement.focus();\n                        this._renderer.removeAttribute(this._menu.nativeElement, 'tabindex');\n                    }\n                    else if (event.shiftKey) {\n                        this.close();\n                    }\n                    return;\n                }\n                else if (this.container === 'body') {\n                    const focusableElements = this._menu.nativeElement.querySelectorAll(FOCUSABLE_ELEMENTS_SELECTOR);\n                    if (event.shiftKey && event.target === focusableElements[0]) {\n                        this._anchor.nativeElement.focus();\n                        event.preventDefault();\n                    }\n                    else if (!event.shiftKey && event.target === focusableElements[focusableElements.length - 1]) {\n                        this._anchor.nativeElement.focus();\n                        this.close();\n                    }\n                }\n                else {\n                    fromEvent(event.target, 'focusout').pipe(take(1)).subscribe(({ relatedTarget }) => {\n                        if (!this._elementRef.nativeElement.contains(relatedTarget)) {\n                            this.close();\n                        }\n                    });\n                }\n            }\n            return;\n        }\n        // opening / navigating\n        if (isEventFromToggle || itemElement) {\n            this.open();\n            if (itemElements.length) {\n                switch (key) {\n                    case Key.ArrowDown:\n                        position = Math.min(position + 1, itemElements.length - 1);\n                        break;\n                    case Key.ArrowUp:\n                        if (this._isDropup() && position === -1) {\n                            position = itemElements.length - 1;\n                            break;\n                        }\n                        position = Math.max(position - 1, 0);\n                        break;\n                    case Key.Home:\n                        position = 0;\n                        break;\n                    case Key.End:\n                        position = itemElements.length - 1;\n                        break;\n                }\n                itemElements[position].focus();\n            }\n            event.preventDefault();\n        }\n    }\n    _isDropup() { return this._elementRef.nativeElement.classList.contains('dropup'); }\n    _isEventFromToggle(event) {\n        return this._anchor.nativeElement.contains(event.target);\n    }\n    _getMenuElements() {\n        const menu = this._menu;\n        if (menu == null) {\n            return [];\n        }\n        return menu.menuItems.filter(item => !item.disabled).map(item => item.elementRef.nativeElement);\n    }\n    _positionMenu() {\n        const menu = this._menu;\n        if (this.isOpen() && menu) {\n            if (this.display === 'dynamic') {\n                this._positioning.update();\n                this._applyPlacementClasses();\n            }\n            else {\n                this._applyPlacementClasses(this._getFirstPlacement(this.placement));\n            }\n        }\n    }\n    _getFirstPlacement(placement) {\n        return Array.isArray(placement) ? placement[0] : placement.split(' ')[0];\n    }\n    _resetContainer() {\n        const renderer = this._renderer;\n        if (this._menu) {\n            const dropdownElement = this._elementRef.nativeElement;\n            const dropdownMenuElement = this._menu.nativeElement;\n            renderer.appendChild(dropdownElement, dropdownMenuElement);\n        }\n        if (this._bodyContainer) {\n            renderer.removeChild(this._document.body, this._bodyContainer);\n            this._bodyContainer = null;\n        }\n    }\n    _applyContainer(container = null) {\n        this._resetContainer();\n        if (container === 'body') {\n            const renderer = this._renderer;\n            const dropdownMenuElement = this._menu.nativeElement;\n            const bodyContainer = this._bodyContainer = this._bodyContainer || renderer.createElement('div');\n            // Override some styles to have the positioning working\n            renderer.setStyle(bodyContainer, 'position', 'absolute');\n            renderer.setStyle(dropdownMenuElement, 'position', 'static');\n            renderer.setStyle(bodyContainer, 'z-index', '1055');\n            renderer.appendChild(bodyContainer, dropdownMenuElement);\n            renderer.appendChild(this._document.body, bodyContainer);\n        }\n        this._applyCustomDropdownClass(this.dropdownClass);\n    }\n    _applyCustomDropdownClass(newClass, oldClass) {\n        const targetElement = this.container === 'body' ? this._bodyContainer : this._elementRef.nativeElement;\n        if (targetElement) {\n            if (oldClass) {\n                this._renderer.removeClass(targetElement, oldClass);\n            }\n            if (newClass) {\n                this._renderer.addClass(targetElement, newClass);\n            }\n        }\n    }\n    _applyPlacementClasses(placement) {\n        const menu = this._menu;\n        if (menu) {\n            if (!placement) {\n                placement = this._getFirstPlacement(this.placement);\n            }\n            const renderer = this._renderer;\n            const dropdownElement = this._elementRef.nativeElement;\n            // remove the current placement classes\n            renderer.removeClass(dropdownElement, 'dropup');\n            renderer.removeClass(dropdownElement, 'dropdown');\n            const { nativeElement } = menu;\n            if (this.display === 'static') {\n                menu.placement = null;\n                renderer.setAttribute(nativeElement, 'data-bs-popper', 'static');\n            }\n            else {\n                menu.placement = placement;\n                renderer.removeAttribute(nativeElement, 'data-bs-popper');\n            }\n            /*\n            * apply the new placement\n            * in case of top use up-arrow or down-arrow otherwise\n            */\n            const dropdownClass = placement.search('^top') !== -1 ? 'dropup' : 'dropdown';\n            renderer.addClass(dropdownElement, dropdownClass);\n            const bodyContainer = this._bodyContainer;\n            if (bodyContainer) {\n                renderer.removeClass(bodyContainer, 'dropup');\n                renderer.removeClass(bodyContainer, 'dropdown');\n                renderer.addClass(bodyContainer, dropdownClass);\n            }\n        }\n    }\n}\nNgbDropdown.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbDropdown, deps: [{ token: i0.ChangeDetectorRef }, { token: NgbDropdownConfig }, { token: DOCUMENT }, { token: i0.NgZone }, { token: i0.ElementRef }, { token: i0.Renderer2 }, { token: NgbNavbar, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nNgbDropdown.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.3\", type: NgbDropdown, selector: \"[ngbDropdown]\", inputs: { autoClose: \"autoClose\", dropdownClass: \"dropdownClass\", _open: [\"open\", \"_open\"], placement: \"placement\", container: \"container\", display: \"display\" }, outputs: { openChange: \"openChange\" }, host: { properties: { \"class.show\": \"isOpen()\" } }, queries: [{ propertyName: \"_menu\", first: true, predicate: NgbDropdownMenu, descendants: true }, { propertyName: \"_anchor\", first: true, predicate: NgbDropdownAnchor, descendants: true }], exportAs: [\"ngbDropdown\"], usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbDropdown, decorators: [{\n            type: Directive,\n            args: [{ selector: '[ngbDropdown]', exportAs: 'ngbDropdown', host: { '[class.show]': 'isOpen()' } }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ChangeDetectorRef }, { type: NgbDropdownConfig }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }, { type: i0.NgZone }, { type: i0.ElementRef }, { type: i0.Renderer2 }, { type: NgbNavbar, decorators: [{\n                        type: Optional\n                    }] }];\n    }, propDecorators: { _menu: [{\n                type: ContentChild,\n                args: [NgbDropdownMenu, { static: false }]\n            }], _anchor: [{\n                type: ContentChild,\n                args: [NgbDropdownAnchor, { static: false }]\n            }], autoClose: [{\n                type: Input\n            }], dropdownClass: [{\n                type: Input\n            }], _open: [{\n                type: Input,\n                args: ['open']\n            }], placement: [{\n                type: Input\n            }], container: [{\n                type: Input\n            }], display: [{\n                type: Input\n            }], openChange: [{\n                type: Output\n            }] } });\n\nconst NGB_DROPDOWN_DIRECTIVES = [NgbDropdown, NgbDropdownAnchor, NgbDropdownToggle, NgbDropdownMenu, NgbDropdownItem, NgbNavbar];\nclass NgbDropdownModule {\n}\nNgbDropdownModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbDropdownModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nNgbDropdownModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbDropdownModule, declarations: [NgbDropdown, NgbDropdownAnchor, NgbDropdownToggle, NgbDropdownMenu, NgbDropdownItem, NgbNavbar], exports: [NgbDropdown, NgbDropdownAnchor, NgbDropdownToggle, NgbDropdownMenu, NgbDropdownItem, NgbNavbar] });\nNgbDropdownModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbDropdownModule });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbDropdownModule, decorators: [{\n            type: NgModule,\n            args: [{ declarations: NGB_DROPDOWN_DIRECTIVES, exports: NGB_DROPDOWN_DIRECTIVES }]\n        }] });\n\nclass ContentRef {\n    constructor(nodes, viewRef, componentRef) {\n        this.nodes = nodes;\n        this.viewRef = viewRef;\n        this.componentRef = componentRef;\n    }\n}\nclass PopupService {\n    constructor(_type, _injector, _viewContainerRef, _renderer, _ngZone, _applicationRef) {\n        this._type = _type;\n        this._injector = _injector;\n        this._viewContainerRef = _viewContainerRef;\n        this._renderer = _renderer;\n        this._ngZone = _ngZone;\n        this._applicationRef = _applicationRef;\n        this._windowRef = null;\n        this._contentRef = null;\n    }\n    open(content, context, animation = false) {\n        if (!this._windowRef) {\n            this._contentRef = this._getContentRef(content, context);\n            this._windowRef = this._viewContainerRef.createComponent(this._type, { index: this._viewContainerRef.length, injector: this._injector, projectableNodes: this._contentRef.nodes });\n        }\n        const { nativeElement } = this._windowRef.location;\n        const transition$ = this._ngZone.onStable.pipe(take(1), mergeMap(() => ngbRunTransition(this._ngZone, nativeElement, ({ classList }) => classList.add('show'), { animation, runningTransition: 'continue' })));\n        return { windowRef: this._windowRef, transition$ };\n    }\n    close(animation = false) {\n        if (!this._windowRef) {\n            return of(undefined);\n        }\n        return ngbRunTransition(this._ngZone, this._windowRef.location.nativeElement, ({ classList }) => classList.remove('show'), { animation, runningTransition: 'stop' })\n            .pipe(tap(() => {\n            var _a;\n            if (this._windowRef) {\n                // this is required because of the container='body' option\n                this._viewContainerRef.remove(this._viewContainerRef.indexOf(this._windowRef.hostView));\n                this._windowRef = null;\n            }\n            if ((_a = this._contentRef) === null || _a === void 0 ? void 0 : _a.viewRef) {\n                this._applicationRef.detachView(this._contentRef.viewRef);\n                this._contentRef.viewRef.destroy();\n                this._contentRef = null;\n            }\n        }));\n    }\n    _getContentRef(content, context) {\n        if (!content) {\n            return new ContentRef([]);\n        }\n        else if (content instanceof TemplateRef) {\n            const viewRef = content.createEmbeddedView(context);\n            this._applicationRef.attachView(viewRef);\n            return new ContentRef([viewRef.rootNodes], viewRef);\n        }\n        else {\n            return new ContentRef([[this._renderer.createText(`${content}`)]]);\n        }\n    }\n}\n\nclass NgbModalBackdrop {\n    constructor(_el, _zone) {\n        this._el = _el;\n        this._zone = _zone;\n    }\n    ngOnInit() {\n        this._zone.onStable.asObservable().pipe(take(1)).subscribe(() => {\n            ngbRunTransition(this._zone, this._el.nativeElement, (element, animation) => {\n                if (animation) {\n                    reflow(element);\n                }\n                element.classList.add('show');\n            }, { animation: this.animation, runningTransition: 'continue' });\n        });\n    }\n    hide() {\n        return ngbRunTransition(this._zone, this._el.nativeElement, ({ classList }) => classList.remove('show'), { animation: this.animation, runningTransition: 'stop' });\n    }\n}\nNgbModalBackdrop.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbModalBackdrop, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\nNgbModalBackdrop.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: NgbModalBackdrop, selector: \"ngb-modal-backdrop\", inputs: { animation: \"animation\", backdropClass: \"backdropClass\" }, host: { properties: { \"class\": \"\\\"modal-backdrop\\\" + (backdropClass ? \\\" \\\" + backdropClass : \\\"\\\")\", \"class.show\": \"!animation\", \"class.fade\": \"animation\" }, styleAttribute: \"z-index: 1055\" }, ngImport: i0, template: '', isInline: true, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbModalBackdrop, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ngb-modal-backdrop',\n                    encapsulation: ViewEncapsulation.None,\n                    template: '',\n                    host: {\n                        '[class]': '\"modal-backdrop\" + (backdropClass ? \" \" + backdropClass : \"\")',\n                        '[class.show]': '!animation',\n                        '[class.fade]': 'animation',\n                        'style': 'z-index: 1055'\n                    }\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.NgZone }]; }, propDecorators: { animation: [{\n                type: Input\n            }], backdropClass: [{\n                type: Input\n            }] } });\n\n/**\n * A reference to the currently opened (active) modal.\n *\n * Instances of this class can be injected into your component passed as modal content.\n * So you can `.close()` or `.dismiss()` the modal window from your component.\n */\nclass NgbActiveModal {\n    /**\n     * Closes the modal with an optional `result` value.\n     *\n     * The `NgbModalRef.result` promise will be resolved with the provided value.\n     */\n    close(result) { }\n    /**\n     * Dismisses the modal with an optional `reason` value.\n     *\n     * The `NgbModalRef.result` promise will be rejected with the provided value.\n     */\n    dismiss(reason) { }\n}\n/**\n * A reference to the newly opened modal returned by the `NgbModal.open()` method.\n */\nclass NgbModalRef {\n    constructor(_windowCmptRef, _contentRef, _backdropCmptRef, _beforeDismiss) {\n        this._windowCmptRef = _windowCmptRef;\n        this._contentRef = _contentRef;\n        this._backdropCmptRef = _backdropCmptRef;\n        this._beforeDismiss = _beforeDismiss;\n        this._closed = new Subject();\n        this._dismissed = new Subject();\n        this._hidden = new Subject();\n        _windowCmptRef.instance.dismissEvent.subscribe((reason) => { this.dismiss(reason); });\n        this.result = new Promise((resolve, reject) => {\n            this._resolve = resolve;\n            this._reject = reject;\n        });\n        this.result.then(null, () => { });\n    }\n    /**\n     * The instance of a component used for the modal content.\n     *\n     * When a `TemplateRef` is used as the content or when the modal is closed, will return `undefined`.\n     */\n    get componentInstance() {\n        if (this._contentRef && this._contentRef.componentRef) {\n            return this._contentRef.componentRef.instance;\n        }\n    }\n    /**\n     * The observable that emits when the modal is closed via the `.close()` method.\n     *\n     * It will emit the result passed to the `.close()` method.\n     *\n     * @since 8.0.0\n     */\n    get closed() { return this._closed.asObservable().pipe(takeUntil(this._hidden)); }\n    /**\n     * The observable that emits when the modal is dismissed via the `.dismiss()` method.\n     *\n     * It will emit the reason passed to the `.dismissed()` method by the user, or one of the internal\n     * reasons like backdrop click or ESC key press.\n     *\n     * @since 8.0.0\n     */\n    get dismissed() { return this._dismissed.asObservable().pipe(takeUntil(this._hidden)); }\n    /**\n     * The observable that emits when both modal window and backdrop are closed and animations were finished.\n     * At this point modal and backdrop elements will be removed from the DOM tree.\n     *\n     * This observable will be completed after emitting.\n     *\n     * @since 8.0.0\n     */\n    get hidden() { return this._hidden.asObservable(); }\n    /**\n     * The observable that emits when modal is fully visible and animation was finished.\n     * Modal DOM element is always available synchronously after calling 'modal.open()' service.\n     *\n     * This observable will be completed after emitting.\n     * It will not emit, if modal is closed before open animation is finished.\n     *\n     * @since 8.0.0\n     */\n    get shown() { return this._windowCmptRef.instance.shown.asObservable(); }\n    /**\n     * Closes the modal with an optional `result` value.\n     *\n     * The `NgbMobalRef.result` promise will be resolved with the provided value.\n     */\n    close(result) {\n        if (this._windowCmptRef) {\n            this._closed.next(result);\n            this._resolve(result);\n            this._removeModalElements();\n        }\n    }\n    _dismiss(reason) {\n        this._dismissed.next(reason);\n        this._reject(reason);\n        this._removeModalElements();\n    }\n    /**\n     * Dismisses the modal with an optional `reason` value.\n     *\n     * The `NgbModalRef.result` promise will be rejected with the provided value.\n     */\n    dismiss(reason) {\n        if (this._windowCmptRef) {\n            if (!this._beforeDismiss) {\n                this._dismiss(reason);\n            }\n            else {\n                const dismiss = this._beforeDismiss();\n                if (isPromise(dismiss)) {\n                    dismiss.then(result => {\n                        if (result !== false) {\n                            this._dismiss(reason);\n                        }\n                    }, () => { });\n                }\n                else if (dismiss !== false) {\n                    this._dismiss(reason);\n                }\n            }\n        }\n    }\n    _removeModalElements() {\n        const windowTransition$ = this._windowCmptRef.instance.hide();\n        const backdropTransition$ = this._backdropCmptRef ? this._backdropCmptRef.instance.hide() : of(undefined);\n        // hiding window\n        windowTransition$.subscribe(() => {\n            const { nativeElement } = this._windowCmptRef.location;\n            nativeElement.parentNode.removeChild(nativeElement);\n            this._windowCmptRef.destroy();\n            if (this._contentRef && this._contentRef.viewRef) {\n                this._contentRef.viewRef.destroy();\n            }\n            this._windowCmptRef = null;\n            this._contentRef = null;\n        });\n        // hiding backdrop\n        backdropTransition$.subscribe(() => {\n            if (this._backdropCmptRef) {\n                const { nativeElement } = this._backdropCmptRef.location;\n                nativeElement.parentNode.removeChild(nativeElement);\n                this._backdropCmptRef.destroy();\n                this._backdropCmptRef = null;\n            }\n        });\n        // all done\n        zip(windowTransition$, backdropTransition$).subscribe(() => {\n            this._hidden.next();\n            this._hidden.complete();\n        });\n    }\n}\n\nvar ModalDismissReasons;\n(function (ModalDismissReasons) {\n    ModalDismissReasons[ModalDismissReasons[\"BACKDROP_CLICK\"] = 0] = \"BACKDROP_CLICK\";\n    ModalDismissReasons[ModalDismissReasons[\"ESC\"] = 1] = \"ESC\";\n})(ModalDismissReasons || (ModalDismissReasons = {}));\n\nclass NgbModalWindow {\n    constructor(_document, _elRef, _zone) {\n        this._document = _document;\n        this._elRef = _elRef;\n        this._zone = _zone;\n        this._closed$ = new Subject();\n        this._elWithFocus = null; // element that is focused prior to modal opening\n        this.backdrop = true;\n        this.keyboard = true;\n        this.dismissEvent = new EventEmitter();\n        this.shown = new Subject();\n        this.hidden = new Subject();\n    }\n    get fullscreenClass() {\n        return this.fullscreen === true ? ' modal-fullscreen' :\n            isString(this.fullscreen) ? ` modal-fullscreen-${this.fullscreen}-down` : '';\n    }\n    dismiss(reason) { this.dismissEvent.emit(reason); }\n    ngOnInit() {\n        this._elWithFocus = this._document.activeElement;\n        this._zone.onStable.asObservable().pipe(take(1)).subscribe(() => { this._show(); });\n    }\n    ngOnDestroy() { this._disableEventHandling(); }\n    hide() {\n        const { nativeElement } = this._elRef;\n        const context = { animation: this.animation, runningTransition: 'stop' };\n        const windowTransition$ = ngbRunTransition(this._zone, nativeElement, () => nativeElement.classList.remove('show'), context);\n        const dialogTransition$ = ngbRunTransition(this._zone, this._dialogEl.nativeElement, () => { }, context);\n        const transitions$ = zip(windowTransition$, dialogTransition$);\n        transitions$.subscribe(() => {\n            this.hidden.next();\n            this.hidden.complete();\n        });\n        this._disableEventHandling();\n        this._restoreFocus();\n        return transitions$;\n    }\n    _show() {\n        const context = { animation: this.animation, runningTransition: 'continue' };\n        const windowTransition$ = ngbRunTransition(this._zone, this._elRef.nativeElement, (element, animation) => {\n            if (animation) {\n                reflow(element);\n            }\n            element.classList.add('show');\n        }, context);\n        const dialogTransition$ = ngbRunTransition(this._zone, this._dialogEl.nativeElement, () => { }, context);\n        zip(windowTransition$, dialogTransition$).subscribe(() => {\n            this.shown.next();\n            this.shown.complete();\n        });\n        this._enableEventHandling();\n        this._setFocus();\n    }\n    _enableEventHandling() {\n        const { nativeElement } = this._elRef;\n        this._zone.runOutsideAngular(() => {\n            fromEvent(nativeElement, 'keydown')\n                .pipe(takeUntil(this._closed$), \n            /* eslint-disable-next-line deprecation/deprecation */\n            filter(e => e.which === Key.Escape))\n                .subscribe(event => {\n                if (this.keyboard) {\n                    requestAnimationFrame(() => {\n                        if (!event.defaultPrevented) {\n                            this._zone.run(() => this.dismiss(ModalDismissReasons.ESC));\n                        }\n                    });\n                }\n                else if (this.backdrop === 'static') {\n                    this._bumpBackdrop();\n                }\n            });\n            // We're listening to 'mousedown' and 'mouseup' to prevent modal from closing when pressing the mouse\n            // inside the modal dialog and releasing it outside\n            let preventClose = false;\n            fromEvent(this._dialogEl.nativeElement, 'mousedown')\n                .pipe(takeUntil(this._closed$), tap(() => preventClose = false), switchMap(() => fromEvent(nativeElement, 'mouseup').pipe(takeUntil(this._closed$), take(1))), filter(({ target }) => nativeElement === target))\n                .subscribe(() => { preventClose = true; });\n            // We're listening to 'click' to dismiss modal on modal window click, except when:\n            // 1. clicking on modal dialog itself\n            // 2. closing was prevented by mousedown/up handlers\n            // 3. clicking on scrollbar when the viewport is too small and modal doesn't fit (click is not triggered at all)\n            fromEvent(nativeElement, 'click').pipe(takeUntil(this._closed$)).subscribe(({ target }) => {\n                if (nativeElement === target) {\n                    if (this.backdrop === 'static') {\n                        this._bumpBackdrop();\n                    }\n                    else if (this.backdrop === true && !preventClose) {\n                        this._zone.run(() => this.dismiss(ModalDismissReasons.BACKDROP_CLICK));\n                    }\n                }\n                preventClose = false;\n            });\n        });\n    }\n    _disableEventHandling() { this._closed$.next(); }\n    _setFocus() {\n        const { nativeElement } = this._elRef;\n        if (!nativeElement.contains(document.activeElement)) {\n            const autoFocusable = nativeElement.querySelector(`[ngbAutofocus]`);\n            const firstFocusable = getFocusableBoundaryElements(nativeElement)[0];\n            const elementToFocus = autoFocusable || firstFocusable || nativeElement;\n            elementToFocus.focus();\n        }\n    }\n    _restoreFocus() {\n        const body = this._document.body;\n        const elWithFocus = this._elWithFocus;\n        let elementToFocus;\n        if (elWithFocus && elWithFocus['focus'] && body.contains(elWithFocus)) {\n            elementToFocus = elWithFocus;\n        }\n        else {\n            elementToFocus = body;\n        }\n        this._zone.runOutsideAngular(() => {\n            setTimeout(() => elementToFocus.focus());\n            this._elWithFocus = null;\n        });\n    }\n    _bumpBackdrop() {\n        if (this.backdrop === 'static') {\n            ngbRunTransition(this._zone, this._elRef.nativeElement, ({ classList }) => {\n                classList.add('modal-static');\n                return () => classList.remove('modal-static');\n            }, { animation: this.animation, runningTransition: 'continue' });\n        }\n    }\n}\nNgbModalWindow.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbModalWindow, deps: [{ token: DOCUMENT }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\nNgbModalWindow.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: NgbModalWindow, selector: \"ngb-modal-window\", inputs: { animation: \"animation\", ariaLabelledBy: \"ariaLabelledBy\", ariaDescribedBy: \"ariaDescribedBy\", backdrop: \"backdrop\", centered: \"centered\", fullscreen: \"fullscreen\", keyboard: \"keyboard\", scrollable: \"scrollable\", size: \"size\", windowClass: \"windowClass\", modalDialogClass: \"modalDialogClass\" }, outputs: { dismissEvent: \"dismiss\" }, host: { attributes: { \"role\": \"dialog\", \"tabindex\": \"-1\" }, properties: { \"class\": \"\\\"modal d-block\\\" + (windowClass ? \\\" \\\" + windowClass : \\\"\\\")\", \"class.fade\": \"animation\", \"attr.aria-modal\": \"true\", \"attr.aria-labelledby\": \"ariaLabelledBy\", \"attr.aria-describedby\": \"ariaDescribedBy\" } }, viewQueries: [{ propertyName: \"_dialogEl\", first: true, predicate: [\"dialog\"], descendants: true, static: true }], ngImport: i0, template: `\n    <div #dialog [class]=\"'modal-dialog' + (size ? ' modal-' + size : '') + (centered ? ' modal-dialog-centered' : '') +\n     fullscreenClass + (scrollable ? ' modal-dialog-scrollable' : '') + (modalDialogClass ? ' ' + modalDialogClass : '')\" role=\"document\">\n        <div class=\"modal-content\"><ng-content></ng-content></div>\n    </div>\n    `, isInline: true, styles: [\"ngb-modal-window .component-host-scrollable{display:flex;flex-direction:column;overflow:hidden}\\n\"], encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbModalWindow, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngb-modal-window', host: {\n                        '[class]': '\"modal d-block\" + (windowClass ? \" \" + windowClass : \"\")',\n                        '[class.fade]': 'animation',\n                        'role': 'dialog',\n                        'tabindex': '-1',\n                        '[attr.aria-modal]': 'true',\n                        '[attr.aria-labelledby]': 'ariaLabelledBy',\n                        '[attr.aria-describedby]': 'ariaDescribedBy'\n                    }, template: `\n    <div #dialog [class]=\"'modal-dialog' + (size ? ' modal-' + size : '') + (centered ? ' modal-dialog-centered' : '') +\n     fullscreenClass + (scrollable ? ' modal-dialog-scrollable' : '') + (modalDialogClass ? ' ' + modalDialogClass : '')\" role=\"document\">\n        <div class=\"modal-content\"><ng-content></ng-content></div>\n    </div>\n    `, encapsulation: ViewEncapsulation.None, styles: [\"ngb-modal-window .component-host-scrollable{display:flex;flex-direction:column;overflow:hidden}\\n\"] }]\n        }], ctorParameters: function () {\n        return [{ type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }, { type: i0.ElementRef }, { type: i0.NgZone }];\n    }, propDecorators: { _dialogEl: [{\n                type: ViewChild,\n                args: ['dialog', { static: true }]\n            }], animation: [{\n                type: Input\n            }], ariaLabelledBy: [{\n                type: Input\n            }], ariaDescribedBy: [{\n                type: Input\n            }], backdrop: [{\n                type: Input\n            }], centered: [{\n                type: Input\n            }], fullscreen: [{\n                type: Input\n            }], keyboard: [{\n                type: Input\n            }], scrollable: [{\n                type: Input\n            }], size: [{\n                type: Input\n            }], windowClass: [{\n                type: Input\n            }], modalDialogClass: [{\n                type: Input\n            }], dismissEvent: [{\n                type: Output,\n                args: ['dismiss']\n            }] } });\n\n/**\n * Utility to handle the scrollbar.\n *\n * It allows to hide the scrollbar and compensate the lack of a vertical scrollbar\n * by adding an equivalent padding on the right of the body, and to revert this change.\n */\nclass ScrollBar {\n    constructor(_document) {\n        this._document = _document;\n    }\n    /**\n     * To be called to hide a potential vertical scrollbar:\n     * - if a scrollbar is there and has a width greater than 0, adds some compensation\n     * padding to the body to keep the same layout as when the scrollbar is there\n     * - adds overflow: hidden\n     *\n     * @return a callback used to revert the change\n     */\n    hide() {\n        const scrollbarWidth = Math.abs(window.innerWidth - this._document.documentElement.clientWidth);\n        const body = this._document.body;\n        const bodyStyle = body.style;\n        const { overflow, paddingRight } = bodyStyle;\n        if (scrollbarWidth > 0) {\n            const actualPadding = parseFloat(window.getComputedStyle(body).paddingRight);\n            bodyStyle.paddingRight = `${actualPadding + scrollbarWidth}px`;\n        }\n        bodyStyle.overflow = 'hidden';\n        return () => {\n            if (scrollbarWidth > 0) {\n                bodyStyle.paddingRight = paddingRight;\n            }\n            bodyStyle.overflow = overflow;\n        };\n    }\n}\nScrollBar.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: ScrollBar, deps: [{ token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable });\nScrollBar.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: ScrollBar, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: ScrollBar, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () {\n        return [{ type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }];\n    } });\n\nclass NgbModalStack {\n    constructor(_applicationRef, _injector, _document, _scrollBar, _rendererFactory, _ngZone) {\n        this._applicationRef = _applicationRef;\n        this._injector = _injector;\n        this._document = _document;\n        this._scrollBar = _scrollBar;\n        this._rendererFactory = _rendererFactory;\n        this._ngZone = _ngZone;\n        this._activeWindowCmptHasChanged = new Subject();\n        this._ariaHiddenValues = new Map();\n        this._scrollBarRestoreFn = null;\n        this._backdropAttributes = ['animation', 'backdropClass'];\n        this._modalRefs = [];\n        this._windowAttributes = [\n            'animation', 'ariaLabelledBy', 'ariaDescribedBy', 'backdrop', 'centered', 'fullscreen', 'keyboard', 'scrollable',\n            'size', 'windowClass', 'modalDialogClass'\n        ];\n        this._windowCmpts = [];\n        this._activeInstances = new EventEmitter();\n        // Trap focus on active WindowCmpt\n        this._activeWindowCmptHasChanged.subscribe(() => {\n            if (this._windowCmpts.length) {\n                const activeWindowCmpt = this._windowCmpts[this._windowCmpts.length - 1];\n                ngbFocusTrap(this._ngZone, activeWindowCmpt.location.nativeElement, this._activeWindowCmptHasChanged);\n                this._revertAriaHidden();\n                this._setAriaHidden(activeWindowCmpt.location.nativeElement);\n            }\n        });\n    }\n    _restoreScrollBar() {\n        const scrollBarRestoreFn = this._scrollBarRestoreFn;\n        if (scrollBarRestoreFn) {\n            this._scrollBarRestoreFn = null;\n            scrollBarRestoreFn();\n        }\n    }\n    _hideScrollBar() {\n        if (!this._scrollBarRestoreFn) {\n            this._scrollBarRestoreFn = this._scrollBar.hide();\n        }\n    }\n    open(moduleCFR, contentInjector, content, options) {\n        const containerEl = options.container instanceof HTMLElement ? options.container : isDefined(options.container) ?\n            this._document.querySelector(options.container) :\n            this._document.body;\n        const renderer = this._rendererFactory.createRenderer(null, null);\n        if (!containerEl) {\n            throw new Error(`The specified modal container \"${options.container || 'body'}\" was not found in the DOM.`);\n        }\n        this._hideScrollBar();\n        const activeModal = new NgbActiveModal();\n        const contentRef = this._getContentRef(moduleCFR, options.injector || contentInjector, content, activeModal, options);\n        let backdropCmptRef = options.backdrop !== false ? this._attachBackdrop(moduleCFR, containerEl) : undefined;\n        let windowCmptRef = this._attachWindowComponent(moduleCFR, containerEl, contentRef);\n        let ngbModalRef = new NgbModalRef(windowCmptRef, contentRef, backdropCmptRef, options.beforeDismiss);\n        this._registerModalRef(ngbModalRef);\n        this._registerWindowCmpt(windowCmptRef);\n        // We have to cleanup DOM after the last modal when BOTH 'hidden' was emitted and 'result' promise was resolved:\n        // - with animations OFF, 'hidden' emits synchronously, then 'result' is resolved asynchronously\n        // - with animations ON, 'result' is resolved asynchronously, then 'hidden' emits asynchronously\n        ngbModalRef.hidden.pipe(take(1)).subscribe(() => Promise.resolve(true).then(() => {\n            if (!this._modalRefs.length) {\n                renderer.removeClass(this._document.body, 'modal-open');\n                this._restoreScrollBar();\n                this._revertAriaHidden();\n            }\n        }));\n        activeModal.close = (result) => { ngbModalRef.close(result); };\n        activeModal.dismiss = (reason) => { ngbModalRef.dismiss(reason); };\n        this._applyWindowOptions(windowCmptRef.instance, options);\n        if (this._modalRefs.length === 1) {\n            renderer.addClass(this._document.body, 'modal-open');\n        }\n        if (backdropCmptRef && backdropCmptRef.instance) {\n            this._applyBackdropOptions(backdropCmptRef.instance, options);\n            backdropCmptRef.changeDetectorRef.detectChanges();\n        }\n        windowCmptRef.changeDetectorRef.detectChanges();\n        return ngbModalRef;\n    }\n    get activeInstances() { return this._activeInstances; }\n    dismissAll(reason) { this._modalRefs.forEach(ngbModalRef => ngbModalRef.dismiss(reason)); }\n    hasOpenModals() { return this._modalRefs.length > 0; }\n    _attachBackdrop(moduleCFR, containerEl) {\n        let backdropFactory = moduleCFR.resolveComponentFactory(NgbModalBackdrop);\n        let backdropCmptRef = backdropFactory.create(this._injector);\n        this._applicationRef.attachView(backdropCmptRef.hostView);\n        containerEl.appendChild(backdropCmptRef.location.nativeElement);\n        return backdropCmptRef;\n    }\n    _attachWindowComponent(moduleCFR, containerEl, contentRef) {\n        let windowFactory = moduleCFR.resolveComponentFactory(NgbModalWindow);\n        let windowCmptRef = windowFactory.create(this._injector, contentRef.nodes);\n        this._applicationRef.attachView(windowCmptRef.hostView);\n        containerEl.appendChild(windowCmptRef.location.nativeElement);\n        return windowCmptRef;\n    }\n    _applyWindowOptions(windowInstance, options) {\n        this._windowAttributes.forEach((optionName) => {\n            if (isDefined(options[optionName])) {\n                windowInstance[optionName] = options[optionName];\n            }\n        });\n    }\n    _applyBackdropOptions(backdropInstance, options) {\n        this._backdropAttributes.forEach((optionName) => {\n            if (isDefined(options[optionName])) {\n                backdropInstance[optionName] = options[optionName];\n            }\n        });\n    }\n    _getContentRef(moduleCFR, contentInjector, content, activeModal, options) {\n        if (!content) {\n            return new ContentRef([]);\n        }\n        else if (content instanceof TemplateRef) {\n            return this._createFromTemplateRef(content, activeModal);\n        }\n        else if (isString(content)) {\n            return this._createFromString(content);\n        }\n        else {\n            return this._createFromComponent(moduleCFR, contentInjector, content, activeModal, options);\n        }\n    }\n    _createFromTemplateRef(content, activeModal) {\n        const context = {\n            $implicit: activeModal,\n            close(result) { activeModal.close(result); },\n            dismiss(reason) { activeModal.dismiss(reason); }\n        };\n        const viewRef = content.createEmbeddedView(context);\n        this._applicationRef.attachView(viewRef);\n        return new ContentRef([viewRef.rootNodes], viewRef);\n    }\n    _createFromString(content) {\n        const component = this._document.createTextNode(`${content}`);\n        return new ContentRef([[component]]);\n    }\n    _createFromComponent(moduleCFR, contentInjector, content, context, options) {\n        const contentCmptFactory = moduleCFR.resolveComponentFactory(content);\n        const modalContentInjector = Injector.create({ providers: [{ provide: NgbActiveModal, useValue: context }], parent: contentInjector });\n        const componentRef = contentCmptFactory.create(modalContentInjector);\n        const componentNativeEl = componentRef.location.nativeElement;\n        if (options.scrollable) {\n            componentNativeEl.classList.add('component-host-scrollable');\n        }\n        this._applicationRef.attachView(componentRef.hostView);\n        // FIXME: we should here get rid of the component nativeElement\n        // and use `[Array.from(componentNativeEl.childNodes)]` instead and remove the above CSS class.\n        return new ContentRef([[componentNativeEl]], componentRef.hostView, componentRef);\n    }\n    _setAriaHidden(element) {\n        const parent = element.parentElement;\n        if (parent && element !== this._document.body) {\n            Array.from(parent.children).forEach(sibling => {\n                if (sibling !== element && sibling.nodeName !== 'SCRIPT') {\n                    this._ariaHiddenValues.set(sibling, sibling.getAttribute('aria-hidden'));\n                    sibling.setAttribute('aria-hidden', 'true');\n                }\n            });\n            this._setAriaHidden(parent);\n        }\n    }\n    _revertAriaHidden() {\n        this._ariaHiddenValues.forEach((value, element) => {\n            if (value) {\n                element.setAttribute('aria-hidden', value);\n            }\n            else {\n                element.removeAttribute('aria-hidden');\n            }\n        });\n        this._ariaHiddenValues.clear();\n    }\n    _registerModalRef(ngbModalRef) {\n        const unregisterModalRef = () => {\n            const index = this._modalRefs.indexOf(ngbModalRef);\n            if (index > -1) {\n                this._modalRefs.splice(index, 1);\n                this._activeInstances.emit(this._modalRefs);\n            }\n        };\n        this._modalRefs.push(ngbModalRef);\n        this._activeInstances.emit(this._modalRefs);\n        ngbModalRef.result.then(unregisterModalRef, unregisterModalRef);\n    }\n    _registerWindowCmpt(ngbWindowCmpt) {\n        this._windowCmpts.push(ngbWindowCmpt);\n        this._activeWindowCmptHasChanged.next();\n        ngbWindowCmpt.onDestroy(() => {\n            const index = this._windowCmpts.indexOf(ngbWindowCmpt);\n            if (index > -1) {\n                this._windowCmpts.splice(index, 1);\n                this._activeWindowCmptHasChanged.next();\n            }\n        });\n    }\n}\nNgbModalStack.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbModalStack, deps: [{ token: i0.ApplicationRef }, { token: i0.Injector }, { token: DOCUMENT }, { token: ScrollBar }, { token: i0.RendererFactory2 }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Injectable });\nNgbModalStack.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbModalStack, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbModalStack, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ApplicationRef }, { type: i0.Injector }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }, { type: ScrollBar }, { type: i0.RendererFactory2 }, { type: i0.NgZone }];\n    } });\n\n/**\n * A configuration service for the [`NgbModal`](#/components/modal/api#NgbModal) service.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all modals used in the application.\n*\n* @since 3.1.0\n*/\nclass NgbModalConfig {\n    constructor(_ngbConfig) {\n        this._ngbConfig = _ngbConfig;\n        this.backdrop = true;\n        this.fullscreen = false;\n        this.keyboard = true;\n    }\n    get animation() { return (this._animation === undefined) ? this._ngbConfig.animation : this._animation; }\n    set animation(animation) { this._animation = animation; }\n}\nNgbModalConfig.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbModalConfig, deps: [{ token: NgbConfig }], target: i0.ɵɵFactoryTarget.Injectable });\nNgbModalConfig.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbModalConfig, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbModalConfig, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: NgbConfig }]; } });\n\n/**\n * A service for opening modal windows.\n *\n * Creating a modal is straightforward: create a component or a template and pass it as an argument to\n * the `.open()` method.\n */\nclass NgbModal {\n    constructor(_moduleCFR, _injector, _modalStack, _config) {\n        this._moduleCFR = _moduleCFR;\n        this._injector = _injector;\n        this._modalStack = _modalStack;\n        this._config = _config;\n    }\n    /**\n     * Opens a new modal window with the specified content and supplied options.\n     *\n     * Content can be provided as a `TemplateRef` or a component type. If you pass a component type as content,\n     * then instances of those components can be injected with an instance of the `NgbActiveModal` class. You can then\n     * use `NgbActiveModal` methods to close / dismiss modals from \"inside\" of your component.\n     *\n     * Also see the [`NgbModalOptions`](#/components/modal/api#NgbModalOptions) for the list of supported options.\n     */\n    open(content, options = {}) {\n        const combinedOptions = Object.assign(Object.assign(Object.assign({}, this._config), { animation: this._config.animation }), options);\n        return this._modalStack.open(this._moduleCFR, this._injector, content, combinedOptions);\n    }\n    /**\n     * Returns an observable that holds the active modal instances.\n     */\n    get activeInstances() { return this._modalStack.activeInstances; }\n    /**\n     * Dismisses all currently displayed modal windows with the supplied reason.\n     *\n     * @since 3.1.0\n     */\n    dismissAll(reason) { this._modalStack.dismissAll(reason); }\n    /**\n     * Indicates if there are currently any open modal windows in the application.\n     *\n     * @since 3.3.0\n     */\n    hasOpenModals() { return this._modalStack.hasOpenModals(); }\n}\nNgbModal.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbModal, deps: [{ token: i0.ComponentFactoryResolver }, { token: i0.Injector }, { token: NgbModalStack }, { token: NgbModalConfig }], target: i0.ɵɵFactoryTarget.Injectable });\nNgbModal.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbModal, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbModal, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: i0.ComponentFactoryResolver }, { type: i0.Injector }, { type: NgbModalStack }, { type: NgbModalConfig }]; } });\n\nclass NgbModalModule {\n}\nNgbModalModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbModalModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nNgbModalModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbModalModule, declarations: [NgbModalBackdrop, NgbModalWindow] });\nNgbModalModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbModalModule, providers: [NgbModal] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbModalModule, decorators: [{\n            type: NgModule,\n            args: [{ declarations: [NgbModalBackdrop, NgbModalWindow], providers: [NgbModal] }]\n        }] });\n\n/**\n * A configuration service for the [`NgbNav`](#/components/nav/api#NgbNav) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the navs used in the application.\n *\n * @since 5.2.0\n */\nclass NgbNavConfig {\n    constructor(_ngbConfig) {\n        this._ngbConfig = _ngbConfig;\n        this.destroyOnHide = true;\n        this.orientation = 'horizontal';\n        this.roles = 'tablist';\n        this.keyboard = false;\n    }\n    get animation() { return (this._animation === undefined) ? this._ngbConfig.animation : this._animation; }\n    set animation(animation) { this._animation = animation; }\n}\nNgbNavConfig.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbNavConfig, deps: [{ token: NgbConfig }], target: i0.ɵɵFactoryTarget.Injectable });\nNgbNavConfig.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbNavConfig, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbNavConfig, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: NgbConfig }]; } });\n\nconst isValidNavId = (id) => isDefined(id) && id !== '';\nlet navCounter = 0;\n/**\n * This directive must be used to wrap content to be displayed in the nav.\n *\n * @since 5.2.0\n */\nclass NgbNavContent {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nNgbNavContent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbNavContent, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });\nNgbNavContent.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.3\", type: NgbNavContent, selector: \"ng-template[ngbNavContent]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbNavContent, decorators: [{\n            type: Directive,\n            args: [{ selector: 'ng-template[ngbNavContent]' }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });\n/**\n * The directive used to group nav link and related nav content. As well as set nav identifier and some options.\n *\n * @since 5.2.0\n */\nclass NgbNavItem {\n    constructor(nav, elementRef) {\n        this.elementRef = elementRef;\n        /**\n         * If `true`, the current nav item is disabled and can't be toggled by user.\n         *\n         * Nevertheless disabled nav can be selected programmatically via the `.select()` method and the `[activeId]` binding.\n         */\n        this.disabled = false;\n        /**\n         * An event emitted when the fade in transition is finished on the related nav content\n         *\n         * @since 8.0.0\n         */\n        this.shown = new EventEmitter();\n        /**\n         * An event emitted when the fade out transition is finished on the related nav content\n         *\n         * @since 8.0.0\n         */\n        this.hidden = new EventEmitter();\n        // TODO: cf https://github.com/angular/angular/issues/30106\n        this._nav = nav;\n    }\n    ngAfterContentChecked() {\n        // We are using @ContentChildren instead of @ContentChild as in the Angular version being used\n        // only @ContentChildren allows us to specify the {descendants: false} option.\n        // Without {descendants: false} we are hitting bugs described in:\n        // https://github.com/ng-bootstrap/ng-bootstrap/issues/2240\n        this.contentTpl = this.contentTpls.first;\n    }\n    ngOnInit() {\n        if (!isDefined(this.domId)) {\n            this.domId = `ngb-nav-${navCounter++}`;\n        }\n    }\n    get active() { return this._nav.activeId === this.id; }\n    get id() { return isValidNavId(this._id) ? this._id : this.domId; }\n    get panelDomId() { return `${this.domId}-panel`; }\n    isPanelInDom() {\n        return (isDefined(this.destroyOnHide) ? !this.destroyOnHide : !this._nav.destroyOnHide) || this.active;\n    }\n}\nNgbNavItem.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbNavItem, deps: [{ token: forwardRef(() => NgbNav) }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nNgbNavItem.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.3\", type: NgbNavItem, selector: \"[ngbNavItem]\", inputs: { destroyOnHide: \"destroyOnHide\", disabled: \"disabled\", domId: \"domId\", _id: [\"ngbNavItem\", \"_id\"] }, outputs: { shown: \"shown\", hidden: \"hidden\" }, host: { properties: { \"class.nav-item\": \"true\" } }, queries: [{ propertyName: \"contentTpls\", predicate: NgbNavContent }], exportAs: [\"ngbNavItem\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbNavItem, decorators: [{\n            type: Directive,\n            args: [{ selector: '[ngbNavItem]', exportAs: 'ngbNavItem', host: { '[class.nav-item]': 'true' } }]\n        }], ctorParameters: function () {\n        return [{ type: undefined, decorators: [{\n                        type: Inject,\n                        args: [forwardRef(() => NgbNav)]\n                    }] }, { type: i0.ElementRef }];\n    }, propDecorators: { destroyOnHide: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], domId: [{\n                type: Input\n            }], _id: [{\n                type: Input,\n                args: ['ngbNavItem']\n            }], shown: [{\n                type: Output\n            }], hidden: [{\n                type: Output\n            }], contentTpls: [{\n                type: ContentChildren,\n                args: [NgbNavContent, { descendants: false }]\n            }] } });\n/**\n * A nav directive that helps with implementing tabbed navigation components.\n *\n * @since 5.2.0\n */\nclass NgbNav {\n    constructor(role, config, _cd, _document) {\n        this.role = role;\n        this._cd = _cd;\n        this._document = _document;\n        /**\n         * The event emitted after the active nav changes\n         * The payload of the event is the newly active nav id\n         *\n         * If you want to prevent nav change, you should use `(navChange)` event\n         */\n        this.activeIdChange = new EventEmitter();\n        /**\n         * An event emitted when the fade in transition is finished for one of the items.\n         *\n         * Payload of the event is the nav id that was just shown.\n         *\n         * @since 8.0.0\n         */\n        this.shown = new EventEmitter();\n        /**\n         * An event emitted when the fade out transition is finished for one of the items.\n         *\n         * Payload of the event is the nav id that was just hidden.\n         *\n         * @since 8.0.0\n         */\n        this.hidden = new EventEmitter();\n        this.destroy$ = new Subject();\n        this.navItemChange$ = new Subject();\n        /**\n         * The nav change event emitted right before the nav change happens on user click.\n         *\n         * This event won't be emitted if nav is changed programmatically via `[activeId]` or `.select()`.\n         *\n         * See [`NgbNavChangeEvent`](#/components/nav/api#NgbNavChangeEvent) for payload details.\n         */\n        this.navChange = new EventEmitter();\n        this.animation = config.animation;\n        this.destroyOnHide = config.destroyOnHide;\n        this.orientation = config.orientation;\n        this.roles = config.roles;\n        this.keyboard = config.keyboard;\n    }\n    click(item) {\n        if (!item.disabled) {\n            this._updateActiveId(item.id);\n        }\n    }\n    onKeyDown(event) {\n        if (this.roles !== 'tablist' || !this.keyboard) {\n            return;\n        }\n        /* eslint-disable-next-line deprecation/deprecation */\n        const key = event.which;\n        const enabledLinks = this.links.filter(link => !link.navItem.disabled);\n        const { length } = enabledLinks;\n        let position = -1;\n        enabledLinks.forEach((link, index) => {\n            if (link.elRef.nativeElement === this._document.activeElement) {\n                position = index;\n            }\n        });\n        if (length) {\n            switch (key) {\n                case Key.ArrowLeft:\n                    if (this.orientation === 'vertical') {\n                        return;\n                    }\n                    position = (position - 1 + length) % length;\n                    break;\n                case Key.ArrowRight:\n                    if (this.orientation === 'vertical') {\n                        return;\n                    }\n                    position = (position + 1) % length;\n                    break;\n                case Key.ArrowDown:\n                    if (this.orientation === 'horizontal') {\n                        return;\n                    }\n                    position = (position + 1) % length;\n                    break;\n                case Key.ArrowUp:\n                    if (this.orientation === 'horizontal') {\n                        return;\n                    }\n                    position = (position - 1 + length) % length;\n                    break;\n                case Key.Home:\n                    position = 0;\n                    break;\n                case Key.End:\n                    position = length - 1;\n                    break;\n            }\n            if (this.keyboard === 'changeWithArrows') {\n                this.select(enabledLinks[position].navItem.id);\n            }\n            enabledLinks[position].elRef.nativeElement.focus();\n            event.preventDefault();\n        }\n    }\n    /**\n     * Selects the nav with the given id and shows its associated pane.\n     * Any other nav that was previously selected becomes unselected and its associated pane is hidden.\n     */\n    select(id) { this._updateActiveId(id, false); }\n    ngAfterContentInit() {\n        if (!isDefined(this.activeId)) {\n            const nextId = this.items.first ? this.items.first.id : null;\n            if (isValidNavId(nextId)) {\n                this._updateActiveId(nextId, false);\n                this._cd.detectChanges();\n            }\n        }\n        this.items.changes.pipe(takeUntil(this.destroy$)).subscribe(() => this._notifyItemChanged(this.activeId));\n    }\n    ngOnChanges({ activeId }) {\n        if (activeId && !activeId.firstChange) {\n            this._notifyItemChanged(activeId.currentValue);\n        }\n    }\n    ngOnDestroy() { this.destroy$.next(); }\n    _updateActiveId(nextId, emitNavChange = true) {\n        if (this.activeId !== nextId) {\n            let defaultPrevented = false;\n            if (emitNavChange) {\n                this.navChange.emit({ activeId: this.activeId, nextId, preventDefault: () => { defaultPrevented = true; } });\n            }\n            if (!defaultPrevented) {\n                this.activeId = nextId;\n                this.activeIdChange.emit(nextId);\n                this._notifyItemChanged(nextId);\n            }\n        }\n    }\n    _notifyItemChanged(nextItemId) { this.navItemChange$.next(this._getItemById(nextItemId)); }\n    _getItemById(itemId) {\n        return this.items && this.items.find(item => item.id === itemId) || null;\n    }\n}\nNgbNav.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbNav, deps: [{ token: 'role', attribute: true }, { token: NgbNavConfig }, { token: i0.ChangeDetectorRef }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Directive });\nNgbNav.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.3\", type: NgbNav, selector: \"[ngbNav]\", inputs: { activeId: \"activeId\", animation: \"animation\", destroyOnHide: \"destroyOnHide\", orientation: \"orientation\", roles: \"roles\", keyboard: \"keyboard\" }, outputs: { activeIdChange: \"activeIdChange\", shown: \"shown\", hidden: \"hidden\", navChange: \"navChange\" }, host: { listeners: { \"keydown.arrowLeft\": \"onKeyDown($event)\", \"keydown.arrowRight\": \"onKeyDown($event)\", \"keydown.arrowDown\": \"onKeyDown($event)\", \"keydown.arrowUp\": \"onKeyDown($event)\", \"keydown.Home\": \"onKeyDown($event)\", \"keydown.End\": \"onKeyDown($event)\" }, properties: { \"class.nav\": \"true\", \"class.flex-column\": \"orientation === 'vertical'\", \"attr.aria-orientation\": \"orientation === 'vertical' && roles === 'tablist' ? 'vertical' : undefined\", \"attr.role\": \"role ? role : roles ? 'tablist' : undefined\" } }, queries: [{ propertyName: \"items\", predicate: NgbNavItem }, { propertyName: \"links\", predicate: i0.forwardRef(function () { return NgbNavLink; }), descendants: true }], exportAs: [\"ngbNav\"], usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbNav, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[ngbNav]',\n                    exportAs: 'ngbNav',\n                    host: {\n                        '[class.nav]': 'true',\n                        '[class.flex-column]': `orientation === 'vertical'`,\n                        '[attr.aria-orientation]': `orientation === 'vertical' && roles === 'tablist' ? 'vertical' : undefined`,\n                        '[attr.role]': `role ? role : roles ? 'tablist' : undefined`,\n                        '(keydown.arrowLeft)': 'onKeyDown($event)',\n                        '(keydown.arrowRight)': 'onKeyDown($event)',\n                        '(keydown.arrowDown)': 'onKeyDown($event)',\n                        '(keydown.arrowUp)': 'onKeyDown($event)',\n                        '(keydown.Home)': 'onKeyDown($event)',\n                        '(keydown.End)': 'onKeyDown($event)'\n                    }\n                }]\n        }], ctorParameters: function () {\n        return [{ type: undefined, decorators: [{\n                        type: Attribute,\n                        args: ['role']\n                    }] }, { type: NgbNavConfig }, { type: i0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }];\n    }, propDecorators: { activeId: [{\n                type: Input\n            }], activeIdChange: [{\n                type: Output\n            }], animation: [{\n                type: Input\n            }], destroyOnHide: [{\n                type: Input\n            }], orientation: [{\n                type: Input\n            }], roles: [{\n                type: Input\n            }], keyboard: [{\n                type: Input\n            }], shown: [{\n                type: Output\n            }], hidden: [{\n                type: Output\n            }], items: [{\n                type: ContentChildren,\n                args: [NgbNavItem]\n            }], links: [{\n                type: ContentChildren,\n                args: [forwardRef(() => NgbNavLink), { descendants: true }]\n            }], navChange: [{\n                type: Output\n            }] } });\n/**\n * A directive to put on the nav link.\n *\n * @since 5.2.0\n */\nclass NgbNavLink {\n    constructor(role, navItem, nav, elRef) {\n        this.role = role;\n        this.navItem = navItem;\n        this.nav = nav;\n        this.elRef = elRef;\n    }\n    hasNavItemClass() {\n        // with alternative markup we have to add `.nav-item` class, because `ngbNavItem` is on the ng-container\n        return this.navItem.elementRef.nativeElement.nodeType === Node.COMMENT_NODE;\n    }\n}\nNgbNavLink.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbNavLink, deps: [{ token: 'role', attribute: true }, { token: NgbNavItem }, { token: NgbNav }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nNgbNavLink.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.3\", type: NgbNavLink, selector: \"a[ngbNavLink]\", host: { attributes: { \"href\": \"\" }, listeners: { \"click\": \"nav.click(navItem); $event.preventDefault()\" }, properties: { \"id\": \"navItem.domId\", \"class.nav-link\": \"true\", \"class.nav-item\": \"hasNavItemClass()\", \"attr.role\": \"role ? role : nav.roles ? 'tab' : undefined\", \"class.active\": \"navItem.active\", \"class.disabled\": \"navItem.disabled\", \"attr.tabindex\": \"navItem.disabled ? -1 : undefined\", \"attr.aria-controls\": \"navItem.isPanelInDom() ? navItem.panelDomId : null\", \"attr.aria-selected\": \"navItem.active\", \"attr.aria-disabled\": \"navItem.disabled\" } }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbNavLink, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'a[ngbNavLink]',\n                    host: {\n                        '[id]': 'navItem.domId',\n                        '[class.nav-link]': 'true',\n                        '[class.nav-item]': 'hasNavItemClass()',\n                        '[attr.role]': `role ? role : nav.roles ? 'tab' : undefined`,\n                        'href': '',\n                        '[class.active]': 'navItem.active',\n                        '[class.disabled]': 'navItem.disabled',\n                        '[attr.tabindex]': 'navItem.disabled ? -1 : undefined',\n                        '[attr.aria-controls]': 'navItem.isPanelInDom() ? navItem.panelDomId : null',\n                        '[attr.aria-selected]': 'navItem.active',\n                        '[attr.aria-disabled]': 'navItem.disabled',\n                        '(click)': 'nav.click(navItem); $event.preventDefault()'\n                    }\n                }]\n        }], ctorParameters: function () {\n        return [{ type: undefined, decorators: [{\n                        type: Attribute,\n                        args: ['role']\n                    }] }, { type: NgbNavItem }, { type: NgbNav }, { type: i0.ElementRef }];\n    } });\n\nconst ngbNavFadeOutTransition = ({ classList }) => {\n    classList.remove('show');\n    return () => classList.remove('active');\n};\nconst ngbNavFadeInTransition = (element, animation) => {\n    if (animation) {\n        reflow(element);\n    }\n    element.classList.add('show');\n};\n\nclass NgbNavPane {\n    constructor(elRef) {\n        this.elRef = elRef;\n    }\n}\nNgbNavPane.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbNavPane, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nNgbNavPane.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.3\", type: NgbNavPane, selector: \"[ngbNavPane]\", inputs: { item: \"item\", nav: \"nav\", role: \"role\" }, host: { properties: { \"id\": \"item.panelDomId\", \"class.fade\": \"nav.animation\", \"attr.role\": \"role ? role : nav.roles ? \\\"tabpanel\\\" : undefined\", \"attr.aria-labelledby\": \"item.domId\" }, classAttribute: \"tab-pane\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbNavPane, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[ngbNavPane]',\n                    host: {\n                        '[id]': 'item.panelDomId',\n                        'class': 'tab-pane',\n                        '[class.fade]': 'nav.animation',\n                        '[attr.role]': 'role ? role : nav.roles ? \"tabpanel\" : undefined',\n                        '[attr.aria-labelledby]': 'item.domId'\n                    }\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { item: [{\n                type: Input\n            }], nav: [{\n                type: Input\n            }], role: [{\n                type: Input\n            }] } });\n/**\n * The outlet where currently active nav content will be displayed.\n *\n * @since 5.2.0\n */\nclass NgbNavOutlet {\n    constructor(_cd, _ngZone) {\n        this._cd = _cd;\n        this._ngZone = _ngZone;\n        this._activePane = null;\n    }\n    isPanelTransitioning(item) { var _a; return ((_a = this._activePane) === null || _a === void 0 ? void 0 : _a.item) === item; }\n    ngAfterViewInit() {\n        var _a;\n        // initial display\n        this._updateActivePane();\n        // this will be emitted for all 3 types of nav changes: .select(), [activeId] or (click)\n        this.nav.navItemChange$\n            .pipe(takeUntil(this.nav.destroy$), startWith(((_a = this._activePane) === null || _a === void 0 ? void 0 : _a.item) || null), distinctUntilChanged(), skip(1))\n            .subscribe(nextItem => {\n            const options = { animation: this.nav.animation, runningTransition: 'stop' };\n            // next panel we're switching to will only appear in DOM after the change detection is done\n            // and `this._panes` will be updated\n            this._cd.detectChanges();\n            // fading out\n            if (this._activePane) {\n                ngbRunTransition(this._ngZone, this._activePane.elRef.nativeElement, ngbNavFadeOutTransition, options)\n                    .subscribe(() => {\n                    var _a;\n                    const activeItem = (_a = this._activePane) === null || _a === void 0 ? void 0 : _a.item;\n                    this._activePane = this._getPaneForItem(nextItem);\n                    // mark for check when transition finishes as outlet or parent containers might be OnPush\n                    // without this the panes that have \"faded out\" will stay in DOM\n                    this._cd.markForCheck();\n                    // fading in\n                    if (this._activePane) {\n                        // we have to add the '.active' class before running the transition,\n                        // because it should be in place before `ngbRunTransition` does `reflow()`\n                        this._activePane.elRef.nativeElement.classList.add('active');\n                        ngbRunTransition(this._ngZone, this._activePane.elRef.nativeElement, ngbNavFadeInTransition, options)\n                            .subscribe(() => {\n                            if (nextItem) {\n                                nextItem.shown.emit();\n                                this.nav.shown.emit(nextItem.id);\n                            }\n                        });\n                    }\n                    if (activeItem) {\n                        activeItem.hidden.emit();\n                        this.nav.hidden.emit(activeItem.id);\n                    }\n                });\n            }\n            else {\n                this._updateActivePane();\n            }\n        });\n    }\n    _updateActivePane() {\n        var _a, _b;\n        this._activePane = this._getActivePane();\n        (_a = this._activePane) === null || _a === void 0 ? void 0 : _a.elRef.nativeElement.classList.add('show');\n        (_b = this._activePane) === null || _b === void 0 ? void 0 : _b.elRef.nativeElement.classList.add('active');\n    }\n    _getPaneForItem(item) {\n        return this._panes && this._panes.find(pane => pane.item === item) || null;\n    }\n    _getActivePane() {\n        return this._panes && this._panes.find(pane => pane.item.active) || null;\n    }\n}\nNgbNavOutlet.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbNavOutlet, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\nNgbNavOutlet.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: NgbNavOutlet, selector: \"[ngbNavOutlet]\", inputs: { paneRole: \"paneRole\", nav: [\"ngbNavOutlet\", \"nav\"] }, host: { properties: { \"class.tab-content\": \"true\" } }, viewQueries: [{ propertyName: \"_panes\", predicate: NgbNavPane, descendants: true }], ngImport: i0, template: `\n    <ng-template ngFor let-item [ngForOf]=\"nav.items\">\n      <div ngbNavPane *ngIf=\"item.isPanelInDom() || isPanelTransitioning(item)\" [item]=\"item\" [nav]=\"nav\" [role]=\"paneRole\">\n        <ng-template [ngTemplateOutlet]=\"item.contentTpl?.templateRef || null\"\n                     [ngTemplateOutletContext]=\"{$implicit: item.active || isPanelTransitioning(item)}\"></ng-template>\n      </div>\n    </ng-template>\n  `, isInline: true, directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: NgbNavPane, selector: \"[ngbNavPane]\", inputs: [\"item\", \"nav\", \"role\"] }, { type: i2.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbNavOutlet, decorators: [{\n            type: Component,\n            args: [{\n                    selector: '[ngbNavOutlet]',\n                    host: { '[class.tab-content]': 'true' },\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: `\n    <ng-template ngFor let-item [ngForOf]=\"nav.items\">\n      <div ngbNavPane *ngIf=\"item.isPanelInDom() || isPanelTransitioning(item)\" [item]=\"item\" [nav]=\"nav\" [role]=\"paneRole\">\n        <ng-template [ngTemplateOutlet]=\"item.contentTpl?.templateRef || null\"\n                     [ngTemplateOutletContext]=\"{$implicit: item.active || isPanelTransitioning(item)}\"></ng-template>\n      </div>\n    </ng-template>\n  `\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.NgZone }]; }, propDecorators: { _panes: [{\n                type: ViewChildren,\n                args: [NgbNavPane]\n            }], paneRole: [{\n                type: Input\n            }], nav: [{\n                type: Input,\n                args: ['ngbNavOutlet']\n            }] } });\n\nconst NGB_NAV_DIRECTIVES = [NgbNavContent, NgbNav, NgbNavItem, NgbNavLink, NgbNavOutlet, NgbNavPane];\nclass NgbNavModule {\n}\nNgbNavModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbNavModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nNgbNavModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbNavModule, declarations: [NgbNavContent, NgbNav, NgbNavItem, NgbNavLink, NgbNavOutlet, NgbNavPane], imports: [CommonModule], exports: [NgbNavContent, NgbNav, NgbNavItem, NgbNavLink, NgbNavOutlet, NgbNavPane] });\nNgbNavModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbNavModule, imports: [[CommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbNavModule, decorators: [{\n            type: NgModule,\n            args: [{ declarations: NGB_NAV_DIRECTIVES, exports: NGB_NAV_DIRECTIVES, imports: [CommonModule] }]\n        }] });\n\n/**\n * A configuration service for the [`NgbPagination`](#/components/pagination/api#NgbPagination) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the paginations used in the application.\n */\nclass NgbPaginationConfig {\n    constructor() {\n        this.disabled = false;\n        this.boundaryLinks = false;\n        this.directionLinks = true;\n        this.ellipses = true;\n        this.maxSize = 0;\n        this.pageSize = 10;\n        this.rotate = false;\n    }\n}\nNgbPaginationConfig.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbPaginationConfig, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nNgbPaginationConfig.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbPaginationConfig, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbPaginationConfig, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\n/**\n * A directive to match the 'ellipsis' link template\n *\n * @since 4.1.0\n */\nclass NgbPaginationEllipsis {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nNgbPaginationEllipsis.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbPaginationEllipsis, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });\nNgbPaginationEllipsis.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.3\", type: NgbPaginationEllipsis, selector: \"ng-template[ngbPaginationEllipsis]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbPaginationEllipsis, decorators: [{\n            type: Directive,\n            args: [{ selector: 'ng-template[ngbPaginationEllipsis]' }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });\n/**\n * A directive to match the 'first' link template\n *\n * @since 4.1.0\n */\nclass NgbPaginationFirst {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nNgbPaginationFirst.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbPaginationFirst, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });\nNgbPaginationFirst.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.3\", type: NgbPaginationFirst, selector: \"ng-template[ngbPaginationFirst]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbPaginationFirst, decorators: [{\n            type: Directive,\n            args: [{ selector: 'ng-template[ngbPaginationFirst]' }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });\n/**\n * A directive to match the 'last' link template\n *\n * @since 4.1.0\n */\nclass NgbPaginationLast {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nNgbPaginationLast.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbPaginationLast, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });\nNgbPaginationLast.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.3\", type: NgbPaginationLast, selector: \"ng-template[ngbPaginationLast]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbPaginationLast, decorators: [{\n            type: Directive,\n            args: [{ selector: 'ng-template[ngbPaginationLast]' }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });\n/**\n * A directive to match the 'next' link template\n *\n * @since 4.1.0\n */\nclass NgbPaginationNext {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nNgbPaginationNext.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbPaginationNext, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });\nNgbPaginationNext.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.3\", type: NgbPaginationNext, selector: \"ng-template[ngbPaginationNext]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbPaginationNext, decorators: [{\n            type: Directive,\n            args: [{ selector: 'ng-template[ngbPaginationNext]' }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });\n/**\n * A directive to match the page 'number' link template\n *\n * @since 4.1.0\n */\nclass NgbPaginationNumber {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nNgbPaginationNumber.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbPaginationNumber, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });\nNgbPaginationNumber.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.3\", type: NgbPaginationNumber, selector: \"ng-template[ngbPaginationNumber]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbPaginationNumber, decorators: [{\n            type: Directive,\n            args: [{ selector: 'ng-template[ngbPaginationNumber]' }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });\n/**\n * A directive to match the 'previous' link template\n *\n * @since 4.1.0\n */\nclass NgbPaginationPrevious {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nNgbPaginationPrevious.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbPaginationPrevious, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });\nNgbPaginationPrevious.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.3\", type: NgbPaginationPrevious, selector: \"ng-template[ngbPaginationPrevious]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbPaginationPrevious, decorators: [{\n            type: Directive,\n            args: [{ selector: 'ng-template[ngbPaginationPrevious]' }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });\n/**\n * A directive to match the 'pages' whole content\n *\n * @since 9.1.0\n */\nclass NgbPaginationPages {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nNgbPaginationPages.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbPaginationPages, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });\nNgbPaginationPages.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.3\", type: NgbPaginationPages, selector: \"ng-template[ngbPaginationPages]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbPaginationPages, decorators: [{\n            type: Directive,\n            args: [{ selector: 'ng-template[ngbPaginationPages]' }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });\n/**\n * A component that displays page numbers and allows to customize them in several ways.\n */\nclass NgbPagination {\n    constructor(config) {\n        this.pageCount = 0;\n        this.pages = [];\n        /**\n         *  The current page.\n         *\n         *  Page numbers start with `1`.\n         */\n        this.page = 1;\n        /**\n         *  An event fired when the page is changed. Will fire only if collection size is set and all values are valid.\n         *\n         *  Event payload is the number of the newly selected page.\n         *\n         *  Page numbers start with `1`.\n         */\n        this.pageChange = new EventEmitter(true);\n        this.disabled = config.disabled;\n        this.boundaryLinks = config.boundaryLinks;\n        this.directionLinks = config.directionLinks;\n        this.ellipses = config.ellipses;\n        this.maxSize = config.maxSize;\n        this.pageSize = config.pageSize;\n        this.rotate = config.rotate;\n        this.size = config.size;\n    }\n    hasPrevious() { return this.page > 1; }\n    hasNext() { return this.page < this.pageCount; }\n    nextDisabled() { return !this.hasNext() || this.disabled; }\n    previousDisabled() { return !this.hasPrevious() || this.disabled; }\n    selectPage(pageNumber) { this._updatePages(pageNumber); }\n    ngOnChanges(changes) { this._updatePages(this.page); }\n    isEllipsis(pageNumber) { return pageNumber === -1; }\n    /**\n     * Appends ellipses and first/last page number to the displayed pages\n     */\n    _applyEllipses(start, end) {\n        if (this.ellipses) {\n            if (start > 0) {\n                // The first page will always be included. If the displayed range\n                // starts after the third page, then add ellipsis. But if the range\n                // starts on the third page, then add the second page instead of\n                // an ellipsis, because the ellipsis would only hide a single page.\n                if (start > 2) {\n                    this.pages.unshift(-1);\n                }\n                else if (start === 2) {\n                    this.pages.unshift(2);\n                }\n                this.pages.unshift(1);\n            }\n            if (end < this.pageCount) {\n                // The last page will always be included. If the displayed range\n                // ends before the third-last page, then add ellipsis. But if the range\n                // ends on third-last page, then add the second-last page instead of\n                // an ellipsis, because the ellipsis would only hide a single page.\n                if (end < (this.pageCount - 2)) {\n                    this.pages.push(-1);\n                }\n                else if (end === (this.pageCount - 2)) {\n                    this.pages.push(this.pageCount - 1);\n                }\n                this.pages.push(this.pageCount);\n            }\n        }\n    }\n    /**\n     * Rotates page numbers based on maxSize items visible.\n     * Currently selected page stays in the middle:\n     *\n     * Ex. for selected page = 6:\n     * [5,*6*,7] for maxSize = 3\n     * [4,5,*6*,7] for maxSize = 4\n     */\n    _applyRotation() {\n        let start = 0;\n        let end = this.pageCount;\n        let leftOffset = Math.floor(this.maxSize / 2);\n        let rightOffset = this.maxSize % 2 === 0 ? leftOffset - 1 : leftOffset;\n        if (this.page <= leftOffset) {\n            // very beginning, no rotation -> [0..maxSize]\n            end = this.maxSize;\n        }\n        else if (this.pageCount - this.page < leftOffset) {\n            // very end, no rotation -> [len-maxSize..len]\n            start = this.pageCount - this.maxSize;\n        }\n        else {\n            // rotate\n            start = this.page - leftOffset - 1;\n            end = this.page + rightOffset;\n        }\n        return [start, end];\n    }\n    /**\n     * Paginates page numbers based on maxSize items per page.\n     */\n    _applyPagination() {\n        let page = Math.ceil(this.page / this.maxSize) - 1;\n        let start = page * this.maxSize;\n        let end = start + this.maxSize;\n        return [start, end];\n    }\n    _setPageInRange(newPageNo) {\n        const prevPageNo = this.page;\n        this.page = getValueInRange(newPageNo, this.pageCount, 1);\n        if (this.page !== prevPageNo && isNumber(this.collectionSize)) {\n            this.pageChange.emit(this.page);\n        }\n    }\n    _updatePages(newPage) {\n        this.pageCount = Math.ceil(this.collectionSize / this.pageSize);\n        if (!isNumber(this.pageCount)) {\n            this.pageCount = 0;\n        }\n        // fill-in model needed to render pages\n        this.pages.length = 0;\n        for (let i = 1; i <= this.pageCount; i++) {\n            this.pages.push(i);\n        }\n        // set page within 1..max range\n        this._setPageInRange(newPage);\n        // apply maxSize if necessary\n        if (this.maxSize > 0 && this.pageCount > this.maxSize) {\n            let start = 0;\n            let end = this.pageCount;\n            // either paginating or rotating page numbers\n            if (this.rotate) {\n                [start, end] = this._applyRotation();\n            }\n            else {\n                [start, end] = this._applyPagination();\n            }\n            this.pages = this.pages.slice(start, end);\n            // adding ellipses\n            this._applyEllipses(start, end);\n        }\n    }\n}\nNgbPagination.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbPagination, deps: [{ token: NgbPaginationConfig }], target: i0.ɵɵFactoryTarget.Component });\nNgbPagination.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: NgbPagination, selector: \"ngb-pagination\", inputs: { disabled: \"disabled\", boundaryLinks: \"boundaryLinks\", directionLinks: \"directionLinks\", ellipses: \"ellipses\", rotate: \"rotate\", collectionSize: \"collectionSize\", maxSize: \"maxSize\", page: \"page\", pageSize: \"pageSize\", size: \"size\" }, outputs: { pageChange: \"pageChange\" }, host: { attributes: { \"role\": \"navigation\" } }, queries: [{ propertyName: \"tplEllipsis\", first: true, predicate: NgbPaginationEllipsis, descendants: true }, { propertyName: \"tplFirst\", first: true, predicate: NgbPaginationFirst, descendants: true }, { propertyName: \"tplLast\", first: true, predicate: NgbPaginationLast, descendants: true }, { propertyName: \"tplNext\", first: true, predicate: NgbPaginationNext, descendants: true }, { propertyName: \"tplNumber\", first: true, predicate: NgbPaginationNumber, descendants: true }, { propertyName: \"tplPrevious\", first: true, predicate: NgbPaginationPrevious, descendants: true }, { propertyName: \"tplPages\", first: true, predicate: NgbPaginationPages, descendants: true }], usesOnChanges: true, ngImport: i0, template: `\n    <ng-template #first><span aria-hidden=\"true\" i18n=\"@@ngb.pagination.first\">&laquo;&laquo;</span></ng-template>\n    <ng-template #previous><span aria-hidden=\"true\" i18n=\"@@ngb.pagination.previous\">&laquo;</span></ng-template>\n    <ng-template #next><span aria-hidden=\"true\" i18n=\"@@ngb.pagination.next\">&raquo;</span></ng-template>\n    <ng-template #last><span aria-hidden=\"true\" i18n=\"@@ngb.pagination.last\">&raquo;&raquo;</span></ng-template>\n    <ng-template #ellipsis>...</ng-template>\n    <ng-template #defaultNumber let-page let-currentPage=\"currentPage\">\n      {{ page }}\n      <span *ngIf=\"page === currentPage\" class=\"visually-hidden\">(current)</span>\n    </ng-template>\n    <ng-template #defaultPages let-page let-pages=\"pages\" let-disabled=\"disabled\">\n      <li *ngFor=\"let pageNumber of pages\" class=\"page-item\" [class.active]=\"pageNumber === page\"\n        [class.disabled]=\"isEllipsis(pageNumber) || disabled\" [attr.aria-current]=\"(pageNumber === page ? 'page' : null)\">\n        <a *ngIf=\"isEllipsis(pageNumber)\" class=\"page-link\" tabindex=\"-1\" aria-disabled=\"true\">\n          <ng-template [ngTemplateOutlet]=\"tplEllipsis?.templateRef || ellipsis\"\n                      [ngTemplateOutletContext]=\"{disabled: true, currentPage: page}\"></ng-template>\n        </a>\n        <a *ngIf=\"!isEllipsis(pageNumber)\" class=\"page-link\" href (click)=\"selectPage(pageNumber); $event.preventDefault()\"\n          [attr.tabindex]=\"disabled ? '-1' : null\" [attr.aria-disabled]=\"disabled ? 'true' : null\">\n          <ng-template [ngTemplateOutlet]=\"tplNumber?.templateRef || defaultNumber\"\n                      [ngTemplateOutletContext]=\"{disabled: disabled, $implicit: pageNumber, currentPage: page}\"></ng-template>\n        </a>\n      </li>\n    </ng-template>\n    <ul [class]=\"'pagination' + (size ? ' pagination-' + size : '')\">\n      <li *ngIf=\"boundaryLinks\" class=\"page-item\"\n        [class.disabled]=\"previousDisabled()\">\n        <a aria-label=\"First\" i18n-aria-label=\"@@ngb.pagination.first-aria\" class=\"page-link\" href\n          (click)=\"selectPage(1); $event.preventDefault()\" [attr.tabindex]=\"previousDisabled() ? '-1' : null\"\n          [attr.aria-disabled]=\"previousDisabled() ? 'true' : null\">\n          <ng-template [ngTemplateOutlet]=\"tplFirst?.templateRef || first\"\n                       [ngTemplateOutletContext]=\"{disabled: previousDisabled(), currentPage: page}\"></ng-template>\n        </a>\n      </li>\n\n      <li *ngIf=\"directionLinks\" class=\"page-item\"\n        [class.disabled]=\"previousDisabled()\">\n        <a aria-label=\"Previous\" i18n-aria-label=\"@@ngb.pagination.previous-aria\" class=\"page-link\" href\n          (click)=\"selectPage(page-1); $event.preventDefault()\" [attr.tabindex]=\"previousDisabled() ? '-1' : null\"\n          [attr.aria-disabled]=\"previousDisabled() ? 'true' : null\">\n          <ng-template [ngTemplateOutlet]=\"tplPrevious?.templateRef || previous\"\n                       [ngTemplateOutletContext]=\"{disabled: previousDisabled()}\"></ng-template>\n        </a>\n      </li>\n      <ng-template\n        [ngTemplateOutlet]=\"tplPages?.templateRef || defaultPages\"\n        [ngTemplateOutletContext]=\"{ $implicit: page, pages: pages, disabled: disabled }\"\n      >\n      </ng-template>\n      <li *ngIf=\"directionLinks\" class=\"page-item\" [class.disabled]=\"nextDisabled()\">\n        <a aria-label=\"Next\" i18n-aria-label=\"@@ngb.pagination.next-aria\" class=\"page-link\" href\n          (click)=\"selectPage(page+1); $event.preventDefault()\" [attr.tabindex]=\"nextDisabled() ? '-1' : null\"\n          [attr.aria-disabled]=\"nextDisabled() ? 'true' : null\">\n          <ng-template [ngTemplateOutlet]=\"tplNext?.templateRef || next\"\n                       [ngTemplateOutletContext]=\"{disabled: nextDisabled(), currentPage: page}\"></ng-template>\n        </a>\n      </li>\n\n      <li *ngIf=\"boundaryLinks\" class=\"page-item\" [class.disabled]=\"nextDisabled()\">\n        <a aria-label=\"Last\" i18n-aria-label=\"@@ngb.pagination.last-aria\" class=\"page-link\" href\n          (click)=\"selectPage(pageCount); $event.preventDefault()\" [attr.tabindex]=\"nextDisabled() ? '-1' : null\"\n          [attr.aria-disabled]=\"nextDisabled() ? 'true' : null\">\n          <ng-template [ngTemplateOutlet]=\"tplLast?.templateRef || last\"\n                       [ngTemplateOutletContext]=\"{disabled: nextDisabled(), currentPage: page}\"></ng-template>\n        </a>\n      </li>\n    </ul>\n  `, isInline: true, directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i2.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbPagination, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ngb-pagination',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    host: { 'role': 'navigation' },\n                    template: `\n    <ng-template #first><span aria-hidden=\"true\" i18n=\"@@ngb.pagination.first\">&laquo;&laquo;</span></ng-template>\n    <ng-template #previous><span aria-hidden=\"true\" i18n=\"@@ngb.pagination.previous\">&laquo;</span></ng-template>\n    <ng-template #next><span aria-hidden=\"true\" i18n=\"@@ngb.pagination.next\">&raquo;</span></ng-template>\n    <ng-template #last><span aria-hidden=\"true\" i18n=\"@@ngb.pagination.last\">&raquo;&raquo;</span></ng-template>\n    <ng-template #ellipsis>...</ng-template>\n    <ng-template #defaultNumber let-page let-currentPage=\"currentPage\">\n      {{ page }}\n      <span *ngIf=\"page === currentPage\" class=\"visually-hidden\">(current)</span>\n    </ng-template>\n    <ng-template #defaultPages let-page let-pages=\"pages\" let-disabled=\"disabled\">\n      <li *ngFor=\"let pageNumber of pages\" class=\"page-item\" [class.active]=\"pageNumber === page\"\n        [class.disabled]=\"isEllipsis(pageNumber) || disabled\" [attr.aria-current]=\"(pageNumber === page ? 'page' : null)\">\n        <a *ngIf=\"isEllipsis(pageNumber)\" class=\"page-link\" tabindex=\"-1\" aria-disabled=\"true\">\n          <ng-template [ngTemplateOutlet]=\"tplEllipsis?.templateRef || ellipsis\"\n                      [ngTemplateOutletContext]=\"{disabled: true, currentPage: page}\"></ng-template>\n        </a>\n        <a *ngIf=\"!isEllipsis(pageNumber)\" class=\"page-link\" href (click)=\"selectPage(pageNumber); $event.preventDefault()\"\n          [attr.tabindex]=\"disabled ? '-1' : null\" [attr.aria-disabled]=\"disabled ? 'true' : null\">\n          <ng-template [ngTemplateOutlet]=\"tplNumber?.templateRef || defaultNumber\"\n                      [ngTemplateOutletContext]=\"{disabled: disabled, $implicit: pageNumber, currentPage: page}\"></ng-template>\n        </a>\n      </li>\n    </ng-template>\n    <ul [class]=\"'pagination' + (size ? ' pagination-' + size : '')\">\n      <li *ngIf=\"boundaryLinks\" class=\"page-item\"\n        [class.disabled]=\"previousDisabled()\">\n        <a aria-label=\"First\" i18n-aria-label=\"@@ngb.pagination.first-aria\" class=\"page-link\" href\n          (click)=\"selectPage(1); $event.preventDefault()\" [attr.tabindex]=\"previousDisabled() ? '-1' : null\"\n          [attr.aria-disabled]=\"previousDisabled() ? 'true' : null\">\n          <ng-template [ngTemplateOutlet]=\"tplFirst?.templateRef || first\"\n                       [ngTemplateOutletContext]=\"{disabled: previousDisabled(), currentPage: page}\"></ng-template>\n        </a>\n      </li>\n\n      <li *ngIf=\"directionLinks\" class=\"page-item\"\n        [class.disabled]=\"previousDisabled()\">\n        <a aria-label=\"Previous\" i18n-aria-label=\"@@ngb.pagination.previous-aria\" class=\"page-link\" href\n          (click)=\"selectPage(page-1); $event.preventDefault()\" [attr.tabindex]=\"previousDisabled() ? '-1' : null\"\n          [attr.aria-disabled]=\"previousDisabled() ? 'true' : null\">\n          <ng-template [ngTemplateOutlet]=\"tplPrevious?.templateRef || previous\"\n                       [ngTemplateOutletContext]=\"{disabled: previousDisabled()}\"></ng-template>\n        </a>\n      </li>\n      <ng-template\n        [ngTemplateOutlet]=\"tplPages?.templateRef || defaultPages\"\n        [ngTemplateOutletContext]=\"{ $implicit: page, pages: pages, disabled: disabled }\"\n      >\n      </ng-template>\n      <li *ngIf=\"directionLinks\" class=\"page-item\" [class.disabled]=\"nextDisabled()\">\n        <a aria-label=\"Next\" i18n-aria-label=\"@@ngb.pagination.next-aria\" class=\"page-link\" href\n          (click)=\"selectPage(page+1); $event.preventDefault()\" [attr.tabindex]=\"nextDisabled() ? '-1' : null\"\n          [attr.aria-disabled]=\"nextDisabled() ? 'true' : null\">\n          <ng-template [ngTemplateOutlet]=\"tplNext?.templateRef || next\"\n                       [ngTemplateOutletContext]=\"{disabled: nextDisabled(), currentPage: page}\"></ng-template>\n        </a>\n      </li>\n\n      <li *ngIf=\"boundaryLinks\" class=\"page-item\" [class.disabled]=\"nextDisabled()\">\n        <a aria-label=\"Last\" i18n-aria-label=\"@@ngb.pagination.last-aria\" class=\"page-link\" href\n          (click)=\"selectPage(pageCount); $event.preventDefault()\" [attr.tabindex]=\"nextDisabled() ? '-1' : null\"\n          [attr.aria-disabled]=\"nextDisabled() ? 'true' : null\">\n          <ng-template [ngTemplateOutlet]=\"tplLast?.templateRef || last\"\n                       [ngTemplateOutletContext]=\"{disabled: nextDisabled(), currentPage: page}\"></ng-template>\n        </a>\n      </li>\n    </ul>\n  `\n                }]\n        }], ctorParameters: function () { return [{ type: NgbPaginationConfig }]; }, propDecorators: { tplEllipsis: [{\n                type: ContentChild,\n                args: [NgbPaginationEllipsis, { static: false }]\n            }], tplFirst: [{\n                type: ContentChild,\n                args: [NgbPaginationFirst, { static: false }]\n            }], tplLast: [{\n                type: ContentChild,\n                args: [NgbPaginationLast, { static: false }]\n            }], tplNext: [{\n                type: ContentChild,\n                args: [NgbPaginationNext, { static: false }]\n            }], tplNumber: [{\n                type: ContentChild,\n                args: [NgbPaginationNumber, { static: false }]\n            }], tplPrevious: [{\n                type: ContentChild,\n                args: [NgbPaginationPrevious, { static: false }]\n            }], tplPages: [{\n                type: ContentChild,\n                args: [NgbPaginationPages, { static: false }]\n            }], disabled: [{\n                type: Input\n            }], boundaryLinks: [{\n                type: Input\n            }], directionLinks: [{\n                type: Input\n            }], ellipses: [{\n                type: Input\n            }], rotate: [{\n                type: Input\n            }], collectionSize: [{\n                type: Input\n            }], maxSize: [{\n                type: Input\n            }], page: [{\n                type: Input\n            }], pageSize: [{\n                type: Input\n            }], pageChange: [{\n                type: Output\n            }], size: [{\n                type: Input\n            }] } });\n\nconst DIRECTIVES = [\n    NgbPagination, NgbPaginationEllipsis, NgbPaginationFirst, NgbPaginationLast, NgbPaginationNext, NgbPaginationNumber,\n    NgbPaginationPrevious, NgbPaginationPages\n];\nclass NgbPaginationModule {\n}\nNgbPaginationModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbPaginationModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nNgbPaginationModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbPaginationModule, declarations: [NgbPagination, NgbPaginationEllipsis, NgbPaginationFirst, NgbPaginationLast, NgbPaginationNext, NgbPaginationNumber,\n        NgbPaginationPrevious, NgbPaginationPages], imports: [CommonModule], exports: [NgbPagination, NgbPaginationEllipsis, NgbPaginationFirst, NgbPaginationLast, NgbPaginationNext, NgbPaginationNumber,\n        NgbPaginationPrevious, NgbPaginationPages] });\nNgbPaginationModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbPaginationModule, imports: [[CommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbPaginationModule, decorators: [{\n            type: NgModule,\n            args: [{ declarations: DIRECTIVES, exports: DIRECTIVES, imports: [CommonModule] }]\n        }] });\n\nclass Trigger {\n    constructor(open, close) {\n        this.open = open;\n        this.close = close;\n        if (!close) {\n            this.close = open;\n        }\n    }\n    isManual() { return this.open === 'manual' || this.close === 'manual'; }\n}\nconst DEFAULT_ALIASES = {\n    'hover': ['mouseenter', 'mouseleave'],\n    'focus': ['focusin', 'focusout'],\n};\nfunction parseTriggers(triggers, aliases = DEFAULT_ALIASES) {\n    const trimmedTriggers = (triggers || '').trim();\n    if (trimmedTriggers.length === 0) {\n        return [];\n    }\n    const parsedTriggers = trimmedTriggers.split(/\\s+/).map(trigger => trigger.split(':')).map((triggerPair) => {\n        let alias = aliases[triggerPair[0]] || triggerPair;\n        return new Trigger(alias[0], alias[1]);\n    });\n    const manualTriggers = parsedTriggers.filter(triggerPair => triggerPair.isManual());\n    if (manualTriggers.length > 1) {\n        throw 'Triggers parse error: only one manual trigger is allowed';\n    }\n    if (manualTriggers.length === 1 && parsedTriggers.length > 1) {\n        throw 'Triggers parse error: manual trigger can\\'t be mixed with other triggers';\n    }\n    return parsedTriggers;\n}\nfunction observeTriggers(renderer, nativeElement, triggers, isOpenedFn) {\n    return new Observable(subscriber => {\n        const listeners = [];\n        const openFn = () => subscriber.next(true);\n        const closeFn = () => subscriber.next(false);\n        const toggleFn = () => subscriber.next(!isOpenedFn());\n        triggers.forEach((trigger) => {\n            if (trigger.open === trigger.close) {\n                listeners.push(renderer.listen(nativeElement, trigger.open, toggleFn));\n            }\n            else {\n                listeners.push(renderer.listen(nativeElement, trigger.open, openFn), renderer.listen(nativeElement, trigger.close, closeFn));\n            }\n        });\n        return () => { listeners.forEach(unsubscribeFn => unsubscribeFn()); };\n    });\n}\nconst delayOrNoop = (time) => time > 0 ? delay(time) : (a) => a;\nfunction triggerDelay(openDelay, closeDelay, isOpenedFn) {\n    return (input$) => {\n        let pending = null;\n        const filteredInput$ = input$.pipe(map(open => ({ open })), filter(event => {\n            const currentlyOpen = isOpenedFn();\n            if (currentlyOpen !== event.open && (!pending || pending.open === currentlyOpen)) {\n                pending = event;\n                return true;\n            }\n            if (pending && pending.open !== event.open) {\n                pending = null;\n            }\n            return false;\n        }), share());\n        const delayedOpen$ = filteredInput$.pipe(filter(event => event.open), delayOrNoop(openDelay));\n        const delayedClose$ = filteredInput$.pipe(filter(event => !event.open), delayOrNoop(closeDelay));\n        return merge(delayedOpen$, delayedClose$)\n            .pipe(filter(event => {\n            if (event === pending) {\n                pending = null;\n                return event.open !== isOpenedFn();\n            }\n            return false;\n        }), map(event => event.open));\n    };\n}\nfunction listenToTriggers(renderer, nativeElement, triggers, isOpenedFn, openFn, closeFn, openDelay = 0, closeDelay = 0) {\n    const parsedTriggers = parseTriggers(triggers);\n    if (parsedTriggers.length === 1 && parsedTriggers[0].isManual()) {\n        return () => { };\n    }\n    const subscription = observeTriggers(renderer, nativeElement, parsedTriggers, isOpenedFn)\n        .pipe(triggerDelay(openDelay, closeDelay, isOpenedFn))\n        .subscribe(open => (open ? openFn() : closeFn()));\n    return () => subscription.unsubscribe();\n}\n\n/**\n * A configuration service for the [`NgbPopover`](#/components/popover/api#NgbPopover) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the popovers used in the application.\n */\nclass NgbPopoverConfig {\n    constructor(_ngbConfig) {\n        this._ngbConfig = _ngbConfig;\n        this.autoClose = true;\n        this.placement = 'auto';\n        this.triggers = 'click';\n        this.disablePopover = false;\n        this.openDelay = 0;\n        this.closeDelay = 0;\n    }\n    get animation() { return (this._animation === undefined) ? this._ngbConfig.animation : this._animation; }\n    set animation(animation) { this._animation = animation; }\n}\nNgbPopoverConfig.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbPopoverConfig, deps: [{ token: NgbConfig }], target: i0.ɵɵFactoryTarget.Injectable });\nNgbPopoverConfig.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbPopoverConfig, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbPopoverConfig, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: NgbConfig }]; } });\n\nlet nextId$1 = 0;\nclass NgbPopoverWindow {\n    isTitleTemplate() { return this.title instanceof TemplateRef; }\n}\nNgbPopoverWindow.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbPopoverWindow, deps: [], target: i0.ɵɵFactoryTarget.Component });\nNgbPopoverWindow.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: NgbPopoverWindow, selector: \"ngb-popover-window\", inputs: { animation: \"animation\", title: \"title\", id: \"id\", popoverClass: \"popoverClass\", context: \"context\" }, host: { attributes: { \"role\": \"tooltip\" }, properties: { \"class\": \"\\\"popover\\\" + (popoverClass ? \\\" \\\" + popoverClass : \\\"\\\")\", \"class.fade\": \"animation\", \"id\": \"id\" } }, ngImport: i0, template: `\n    <div class=\"popover-arrow\" data-popper-arrow></div>\n    <h3 class=\"popover-header\" *ngIf=\"title\">\n      <ng-template #simpleTitle>{{title}}</ng-template>\n      <ng-template [ngTemplateOutlet]=\"isTitleTemplate() ? $any(title) : simpleTitle\" [ngTemplateOutletContext]=\"context\"></ng-template>\n    </h3>\n    <div class=\"popover-body\"><ng-content></ng-content></div>`, isInline: true, directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbPopoverWindow, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ngb-popover-window',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    host: {\n                        '[class]': '\"popover\" + (popoverClass ? \" \" + popoverClass : \"\")',\n                        '[class.fade]': 'animation',\n                        'role': 'tooltip',\n                        '[id]': 'id'\n                    },\n                    template: `\n    <div class=\"popover-arrow\" data-popper-arrow></div>\n    <h3 class=\"popover-header\" *ngIf=\"title\">\n      <ng-template #simpleTitle>{{title}}</ng-template>\n      <ng-template [ngTemplateOutlet]=\"isTitleTemplate() ? $any(title) : simpleTitle\" [ngTemplateOutletContext]=\"context\"></ng-template>\n    </h3>\n    <div class=\"popover-body\"><ng-content></ng-content></div>`\n                }]\n        }], propDecorators: { animation: [{\n                type: Input\n            }], title: [{\n                type: Input\n            }], id: [{\n                type: Input\n            }], popoverClass: [{\n                type: Input\n            }], context: [{\n                type: Input\n            }] } });\n/**\n * A lightweight and extensible directive for fancy popover creation.\n */\nclass NgbPopover {\n    constructor(_elementRef, _renderer, injector, viewContainerRef, config, _ngZone, _document, _changeDetector, applicationRef) {\n        this._elementRef = _elementRef;\n        this._renderer = _renderer;\n        this._ngZone = _ngZone;\n        this._document = _document;\n        this._changeDetector = _changeDetector;\n        /**\n         * An event emitted when the popover opening animation has finished. Contains no payload.\n         */\n        this.shown = new EventEmitter();\n        /**\n         * An event emitted when the popover closing animation has finished. Contains no payload.\n         *\n         * At this point popover is not in the DOM anymore.\n         */\n        this.hidden = new EventEmitter();\n        this._ngbPopoverWindowId = `ngb-popover-${nextId$1++}`;\n        this._windowRef = null;\n        this._positioning = ngbPositioning();\n        this.animation = config.animation;\n        this.autoClose = config.autoClose;\n        this.placement = config.placement;\n        this.triggers = config.triggers;\n        this.container = config.container;\n        this.disablePopover = config.disablePopover;\n        this.popoverClass = config.popoverClass;\n        this.openDelay = config.openDelay;\n        this.closeDelay = config.closeDelay;\n        this._popupService = new PopupService(NgbPopoverWindow, injector, viewContainerRef, _renderer, this._ngZone, applicationRef);\n    }\n    _isDisabled() {\n        if (this.disablePopover) {\n            return true;\n        }\n        if (!this.ngbPopover && !this.popoverTitle) {\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Opens the popover.\n     *\n     * This is considered to be a \"manual\" triggering.\n     * The `context` is an optional value to be injected into the popover template when it is created.\n     */\n    open(context) {\n        if (!this._windowRef && !this._isDisabled()) {\n            // this type assertion is safe because otherwise _isDisabled would return true\n            const { windowRef, transition$ } = this._popupService.open(this.ngbPopover, context, this.animation);\n            this._windowRef = windowRef;\n            this._windowRef.instance.animation = this.animation;\n            this._windowRef.instance.title = this.popoverTitle;\n            this._windowRef.instance.context = context;\n            this._windowRef.instance.popoverClass = this.popoverClass;\n            this._windowRef.instance.id = this._ngbPopoverWindowId;\n            this._renderer.setAttribute(this._elementRef.nativeElement, 'aria-describedby', this._ngbPopoverWindowId);\n            if (this.container === 'body') {\n                this._document.querySelector(this.container).appendChild(this._windowRef.location.nativeElement);\n            }\n            // We need to detect changes, because we don't know where .open() might be called from.\n            // Ex. opening popover from one of lifecycle hooks that run after the CD\n            // (say from ngAfterViewInit) will result in 'ExpressionHasChanged' exception\n            this._windowRef.changeDetectorRef.detectChanges();\n            // We need to mark for check, because popover won't work inside the OnPush component.\n            // Ex. when we use expression like `{{ popover.isOpen() : 'opened' : 'closed' }}`\n            // inside the template of an OnPush component and we change the popover from\n            // open -> closed, the expression in question won't be updated unless we explicitly\n            // mark the parent component to be checked.\n            this._windowRef.changeDetectorRef.markForCheck();\n            // Setting up popper and scheduling updates when zone is stable\n            this._ngZone.runOutsideAngular(() => {\n                this._positioning.createPopper({\n                    hostElement: this._elementRef.nativeElement,\n                    targetElement: this._windowRef.location.nativeElement,\n                    placement: this.placement,\n                    appendToBody: this.container === 'body',\n                    baseClass: 'bs-popover',\n                    updatePopperOptions: addPopperOffset([0, 8]),\n                });\n                Promise.resolve().then(() => {\n                    // This update is required for correct arrow placement\n                    this._positioning.update();\n                    this._zoneSubscription = this._ngZone.onStable.subscribe(() => this._positioning.update());\n                });\n            });\n            ngbAutoClose(this._ngZone, this._document, this.autoClose, () => this.close(), this.hidden, [this._windowRef.location.nativeElement]);\n            transition$.subscribe(() => this.shown.emit());\n        }\n    }\n    /**\n     * Closes the popover.\n     *\n     * This is considered to be a \"manual\" triggering of the popover.\n     */\n    close(animation = this.animation) {\n        if (this._windowRef) {\n            this._renderer.removeAttribute(this._elementRef.nativeElement, 'aria-describedby');\n            this._popupService.close(animation).subscribe(() => {\n                var _a;\n                this._windowRef = null;\n                this._positioning.destroy();\n                (_a = this._zoneSubscription) === null || _a === void 0 ? void 0 : _a.unsubscribe();\n                this.hidden.emit();\n                this._changeDetector.markForCheck();\n            });\n        }\n    }\n    /**\n     * Toggles the popover.\n     *\n     * This is considered to be a \"manual\" triggering of the popover.\n     */\n    toggle() {\n        if (this._windowRef) {\n            this.close();\n        }\n        else {\n            this.open();\n        }\n    }\n    /**\n     * Returns `true`, if the popover is currently shown.\n     */\n    isOpen() { return this._windowRef != null; }\n    ngOnInit() {\n        this._unregisterListenersFn = listenToTriggers(this._renderer, this._elementRef.nativeElement, this.triggers, this.isOpen.bind(this), this.open.bind(this), this.close.bind(this), +this.openDelay, +this.closeDelay);\n    }\n    ngOnChanges({ ngbPopover, popoverTitle, disablePopover, popoverClass }) {\n        if (popoverClass && this.isOpen()) {\n            this._windowRef.instance.popoverClass = popoverClass.currentValue;\n        }\n        // close popover if title and content become empty, or disablePopover set to true\n        if ((ngbPopover || popoverTitle || disablePopover) && this._isDisabled()) {\n            this.close();\n        }\n    }\n    ngOnDestroy() {\n        var _a;\n        this.close(false);\n        // This check is needed as it might happen that ngOnDestroy is called before ngOnInit\n        // under certain conditions, see: https://github.com/ng-bootstrap/ng-bootstrap/issues/2199\n        (_a = this._unregisterListenersFn) === null || _a === void 0 ? void 0 : _a.call(this);\n    }\n}\nNgbPopover.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbPopover, deps: [{ token: i0.ElementRef }, { token: i0.Renderer2 }, { token: i0.Injector }, { token: i0.ViewContainerRef }, { token: NgbPopoverConfig }, { token: i0.NgZone }, { token: DOCUMENT }, { token: i0.ChangeDetectorRef }, { token: i0.ApplicationRef }], target: i0.ɵɵFactoryTarget.Directive });\nNgbPopover.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.3\", type: NgbPopover, selector: \"[ngbPopover]\", inputs: { animation: \"animation\", autoClose: \"autoClose\", ngbPopover: \"ngbPopover\", popoverTitle: \"popoverTitle\", placement: \"placement\", triggers: \"triggers\", container: \"container\", disablePopover: \"disablePopover\", popoverClass: \"popoverClass\", openDelay: \"openDelay\", closeDelay: \"closeDelay\" }, outputs: { shown: \"shown\", hidden: \"hidden\" }, exportAs: [\"ngbPopover\"], usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbPopover, decorators: [{\n            type: Directive,\n            args: [{ selector: '[ngbPopover]', exportAs: 'ngbPopover' }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: i0.Renderer2 }, { type: i0.Injector }, { type: i0.ViewContainerRef }, { type: NgbPopoverConfig }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }, { type: i0.ChangeDetectorRef }, { type: i0.ApplicationRef }];\n    }, propDecorators: { animation: [{\n                type: Input\n            }], autoClose: [{\n                type: Input\n            }], ngbPopover: [{\n                type: Input\n            }], popoverTitle: [{\n                type: Input\n            }], placement: [{\n                type: Input\n            }], triggers: [{\n                type: Input\n            }], container: [{\n                type: Input\n            }], disablePopover: [{\n                type: Input\n            }], popoverClass: [{\n                type: Input\n            }], openDelay: [{\n                type: Input\n            }], closeDelay: [{\n                type: Input\n            }], shown: [{\n                type: Output\n            }], hidden: [{\n                type: Output\n            }] } });\n\nclass NgbPopoverModule {\n}\nNgbPopoverModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbPopoverModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nNgbPopoverModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbPopoverModule, declarations: [NgbPopover, NgbPopoverWindow], imports: [CommonModule], exports: [NgbPopover] });\nNgbPopoverModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbPopoverModule, imports: [[CommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbPopoverModule, decorators: [{\n            type: NgModule,\n            args: [{ declarations: [NgbPopover, NgbPopoverWindow], exports: [NgbPopover], imports: [CommonModule] }]\n        }] });\n\n/**\n * A configuration service for the [`NgbProgressbar`](#/components/progressbar/api#NgbProgressbar) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the progress bars used in the application.\n */\nclass NgbProgressbarConfig {\n    constructor() {\n        this.max = 100;\n        this.animated = false;\n        this.striped = false;\n        this.showValue = false;\n    }\n}\nNgbProgressbarConfig.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbProgressbarConfig, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nNgbProgressbarConfig.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbProgressbarConfig, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbProgressbarConfig, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\n/**\n * A directive that provides feedback on the progress of a workflow or an action.\n */\nclass NgbProgressbar {\n    constructor(config) {\n        /**\n         * The current value for the progress bar.\n         *\n         * Should be in the `[0, max]` range.\n         */\n        this.value = 0;\n        this.max = config.max;\n        this.animated = config.animated;\n        this.striped = config.striped;\n        this.textType = config.textType;\n        this.type = config.type;\n        this.showValue = config.showValue;\n        this.height = config.height;\n    }\n    /**\n     * The maximal value to be displayed in the progress bar.\n     *\n     * Should be a positive number. Will default to 100 otherwise.\n     */\n    set max(max) {\n        this._max = !isNumber(max) || max <= 0 ? 100 : max;\n    }\n    get max() { return this._max; }\n    getValue() { return getValueInRange(this.value, this.max); }\n    getPercentValue() { return 100 * this.getValue() / this.max; }\n}\nNgbProgressbar.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbProgressbar, deps: [{ token: NgbProgressbarConfig }], target: i0.ɵɵFactoryTarget.Component });\nNgbProgressbar.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: NgbProgressbar, selector: \"ngb-progressbar\", inputs: { max: \"max\", animated: \"animated\", striped: \"striped\", showValue: \"showValue\", textType: \"textType\", type: \"type\", value: \"value\", height: \"height\" }, host: { properties: { \"style.height\": \"this.height\" }, classAttribute: \"progress\" }, ngImport: i0, template: `\n    <div class=\"progress-bar{{type ? ' bg-' + type : ''}}{{textType ? ' text-' + textType : ''}}\n    {{animated ? ' progress-bar-animated' : ''}}{{striped ? ' progress-bar-striped' : ''}}\"\n    role=\"progressbar\" [style.width.%]=\"getPercentValue()\"\n    [attr.aria-valuenow]=\"getValue()\" aria-valuemin=\"0\" [attr.aria-valuemax]=\"max\">\n      <span *ngIf=\"showValue\" i18n=\"@@ngb.progressbar.value\">{{getValue() / max | percent}}</span><ng-content></ng-content>\n    </div>\n  `, isInline: true, directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], pipes: { \"percent\": i2.PercentPipe }, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbProgressbar, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ngb-progressbar',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    host: { class: 'progress' },\n                    template: `\n    <div class=\"progress-bar{{type ? ' bg-' + type : ''}}{{textType ? ' text-' + textType : ''}}\n    {{animated ? ' progress-bar-animated' : ''}}{{striped ? ' progress-bar-striped' : ''}}\"\n    role=\"progressbar\" [style.width.%]=\"getPercentValue()\"\n    [attr.aria-valuenow]=\"getValue()\" aria-valuemin=\"0\" [attr.aria-valuemax]=\"max\">\n      <span *ngIf=\"showValue\" i18n=\"@@ngb.progressbar.value\">{{getValue() / max | percent}}</span><ng-content></ng-content>\n    </div>\n  `\n                }]\n        }], ctorParameters: function () { return [{ type: NgbProgressbarConfig }]; }, propDecorators: { max: [{\n                type: Input\n            }], animated: [{\n                type: Input\n            }], striped: [{\n                type: Input\n            }], showValue: [{\n                type: Input\n            }], textType: [{\n                type: Input\n            }], type: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }], height: [{\n                type: Input\n            }, {\n                type: HostBinding,\n                args: ['style.height']\n            }] } });\n\nclass NgbProgressbarModule {\n}\nNgbProgressbarModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbProgressbarModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nNgbProgressbarModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbProgressbarModule, declarations: [NgbProgressbar], imports: [CommonModule], exports: [NgbProgressbar] });\nNgbProgressbarModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbProgressbarModule, imports: [[CommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbProgressbarModule, decorators: [{\n            type: NgModule,\n            args: [{ declarations: [NgbProgressbar], exports: [NgbProgressbar], imports: [CommonModule] }]\n        }] });\n\n/**\n * A configuration service for the [`NgbRating`](#/components/rating/api#NgbRating) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the ratings used in the application.\n */\nclass NgbRatingConfig {\n    constructor() {\n        this.max = 10;\n        this.readonly = false;\n        this.resettable = false;\n    }\n}\nNgbRatingConfig.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbRatingConfig, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nNgbRatingConfig.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbRatingConfig, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbRatingConfig, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\n/**\n * A directive that helps visualising and interacting with a star rating bar.\n */\nclass NgbRating {\n    constructor(config, _changeDetectorRef) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this.contexts = [];\n        this.disabled = false;\n        /**\n         * An event emitted when the user is hovering over a given rating.\n         *\n         * Event payload equals to the rating being hovered over.\n         */\n        this.hover = new EventEmitter();\n        /**\n         * An event emitted when the user stops hovering over a given rating.\n         *\n         * Event payload equals to the rating of the last item being hovered over.\n         */\n        this.leave = new EventEmitter();\n        /**\n         * An event emitted when the rating is changed.\n         *\n         * Event payload equals to the newly selected rating.\n         */\n        this.rateChange = new EventEmitter(true);\n        this.onChange = (_) => { };\n        this.onTouched = () => { };\n        this.max = config.max;\n        this.readonly = config.readonly;\n    }\n    ariaValueText() { return `${this.nextRate} out of ${this.max}`; }\n    isInteractive() { return !this.readonly && !this.disabled; }\n    enter(value) {\n        if (this.isInteractive()) {\n            this._updateState(value);\n        }\n        this.hover.emit(value);\n    }\n    handleBlur() { this.onTouched(); }\n    handleClick(value) {\n        if (this.isInteractive()) {\n            this.update(this.resettable && this.rate === value ? 0 : value);\n        }\n    }\n    handleKeyDown(event) {\n        /* eslint-disable-next-line deprecation/deprecation */\n        switch (event.which) {\n            case Key.ArrowDown:\n            case Key.ArrowLeft:\n                this.update(this.rate - 1);\n                break;\n            case Key.ArrowUp:\n            case Key.ArrowRight:\n                this.update(this.rate + 1);\n                break;\n            case Key.Home:\n                this.update(0);\n                break;\n            case Key.End:\n                this.update(this.max);\n                break;\n            default:\n                return;\n        }\n        // note 'return' in default case\n        event.preventDefault();\n    }\n    ngOnChanges(changes) {\n        if (changes['rate']) {\n            this.update(this.rate);\n        }\n        if (changes['max']) {\n            this._updateMax();\n        }\n    }\n    ngOnInit() {\n        this._setupContexts();\n        this._updateState(this.rate);\n    }\n    registerOnChange(fn) { this.onChange = fn; }\n    registerOnTouched(fn) { this.onTouched = fn; }\n    reset() {\n        this.leave.emit(this.nextRate);\n        this._updateState(this.rate);\n    }\n    setDisabledState(isDisabled) { this.disabled = isDisabled; }\n    update(value, internalChange = true) {\n        const newRate = getValueInRange(value, this.max, 0);\n        if (this.isInteractive() && this.rate !== newRate) {\n            this.rate = newRate;\n            this.rateChange.emit(this.rate);\n        }\n        if (internalChange) {\n            this.onChange(this.rate);\n            this.onTouched();\n        }\n        this._updateState(this.rate);\n    }\n    writeValue(value) {\n        this.update(value, false);\n        this._changeDetectorRef.markForCheck();\n    }\n    _updateState(nextValue) {\n        this.nextRate = nextValue;\n        this.contexts.forEach((context, index) => context.fill = Math.round(getValueInRange(nextValue - index, 1, 0) * 100));\n    }\n    _updateMax() {\n        if (this.max > 0) {\n            this._setupContexts();\n            this.update(this.rate);\n        }\n    }\n    _setupContexts() { this.contexts = Array.from({ length: this.max }, (v, k) => ({ fill: 0, index: k })); }\n}\nNgbRating.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbRating, deps: [{ token: NgbRatingConfig }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nNgbRating.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: NgbRating, selector: \"ngb-rating\", inputs: { max: \"max\", rate: \"rate\", readonly: \"readonly\", resettable: \"resettable\", starTemplate: \"starTemplate\" }, outputs: { hover: \"hover\", leave: \"leave\", rateChange: \"rateChange\" }, host: { attributes: { \"role\": \"slider\", \"aria-valuemin\": \"0\" }, listeners: { \"blur\": \"handleBlur()\", \"keydown\": \"handleKeyDown($event)\", \"mouseleave\": \"reset()\" }, properties: { \"tabindex\": \"disabled ? -1 : 0\", \"attr.aria-valuemax\": \"max\", \"attr.aria-valuenow\": \"nextRate\", \"attr.aria-valuetext\": \"ariaValueText()\", \"attr.aria-disabled\": \"readonly ? true : null\" }, classAttribute: \"d-inline-flex\" }, providers: [{ provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => NgbRating), multi: true }], queries: [{ propertyName: \"starTemplateFromContent\", first: true, predicate: TemplateRef, descendants: true }], usesOnChanges: true, ngImport: i0, template: `\n    <ng-template #t let-fill=\"fill\">{{ fill === 100 ? '&#9733;' : '&#9734;' }}</ng-template>\n    <ng-template ngFor [ngForOf]=\"contexts\" let-index=\"index\">\n      <span class=\"visually-hidden\">({{ index < nextRate ? '*' : ' ' }})</span>\n      <span (mouseenter)=\"enter(index + 1)\" (click)=\"handleClick(index + 1)\" [style.cursor]=\"isInteractive() ? 'pointer' : 'default'\">\n        <ng-template [ngTemplateOutlet]=\"starTemplate || starTemplateFromContent || t\" [ngTemplateOutletContext]=\"contexts[index]\">\n        </ng-template>\n      </span>\n    </ng-template>\n  `, isInline: true, directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i2.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbRating, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ngb-rating',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    host: {\n                        'class': 'd-inline-flex',\n                        '[tabindex]': 'disabled ? -1 : 0',\n                        'role': 'slider',\n                        'aria-valuemin': '0',\n                        '[attr.aria-valuemax]': 'max',\n                        '[attr.aria-valuenow]': 'nextRate',\n                        '[attr.aria-valuetext]': 'ariaValueText()',\n                        '[attr.aria-disabled]': 'readonly ? true : null',\n                        '(blur)': 'handleBlur()',\n                        '(keydown)': 'handleKeyDown($event)',\n                        '(mouseleave)': 'reset()'\n                    },\n                    template: `\n    <ng-template #t let-fill=\"fill\">{{ fill === 100 ? '&#9733;' : '&#9734;' }}</ng-template>\n    <ng-template ngFor [ngForOf]=\"contexts\" let-index=\"index\">\n      <span class=\"visually-hidden\">({{ index < nextRate ? '*' : ' ' }})</span>\n      <span (mouseenter)=\"enter(index + 1)\" (click)=\"handleClick(index + 1)\" [style.cursor]=\"isInteractive() ? 'pointer' : 'default'\">\n        <ng-template [ngTemplateOutlet]=\"starTemplate || starTemplateFromContent || t\" [ngTemplateOutletContext]=\"contexts[index]\">\n        </ng-template>\n      </span>\n    </ng-template>\n  `,\n                    providers: [{ provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => NgbRating), multi: true }]\n                }]\n        }], ctorParameters: function () { return [{ type: NgbRatingConfig }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { max: [{\n                type: Input\n            }], rate: [{\n                type: Input\n            }], readonly: [{\n                type: Input\n            }], resettable: [{\n                type: Input\n            }], starTemplate: [{\n                type: Input\n            }], starTemplateFromContent: [{\n                type: ContentChild,\n                args: [TemplateRef, { static: false }]\n            }], hover: [{\n                type: Output\n            }], leave: [{\n                type: Output\n            }], rateChange: [{\n                type: Output\n            }] } });\n\nclass NgbRatingModule {\n}\nNgbRatingModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbRatingModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nNgbRatingModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbRatingModule, declarations: [NgbRating], imports: [CommonModule], exports: [NgbRating] });\nNgbRatingModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbRatingModule, imports: [[CommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbRatingModule, decorators: [{\n            type: NgModule,\n            args: [{ declarations: [NgbRating], exports: [NgbRating], imports: [CommonModule] }]\n        }] });\n\nclass NgbTime {\n    constructor(hour, minute, second) {\n        this.hour = toInteger(hour);\n        this.minute = toInteger(minute);\n        this.second = toInteger(second);\n    }\n    changeHour(step = 1) { this.updateHour((isNaN(this.hour) ? 0 : this.hour) + step); }\n    updateHour(hour) {\n        if (isNumber(hour)) {\n            this.hour = (hour < 0 ? 24 + hour : hour) % 24;\n        }\n        else {\n            this.hour = NaN;\n        }\n    }\n    changeMinute(step = 1) { this.updateMinute((isNaN(this.minute) ? 0 : this.minute) + step); }\n    updateMinute(minute) {\n        if (isNumber(minute)) {\n            this.minute = minute % 60 < 0 ? 60 + minute % 60 : minute % 60;\n            this.changeHour(Math.floor(minute / 60));\n        }\n        else {\n            this.minute = NaN;\n        }\n    }\n    changeSecond(step = 1) { this.updateSecond((isNaN(this.second) ? 0 : this.second) + step); }\n    updateSecond(second) {\n        if (isNumber(second)) {\n            this.second = second < 0 ? 60 + second % 60 : second % 60;\n            this.changeMinute(Math.floor(second / 60));\n        }\n        else {\n            this.second = NaN;\n        }\n    }\n    isValid(checkSecs = true) {\n        return isNumber(this.hour) && isNumber(this.minute) && (checkSecs ? isNumber(this.second) : true);\n    }\n    toString() { return `${this.hour || 0}:${this.minute || 0}:${this.second || 0}`; }\n}\n\n/**\n * A configuration service for the [`NgbTimepicker`](#/components/timepicker/api#NgbTimepicker) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the timepickers used in the application.\n */\nclass NgbTimepickerConfig {\n    constructor() {\n        this.meridian = false;\n        this.spinners = true;\n        this.seconds = false;\n        this.hourStep = 1;\n        this.minuteStep = 1;\n        this.secondStep = 1;\n        this.disabled = false;\n        this.readonlyInputs = false;\n        this.size = 'medium';\n    }\n}\nNgbTimepickerConfig.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbTimepickerConfig, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nNgbTimepickerConfig.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbTimepickerConfig, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbTimepickerConfig, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\nfunction NGB_DATEPICKER_TIME_ADAPTER_FACTORY() {\n    return new NgbTimeStructAdapter();\n}\n/**\n * An abstract service that does the conversion between the internal timepicker `NgbTimeStruct` model and\n * any provided user time model `T`, ex. a string, a native date, etc.\n *\n * The adapter is used **only** for conversion when binding timepicker to a form control,\n * ex. `[(ngModel)]=\"userTimeModel\"`. Here `userTimeModel` can be of any type.\n *\n * The default timepicker implementation assumes we use `NgbTimeStruct` as a user model.\n *\n * See the [custom time adapter demo](#/components/timepicker/examples#adapter) for an example.\n *\n * @since 2.2.0\n */\nclass NgbTimeAdapter {\n}\nNgbTimeAdapter.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbTimeAdapter, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nNgbTimeAdapter.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbTimeAdapter, providedIn: 'root', useFactory: NGB_DATEPICKER_TIME_ADAPTER_FACTORY });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbTimeAdapter, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root', useFactory: NGB_DATEPICKER_TIME_ADAPTER_FACTORY }]\n        }] });\nclass NgbTimeStructAdapter extends NgbTimeAdapter {\n    /**\n     * Converts a NgbTimeStruct value into NgbTimeStruct value\n     */\n    fromModel(time) {\n        return (time && isInteger(time.hour) && isInteger(time.minute)) ?\n            { hour: time.hour, minute: time.minute, second: isInteger(time.second) ? time.second : null } :\n            null;\n    }\n    /**\n     * Converts a NgbTimeStruct value into NgbTimeStruct value\n     */\n    toModel(time) {\n        return (time && isInteger(time.hour) && isInteger(time.minute)) ?\n            { hour: time.hour, minute: time.minute, second: isInteger(time.second) ? time.second : null } :\n            null;\n    }\n}\nNgbTimeStructAdapter.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbTimeStructAdapter, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\nNgbTimeStructAdapter.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbTimeStructAdapter });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbTimeStructAdapter, decorators: [{\n            type: Injectable\n        }] });\n\nfunction NGB_TIMEPICKER_I18N_FACTORY(locale) {\n    return new NgbTimepickerI18nDefault(locale);\n}\n/**\n * Type of the service supplying day periods (for example, 'AM' and 'PM') to NgbTimepicker component.\n * The default implementation of this service honors the Angular locale, and uses the registered locale data,\n * as explained in the Angular i18n guide.\n */\nclass NgbTimepickerI18n {\n}\nNgbTimepickerI18n.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbTimepickerI18n, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nNgbTimepickerI18n.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbTimepickerI18n, providedIn: 'root', useFactory: NGB_TIMEPICKER_I18N_FACTORY, deps: [{ token: LOCALE_ID }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbTimepickerI18n, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root', useFactory: NGB_TIMEPICKER_I18N_FACTORY, deps: [LOCALE_ID] }]\n        }] });\nclass NgbTimepickerI18nDefault extends NgbTimepickerI18n {\n    constructor(locale) {\n        super();\n        this._periods = getLocaleDayPeriods(locale, FormStyle.Standalone, TranslationWidth.Narrow);\n    }\n    getMorningPeriod() { return this._periods[0]; }\n    getAfternoonPeriod() { return this._periods[1]; }\n}\nNgbTimepickerI18nDefault.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbTimepickerI18nDefault, deps: [{ token: LOCALE_ID }], target: i0.ɵɵFactoryTarget.Injectable });\nNgbTimepickerI18nDefault.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbTimepickerI18nDefault });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbTimepickerI18nDefault, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () {\n        return [{ type: undefined, decorators: [{\n                        type: Inject,\n                        args: [LOCALE_ID]\n                    }] }];\n    } });\n\nconst FILTER_REGEX = /[^0-9]/g;\n/**\n * A directive that helps with wth picking hours, minutes and seconds.\n */\nclass NgbTimepicker {\n    constructor(_config, _ngbTimeAdapter, _cd, i18n) {\n        this._config = _config;\n        this._ngbTimeAdapter = _ngbTimeAdapter;\n        this._cd = _cd;\n        this.i18n = i18n;\n        this.onChange = (_) => { };\n        this.onTouched = () => { };\n        this.meridian = _config.meridian;\n        this.spinners = _config.spinners;\n        this.seconds = _config.seconds;\n        this.hourStep = _config.hourStep;\n        this.minuteStep = _config.minuteStep;\n        this.secondStep = _config.secondStep;\n        this.disabled = _config.disabled;\n        this.readonlyInputs = _config.readonlyInputs;\n        this.size = _config.size;\n    }\n    /**\n     * The number of hours to add/subtract when clicking hour spinners.\n     */\n    set hourStep(step) {\n        this._hourStep = isInteger(step) ? step : this._config.hourStep;\n    }\n    get hourStep() { return this._hourStep; }\n    /**\n     * The number of minutes to add/subtract when clicking minute spinners.\n     */\n    set minuteStep(step) {\n        this._minuteStep = isInteger(step) ? step : this._config.minuteStep;\n    }\n    get minuteStep() { return this._minuteStep; }\n    /**\n     * The number of seconds to add/subtract when clicking second spinners.\n     */\n    set secondStep(step) {\n        this._secondStep = isInteger(step) ? step : this._config.secondStep;\n    }\n    get secondStep() { return this._secondStep; }\n    writeValue(value) {\n        const structValue = this._ngbTimeAdapter.fromModel(value);\n        this.model = structValue ? new NgbTime(structValue.hour, structValue.minute, structValue.second) : new NgbTime();\n        if (!this.seconds && (!structValue || !isNumber(structValue.second))) {\n            this.model.second = 0;\n        }\n        this._cd.markForCheck();\n    }\n    registerOnChange(fn) { this.onChange = fn; }\n    registerOnTouched(fn) { this.onTouched = fn; }\n    setDisabledState(isDisabled) { this.disabled = isDisabled; }\n    changeHour(step) {\n        this.model.changeHour(step);\n        this.propagateModelChange();\n    }\n    changeMinute(step) {\n        this.model.changeMinute(step);\n        this.propagateModelChange();\n    }\n    changeSecond(step) {\n        this.model.changeSecond(step);\n        this.propagateModelChange();\n    }\n    updateHour(newVal) {\n        const isPM = this.model.hour >= 12;\n        const enteredHour = toInteger(newVal);\n        if (this.meridian && (isPM && enteredHour < 12 || !isPM && enteredHour === 12)) {\n            this.model.updateHour(enteredHour + 12);\n        }\n        else {\n            this.model.updateHour(enteredHour);\n        }\n        this.propagateModelChange();\n    }\n    updateMinute(newVal) {\n        this.model.updateMinute(toInteger(newVal));\n        this.propagateModelChange();\n    }\n    updateSecond(newVal) {\n        this.model.updateSecond(toInteger(newVal));\n        this.propagateModelChange();\n    }\n    toggleMeridian() {\n        if (this.meridian) {\n            this.changeHour(12);\n        }\n    }\n    formatInput(input) { input.value = input.value.replace(FILTER_REGEX, ''); }\n    formatHour(value) {\n        if (isNumber(value)) {\n            if (this.meridian) {\n                return padNumber(value % 12 === 0 ? 12 : value % 12);\n            }\n            else {\n                return padNumber(value % 24);\n            }\n        }\n        else {\n            return padNumber(NaN);\n        }\n    }\n    formatMinSec(value) { return padNumber(isNumber(value) ? value : NaN); }\n    handleBlur() { this.onTouched(); }\n    get isSmallSize() { return this.size === 'small'; }\n    get isLargeSize() { return this.size === 'large'; }\n    ngOnChanges(changes) {\n        if (changes['seconds'] && !this.seconds && this.model && !isNumber(this.model.second)) {\n            this.model.second = 0;\n            this.propagateModelChange(false);\n        }\n    }\n    propagateModelChange(touched = true) {\n        if (touched) {\n            this.onTouched();\n        }\n        if (this.model.isValid(this.seconds)) {\n            this.onChange(this._ngbTimeAdapter.toModel({ hour: this.model.hour, minute: this.model.minute, second: this.model.second }));\n        }\n        else {\n            this.onChange(this._ngbTimeAdapter.toModel(null));\n        }\n    }\n}\nNgbTimepicker.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbTimepicker, deps: [{ token: NgbTimepickerConfig }, { token: NgbTimeAdapter }, { token: i0.ChangeDetectorRef }, { token: NgbTimepickerI18n }], target: i0.ɵɵFactoryTarget.Component });\nNgbTimepicker.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: NgbTimepicker, selector: \"ngb-timepicker\", inputs: { meridian: \"meridian\", spinners: \"spinners\", seconds: \"seconds\", hourStep: \"hourStep\", minuteStep: \"minuteStep\", secondStep: \"secondStep\", readonlyInputs: \"readonlyInputs\", size: \"size\" }, providers: [{ provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => NgbTimepicker), multi: true }], usesOnChanges: true, ngImport: i0, template: `\n    <fieldset [disabled]=\"disabled\" [class.disabled]=\"disabled\">\n      <div class=\"ngb-tp\">\n        <div class=\"ngb-tp-input-container ngb-tp-hour\">\n          <button *ngIf=\"spinners\" tabindex=\"-1\" type=\"button\" (click)=\"changeHour(hourStep)\"\n            class=\"btn btn-link\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\" [class.disabled]=\"disabled\"\n            [disabled]=\"disabled\">\n            <span class=\"chevron ngb-tp-chevron\"></span>\n            <span class=\"visually-hidden\" i18n=\"@@ngb.timepicker.increment-hours\">Increment hours</span>\n          </button>\n          <input type=\"text\" class=\"ngb-tp-input form-control\" [class.form-control-sm]=\"isSmallSize\"\n            [class.form-control-lg]=\"isLargeSize\"\n            maxlength=\"2\" inputmode=\"numeric\" placeholder=\"HH\" i18n-placeholder=\"@@ngb.timepicker.HH\"\n            [value]=\"formatHour(model?.hour)\" (change)=\"updateHour($any($event).target.value)\"\n            [readOnly]=\"readonlyInputs\" [disabled]=\"disabled\" aria-label=\"Hours\" i18n-aria-label=\"@@ngb.timepicker.hours\"\n            (blur)=\"handleBlur()\"\n            (input)=\"formatInput($any($event).target)\"\n            (keydown.ArrowUp)=\"changeHour(hourStep); $event.preventDefault()\"\n            (keydown.ArrowDown)=\"changeHour(-hourStep); $event.preventDefault()\">\n          <button *ngIf=\"spinners\" tabindex=\"-1\" type=\"button\" (click)=\"changeHour(-hourStep)\"\n            class=\"btn btn-link\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\" [class.disabled]=\"disabled\"\n            [disabled]=\"disabled\">\n            <span class=\"chevron ngb-tp-chevron bottom\"></span>\n            <span class=\"visually-hidden\" i18n=\"@@ngb.timepicker.decrement-hours\">Decrement hours</span>\n          </button>\n        </div>\n        <div class=\"ngb-tp-spacer\">:</div>\n        <div class=\"ngb-tp-input-container ngb-tp-minute\">\n          <button *ngIf=\"spinners\" tabindex=\"-1\" type=\"button\" (click)=\"changeMinute(minuteStep)\"\n            class=\"btn btn-link\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\" [class.disabled]=\"disabled\"\n            [disabled]=\"disabled\">\n            <span class=\"chevron ngb-tp-chevron\"></span>\n            <span class=\"visually-hidden\" i18n=\"@@ngb.timepicker.increment-minutes\">Increment minutes</span>\n          </button>\n          <input type=\"text\" class=\"ngb-tp-input form-control\" [class.form-control-sm]=\"isSmallSize\" [class.form-control-lg]=\"isLargeSize\"\n            maxlength=\"2\" inputmode=\"numeric\" placeholder=\"MM\" i18n-placeholder=\"@@ngb.timepicker.MM\"\n            [value]=\"formatMinSec(model?.minute)\" (change)=\"updateMinute($any($event).target.value)\"\n            [readOnly]=\"readonlyInputs\" [disabled]=\"disabled\" aria-label=\"Minutes\" i18n-aria-label=\"@@ngb.timepicker.minutes\"\n            (blur)=\"handleBlur()\"\n            (input)=\"formatInput($any($event).target)\"\n            (keydown.ArrowUp)=\"changeMinute(minuteStep); $event.preventDefault()\"\n            (keydown.ArrowDown)=\"changeMinute(-minuteStep); $event.preventDefault()\">\n          <button *ngIf=\"spinners\" tabindex=\"-1\" type=\"button\" (click)=\"changeMinute(-minuteStep)\"\n            class=\"btn btn-link\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\"  [class.disabled]=\"disabled\"\n            [disabled]=\"disabled\">\n            <span class=\"chevron ngb-tp-chevron bottom\"></span>\n            <span class=\"visually-hidden\"  i18n=\"@@ngb.timepicker.decrement-minutes\">Decrement minutes</span>\n          </button>\n        </div>\n        <div *ngIf=\"seconds\" class=\"ngb-tp-spacer\">:</div>\n        <div *ngIf=\"seconds\" class=\"ngb-tp-input-container ngb-tp-second\">\n          <button *ngIf=\"spinners\" tabindex=\"-1\" type=\"button\" (click)=\"changeSecond(secondStep)\"\n            class=\"btn btn-link\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\" [class.disabled]=\"disabled\"\n            [disabled]=\"disabled\">\n            <span class=\"chevron ngb-tp-chevron\"></span>\n            <span class=\"visually-hidden\" i18n=\"@@ngb.timepicker.increment-seconds\">Increment seconds</span>\n          </button>\n          <input type=\"text\" class=\"ngb-tp-input form-control\" [class.form-control-sm]=\"isSmallSize\" [class.form-control-lg]=\"isLargeSize\"\n            maxlength=\"2\" inputmode=\"numeric\" placeholder=\"SS\" i18n-placeholder=\"@@ngb.timepicker.SS\"\n            [value]=\"formatMinSec(model?.second)\" (change)=\"updateSecond($any($event).target.value)\"\n            [readOnly]=\"readonlyInputs\" [disabled]=\"disabled\" aria-label=\"Seconds\" i18n-aria-label=\"@@ngb.timepicker.seconds\"\n            (blur)=\"handleBlur()\"\n            (input)=\"formatInput($any($event).target)\"\n            (keydown.ArrowUp)=\"changeSecond(secondStep); $event.preventDefault()\"\n            (keydown.ArrowDown)=\"changeSecond(-secondStep); $event.preventDefault()\">\n          <button *ngIf=\"spinners\" tabindex=\"-1\" type=\"button\" (click)=\"changeSecond(-secondStep)\"\n            class=\"btn btn-link\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\"  [class.disabled]=\"disabled\"\n            [disabled]=\"disabled\">\n            <span class=\"chevron ngb-tp-chevron bottom\"></span>\n            <span class=\"visually-hidden\" i18n=\"@@ngb.timepicker.decrement-seconds\">Decrement seconds</span>\n          </button>\n        </div>\n        <div *ngIf=\"meridian\" class=\"ngb-tp-spacer\"></div>\n        <div *ngIf=\"meridian\" class=\"ngb-tp-meridian\">\n          <button type=\"button\" class=\"btn btn-outline-primary\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\"\n            [disabled]=\"disabled\" [class.disabled]=\"disabled\"\n                  (click)=\"toggleMeridian()\">\n            <ng-container *ngIf=\"model && model.hour >= 12; else am\"\n                          i18n=\"@@ngb.timepicker.PM\">{{ i18n.getAfternoonPeriod() }}</ng-container>\n            <ng-template #am i18n=\"@@ngb.timepicker.AM\">{{ i18n.getMorningPeriod() }}</ng-template>\n          </button>\n        </div>\n      </div>\n    </fieldset>\n  `, isInline: true, styles: [\"ngb-timepicker{font-size:1rem}.ngb-tp{display:flex;align-items:center}.ngb-tp-input-container{width:4em}.ngb-tp-chevron:before{border-style:solid;border-width:.29em .29em 0 0;content:\\\"\\\";display:inline-block;height:.69em;left:.05em;position:relative;top:.15em;transform:rotate(-45deg);vertical-align:middle;width:.69em}.ngb-tp-chevron.bottom:before{top:-.3em;transform:rotate(135deg)}.ngb-tp-input{text-align:center}.ngb-tp-hour,.ngb-tp-minute,.ngb-tp-second,.ngb-tp-meridian{display:flex;flex-direction:column;align-items:center;justify-content:space-around}.ngb-tp-spacer{width:1em;text-align:center}\\n\"], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbTimepicker, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngb-timepicker', encapsulation: ViewEncapsulation.None, template: `\n    <fieldset [disabled]=\"disabled\" [class.disabled]=\"disabled\">\n      <div class=\"ngb-tp\">\n        <div class=\"ngb-tp-input-container ngb-tp-hour\">\n          <button *ngIf=\"spinners\" tabindex=\"-1\" type=\"button\" (click)=\"changeHour(hourStep)\"\n            class=\"btn btn-link\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\" [class.disabled]=\"disabled\"\n            [disabled]=\"disabled\">\n            <span class=\"chevron ngb-tp-chevron\"></span>\n            <span class=\"visually-hidden\" i18n=\"@@ngb.timepicker.increment-hours\">Increment hours</span>\n          </button>\n          <input type=\"text\" class=\"ngb-tp-input form-control\" [class.form-control-sm]=\"isSmallSize\"\n            [class.form-control-lg]=\"isLargeSize\"\n            maxlength=\"2\" inputmode=\"numeric\" placeholder=\"HH\" i18n-placeholder=\"@@ngb.timepicker.HH\"\n            [value]=\"formatHour(model?.hour)\" (change)=\"updateHour($any($event).target.value)\"\n            [readOnly]=\"readonlyInputs\" [disabled]=\"disabled\" aria-label=\"Hours\" i18n-aria-label=\"@@ngb.timepicker.hours\"\n            (blur)=\"handleBlur()\"\n            (input)=\"formatInput($any($event).target)\"\n            (keydown.ArrowUp)=\"changeHour(hourStep); $event.preventDefault()\"\n            (keydown.ArrowDown)=\"changeHour(-hourStep); $event.preventDefault()\">\n          <button *ngIf=\"spinners\" tabindex=\"-1\" type=\"button\" (click)=\"changeHour(-hourStep)\"\n            class=\"btn btn-link\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\" [class.disabled]=\"disabled\"\n            [disabled]=\"disabled\">\n            <span class=\"chevron ngb-tp-chevron bottom\"></span>\n            <span class=\"visually-hidden\" i18n=\"@@ngb.timepicker.decrement-hours\">Decrement hours</span>\n          </button>\n        </div>\n        <div class=\"ngb-tp-spacer\">:</div>\n        <div class=\"ngb-tp-input-container ngb-tp-minute\">\n          <button *ngIf=\"spinners\" tabindex=\"-1\" type=\"button\" (click)=\"changeMinute(minuteStep)\"\n            class=\"btn btn-link\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\" [class.disabled]=\"disabled\"\n            [disabled]=\"disabled\">\n            <span class=\"chevron ngb-tp-chevron\"></span>\n            <span class=\"visually-hidden\" i18n=\"@@ngb.timepicker.increment-minutes\">Increment minutes</span>\n          </button>\n          <input type=\"text\" class=\"ngb-tp-input form-control\" [class.form-control-sm]=\"isSmallSize\" [class.form-control-lg]=\"isLargeSize\"\n            maxlength=\"2\" inputmode=\"numeric\" placeholder=\"MM\" i18n-placeholder=\"@@ngb.timepicker.MM\"\n            [value]=\"formatMinSec(model?.minute)\" (change)=\"updateMinute($any($event).target.value)\"\n            [readOnly]=\"readonlyInputs\" [disabled]=\"disabled\" aria-label=\"Minutes\" i18n-aria-label=\"@@ngb.timepicker.minutes\"\n            (blur)=\"handleBlur()\"\n            (input)=\"formatInput($any($event).target)\"\n            (keydown.ArrowUp)=\"changeMinute(minuteStep); $event.preventDefault()\"\n            (keydown.ArrowDown)=\"changeMinute(-minuteStep); $event.preventDefault()\">\n          <button *ngIf=\"spinners\" tabindex=\"-1\" type=\"button\" (click)=\"changeMinute(-minuteStep)\"\n            class=\"btn btn-link\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\"  [class.disabled]=\"disabled\"\n            [disabled]=\"disabled\">\n            <span class=\"chevron ngb-tp-chevron bottom\"></span>\n            <span class=\"visually-hidden\"  i18n=\"@@ngb.timepicker.decrement-minutes\">Decrement minutes</span>\n          </button>\n        </div>\n        <div *ngIf=\"seconds\" class=\"ngb-tp-spacer\">:</div>\n        <div *ngIf=\"seconds\" class=\"ngb-tp-input-container ngb-tp-second\">\n          <button *ngIf=\"spinners\" tabindex=\"-1\" type=\"button\" (click)=\"changeSecond(secondStep)\"\n            class=\"btn btn-link\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\" [class.disabled]=\"disabled\"\n            [disabled]=\"disabled\">\n            <span class=\"chevron ngb-tp-chevron\"></span>\n            <span class=\"visually-hidden\" i18n=\"@@ngb.timepicker.increment-seconds\">Increment seconds</span>\n          </button>\n          <input type=\"text\" class=\"ngb-tp-input form-control\" [class.form-control-sm]=\"isSmallSize\" [class.form-control-lg]=\"isLargeSize\"\n            maxlength=\"2\" inputmode=\"numeric\" placeholder=\"SS\" i18n-placeholder=\"@@ngb.timepicker.SS\"\n            [value]=\"formatMinSec(model?.second)\" (change)=\"updateSecond($any($event).target.value)\"\n            [readOnly]=\"readonlyInputs\" [disabled]=\"disabled\" aria-label=\"Seconds\" i18n-aria-label=\"@@ngb.timepicker.seconds\"\n            (blur)=\"handleBlur()\"\n            (input)=\"formatInput($any($event).target)\"\n            (keydown.ArrowUp)=\"changeSecond(secondStep); $event.preventDefault()\"\n            (keydown.ArrowDown)=\"changeSecond(-secondStep); $event.preventDefault()\">\n          <button *ngIf=\"spinners\" tabindex=\"-1\" type=\"button\" (click)=\"changeSecond(-secondStep)\"\n            class=\"btn btn-link\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\"  [class.disabled]=\"disabled\"\n            [disabled]=\"disabled\">\n            <span class=\"chevron ngb-tp-chevron bottom\"></span>\n            <span class=\"visually-hidden\" i18n=\"@@ngb.timepicker.decrement-seconds\">Decrement seconds</span>\n          </button>\n        </div>\n        <div *ngIf=\"meridian\" class=\"ngb-tp-spacer\"></div>\n        <div *ngIf=\"meridian\" class=\"ngb-tp-meridian\">\n          <button type=\"button\" class=\"btn btn-outline-primary\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\"\n            [disabled]=\"disabled\" [class.disabled]=\"disabled\"\n                  (click)=\"toggleMeridian()\">\n            <ng-container *ngIf=\"model && model.hour >= 12; else am\"\n                          i18n=\"@@ngb.timepicker.PM\">{{ i18n.getAfternoonPeriod() }}</ng-container>\n            <ng-template #am i18n=\"@@ngb.timepicker.AM\">{{ i18n.getMorningPeriod() }}</ng-template>\n          </button>\n        </div>\n      </div>\n    </fieldset>\n  `, providers: [{ provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => NgbTimepicker), multi: true }], styles: [\"ngb-timepicker{font-size:1rem}.ngb-tp{display:flex;align-items:center}.ngb-tp-input-container{width:4em}.ngb-tp-chevron:before{border-style:solid;border-width:.29em .29em 0 0;content:\\\"\\\";display:inline-block;height:.69em;left:.05em;position:relative;top:.15em;transform:rotate(-45deg);vertical-align:middle;width:.69em}.ngb-tp-chevron.bottom:before{top:-.3em;transform:rotate(135deg)}.ngb-tp-input{text-align:center}.ngb-tp-hour,.ngb-tp-minute,.ngb-tp-second,.ngb-tp-meridian{display:flex;flex-direction:column;align-items:center;justify-content:space-around}.ngb-tp-spacer{width:1em;text-align:center}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: NgbTimepickerConfig }, { type: NgbTimeAdapter }, { type: i0.ChangeDetectorRef }, { type: NgbTimepickerI18n }]; }, propDecorators: { meridian: [{\n                type: Input\n            }], spinners: [{\n                type: Input\n            }], seconds: [{\n                type: Input\n            }], hourStep: [{\n                type: Input\n            }], minuteStep: [{\n                type: Input\n            }], secondStep: [{\n                type: Input\n            }], readonlyInputs: [{\n                type: Input\n            }], size: [{\n                type: Input\n            }] } });\n\nclass NgbTimepickerModule {\n}\nNgbTimepickerModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbTimepickerModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nNgbTimepickerModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbTimepickerModule, declarations: [NgbTimepicker], imports: [CommonModule], exports: [NgbTimepicker] });\nNgbTimepickerModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbTimepickerModule, imports: [[CommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbTimepickerModule, decorators: [{\n            type: NgModule,\n            args: [{ declarations: [NgbTimepicker], exports: [NgbTimepicker], imports: [CommonModule] }]\n        }] });\n\nconst ngbToastFadeInTransition = (element, animation) => {\n    const { classList } = element;\n    if (!animation) {\n        classList.add('show');\n        return;\n    }\n    classList.remove('hide');\n    reflow(element);\n    classList.add('showing');\n    return () => {\n        classList.remove('showing');\n        classList.add('show');\n    };\n};\nconst ngbToastFadeOutTransition = ({ classList }) => {\n    classList.remove('show');\n    return () => { classList.add('hide'); };\n};\n\n/**\n * Configuration service for the NgbToast component. You can inject this service, typically in your root component,\n * and customize the values of its properties in order to provide default values for all the toasts used in the\n * application.\n *\n * @since 5.0.0\n */\nclass NgbToastConfig {\n    constructor(_ngbConfig) {\n        this._ngbConfig = _ngbConfig;\n        this.autohide = true;\n        this.delay = 5000;\n        this.ariaLive = 'polite';\n    }\n    get animation() { return (this._animation === undefined) ? this._ngbConfig.animation : this._animation; }\n    set animation(animation) { this._animation = animation; }\n}\nNgbToastConfig.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbToastConfig, deps: [{ token: NgbConfig }], target: i0.ɵɵFactoryTarget.Injectable });\nNgbToastConfig.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbToastConfig, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbToastConfig, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: NgbConfig }]; } });\n\n/**\n * This directive allows the usage of HTML markup or other directives\n * inside of the toast's header.\n *\n * @since 5.0.0\n */\nclass NgbToastHeader {\n}\nNgbToastHeader.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbToastHeader, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nNgbToastHeader.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.3\", type: NgbToastHeader, selector: \"[ngbToastHeader]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbToastHeader, decorators: [{\n            type: Directive,\n            args: [{ selector: '[ngbToastHeader]' }]\n        }] });\n/**\n * Toasts provide feedback messages as notifications to the user.\n * Goal is to mimic the push notifications available both on mobile and desktop operating systems.\n *\n * @since 5.0.0\n */\nclass NgbToast {\n    constructor(ariaLive, config, _zone, _element) {\n        this.ariaLive = ariaLive;\n        this._zone = _zone;\n        this._element = _element;\n        /**\n         * A template like `<ng-template ngbToastHeader></ng-template>` can be\n         * used in the projected content to allow markup usage.\n         */\n        this.contentHeaderTpl = null;\n        /**\n         * An event fired after the animation triggered by calling `.show()` method has finished.\n         *\n         * @since 8.0.0\n         */\n        this.shown = new EventEmitter();\n        /**\n         * An event fired after the animation triggered by calling `.hide()` method has finished.\n         *\n         * It can only occur in 2 different scenarios:\n         * - `autohide` timeout fires\n         * - user clicks on a closing cross\n         *\n         * Additionally this output is purely informative. The toast won't be removed from DOM automatically, it's up\n         * to the user to take care of that.\n         *\n         * @since 8.0.0\n         */\n        this.hidden = new EventEmitter();\n        if (this.ariaLive == null) {\n            this.ariaLive = config.ariaLive;\n        }\n        this.delay = config.delay;\n        this.autohide = config.autohide;\n        this.animation = config.animation;\n    }\n    ngAfterContentInit() {\n        this._zone.onStable.asObservable().pipe(take(1)).subscribe(() => {\n            this._init();\n            this.show();\n        });\n    }\n    ngOnChanges(changes) {\n        if ('autohide' in changes) {\n            this._clearTimeout();\n            this._init();\n        }\n    }\n    /**\n     * Triggers toast closing programmatically.\n     *\n     * The returned observable will emit and be completed once the closing transition has finished.\n     * If the animations are turned off this happens synchronously.\n     *\n     * Alternatively you could listen or subscribe to the `(hidden)` output\n     *\n     * @since 8.0.0\n     */\n    hide() {\n        this._clearTimeout();\n        const transition = ngbRunTransition(this._zone, this._element.nativeElement, ngbToastFadeOutTransition, { animation: this.animation, runningTransition: 'stop' });\n        transition.subscribe(() => { this.hidden.emit(); });\n        return transition;\n    }\n    /**\n     * Triggers toast opening programmatically.\n     *\n     * The returned observable will emit and be completed once the opening transition has finished.\n     * If the animations are turned off this happens synchronously.\n     *\n     * Alternatively you could listen or subscribe to the `(shown)` output\n     *\n     * @since 8.0.0\n     */\n    show() {\n        const transition = ngbRunTransition(this._zone, this._element.nativeElement, ngbToastFadeInTransition, {\n            animation: this.animation,\n            runningTransition: 'continue',\n        });\n        transition.subscribe(() => { this.shown.emit(); });\n        return transition;\n    }\n    _init() {\n        if (this.autohide && !this._timeoutID) {\n            this._timeoutID = setTimeout(() => this.hide(), this.delay);\n        }\n    }\n    _clearTimeout() {\n        if (this._timeoutID) {\n            clearTimeout(this._timeoutID);\n            this._timeoutID = null;\n        }\n    }\n}\nNgbToast.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbToast, deps: [{ token: 'aria-live', attribute: true }, { token: NgbToastConfig }, { token: i0.NgZone }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });\nNgbToast.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: NgbToast, selector: \"ngb-toast\", inputs: { animation: \"animation\", delay: \"delay\", autohide: \"autohide\", header: \"header\" }, outputs: { shown: \"shown\", hidden: \"hidden\" }, host: { attributes: { \"role\": \"alert\", \"aria-atomic\": \"true\" }, properties: { \"attr.aria-live\": \"ariaLive\", \"class.fade\": \"animation\" }, classAttribute: \"toast\" }, queries: [{ propertyName: \"contentHeaderTpl\", first: true, predicate: NgbToastHeader, descendants: true, read: TemplateRef, static: true }], exportAs: [\"ngbToast\"], usesOnChanges: true, ngImport: i0, template: `\n    <ng-template #headerTpl>\n      <strong class=\"me-auto\">{{header}}</strong>\n    </ng-template>\n    <ng-template [ngIf]=\"contentHeaderTpl || header\">\n      <div class=\"toast-header\">\n        <ng-template [ngTemplateOutlet]=\"contentHeaderTpl || headerTpl\"></ng-template>\n        <button type=\"button\" class=\"btn-close\" aria-label=\"Close\" i18n-aria-label=\"@@ngb.toast.close-aria\" (click)=\"hide()\">\n        </button>\n      </div>\n    </ng-template>\n    <div class=\"toast-body\">\n      <ng-content></ng-content>\n    </div>\n  `, isInline: true, styles: [\"ngb-toast{display:block}ngb-toast .toast-header .close{margin-left:auto;margin-bottom:.25rem}\\n\"], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }], encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbToast, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngb-toast', exportAs: 'ngbToast', encapsulation: ViewEncapsulation.None, host: {\n                        'role': 'alert',\n                        '[attr.aria-live]': 'ariaLive',\n                        'aria-atomic': 'true',\n                        'class': 'toast',\n                        '[class.fade]': 'animation',\n                    }, template: `\n    <ng-template #headerTpl>\n      <strong class=\"me-auto\">{{header}}</strong>\n    </ng-template>\n    <ng-template [ngIf]=\"contentHeaderTpl || header\">\n      <div class=\"toast-header\">\n        <ng-template [ngTemplateOutlet]=\"contentHeaderTpl || headerTpl\"></ng-template>\n        <button type=\"button\" class=\"btn-close\" aria-label=\"Close\" i18n-aria-label=\"@@ngb.toast.close-aria\" (click)=\"hide()\">\n        </button>\n      </div>\n    </ng-template>\n    <div class=\"toast-body\">\n      <ng-content></ng-content>\n    </div>\n  `, styles: [\"ngb-toast{display:block}ngb-toast .toast-header .close{margin-left:auto;margin-bottom:.25rem}\\n\"] }]\n        }], ctorParameters: function () {\n        return [{ type: undefined, decorators: [{\n                        type: Attribute,\n                        args: ['aria-live']\n                    }] }, { type: NgbToastConfig }, { type: i0.NgZone }, { type: i0.ElementRef }];\n    }, propDecorators: { animation: [{\n                type: Input\n            }], delay: [{\n                type: Input\n            }], autohide: [{\n                type: Input\n            }], header: [{\n                type: Input\n            }], contentHeaderTpl: [{\n                type: ContentChild,\n                args: [NgbToastHeader, { read: TemplateRef, static: true }]\n            }], shown: [{\n                type: Output\n            }], hidden: [{\n                type: Output\n            }] } });\n\nclass NgbToastModule {\n}\nNgbToastModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbToastModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nNgbToastModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbToastModule, declarations: [NgbToast, NgbToastHeader], imports: [CommonModule], exports: [NgbToast, NgbToastHeader] });\nNgbToastModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbToastModule, imports: [[CommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbToastModule, decorators: [{\n            type: NgModule,\n            args: [{ declarations: [NgbToast, NgbToastHeader], imports: [CommonModule], exports: [NgbToast, NgbToastHeader] }]\n        }] });\n\n/**\n * A configuration service for the [`NgbTooltip`](#/components/tooltip/api#NgbTooltip) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the tooltips used in the application.\n */\nclass NgbTooltipConfig {\n    constructor(_ngbConfig) {\n        this._ngbConfig = _ngbConfig;\n        this.autoClose = true;\n        this.placement = 'auto';\n        this.triggers = 'hover focus';\n        this.disableTooltip = false;\n        this.openDelay = 0;\n        this.closeDelay = 0;\n    }\n    get animation() { return (this._animation === undefined) ? this._ngbConfig.animation : this._animation; }\n    set animation(animation) { this._animation = animation; }\n}\nNgbTooltipConfig.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbTooltipConfig, deps: [{ token: NgbConfig }], target: i0.ɵɵFactoryTarget.Injectable });\nNgbTooltipConfig.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbTooltipConfig, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbTooltipConfig, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: NgbConfig }]; } });\n\nlet nextId = 0;\nclass NgbTooltipWindow {\n}\nNgbTooltipWindow.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbTooltipWindow, deps: [], target: i0.ɵɵFactoryTarget.Component });\nNgbTooltipWindow.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: NgbTooltipWindow, selector: \"ngb-tooltip-window\", inputs: { animation: \"animation\", id: \"id\", tooltipClass: \"tooltipClass\" }, host: { attributes: { \"role\": \"tooltip\" }, properties: { \"class\": \"\\\"tooltip\\\" + (tooltipClass ? \\\" \\\" + tooltipClass : \\\"\\\")\", \"class.fade\": \"animation\", \"id\": \"id\" } }, ngImport: i0, template: `<div class=\"tooltip-arrow\" data-popper-arrow></div><div class=\"tooltip-inner\"><ng-content></ng-content></div>`, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbTooltipWindow, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ngb-tooltip-window',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    host: {\n                        '[class]': '\"tooltip\" + (tooltipClass ? \" \" + tooltipClass : \"\")',\n                        '[class.fade]': 'animation',\n                        'role': 'tooltip',\n                        '[id]': 'id'\n                    },\n                    template: `<div class=\"tooltip-arrow\" data-popper-arrow></div><div class=\"tooltip-inner\"><ng-content></ng-content></div>`\n                }]\n        }], propDecorators: { animation: [{\n                type: Input\n            }], id: [{\n                type: Input\n            }], tooltipClass: [{\n                type: Input\n            }] } });\n/**\n * A lightweight and extensible directive for fancy tooltip creation.\n */\nclass NgbTooltip {\n    constructor(_elementRef, _renderer, injector, viewContainerRef, config, _ngZone, _document, _changeDetector, applicationRef) {\n        this._elementRef = _elementRef;\n        this._renderer = _renderer;\n        this._ngZone = _ngZone;\n        this._document = _document;\n        this._changeDetector = _changeDetector;\n        /**\n         * An event emitted when the tooltip opening animation has finished. Contains no payload.\n         */\n        this.shown = new EventEmitter();\n        /**\n         * An event emitted when the tooltip closing animation has finished. Contains no payload.\n         */\n        this.hidden = new EventEmitter();\n        this._ngbTooltipWindowId = `ngb-tooltip-${nextId++}`;\n        this._windowRef = null;\n        this._positioning = ngbPositioning();\n        this.animation = config.animation;\n        this.autoClose = config.autoClose;\n        this.placement = config.placement;\n        this.triggers = config.triggers;\n        this.container = config.container;\n        this.disableTooltip = config.disableTooltip;\n        this.tooltipClass = config.tooltipClass;\n        this.openDelay = config.openDelay;\n        this.closeDelay = config.closeDelay;\n        this._popupService = new PopupService(NgbTooltipWindow, injector, viewContainerRef, _renderer, this._ngZone, applicationRef);\n    }\n    /**\n     * The string content or a `TemplateRef` for the content to be displayed in the tooltip.\n     *\n     * If the content if falsy, the tooltip won't open.\n     */\n    set ngbTooltip(value) {\n        this._ngbTooltip = value;\n        if (!value && this._windowRef) {\n            this.close();\n        }\n    }\n    get ngbTooltip() { return this._ngbTooltip; }\n    /**\n     * Opens the tooltip.\n     *\n     * This is considered to be a \"manual\" triggering.\n     * The `context` is an optional value to be injected into the tooltip template when it is created.\n     */\n    open(context) {\n        if (!this._windowRef && this._ngbTooltip && !this.disableTooltip) {\n            const { windowRef, transition$ } = this._popupService.open(this._ngbTooltip, context, this.animation);\n            this._windowRef = windowRef;\n            this._windowRef.instance.animation = this.animation;\n            this._windowRef.instance.tooltipClass = this.tooltipClass;\n            this._windowRef.instance.id = this._ngbTooltipWindowId;\n            this._renderer.setAttribute(this._elementRef.nativeElement, 'aria-describedby', this._ngbTooltipWindowId);\n            if (this.container === 'body') {\n                this._document.querySelector(this.container).appendChild(this._windowRef.location.nativeElement);\n            }\n            // We need to detect changes, because we don't know where .open() might be called from.\n            // Ex. opening tooltip from one of lifecycle hooks that run after the CD\n            // (say from ngAfterViewInit) will result in 'ExpressionHasChanged' exception\n            this._windowRef.changeDetectorRef.detectChanges();\n            // We need to mark for check, because tooltip won't work inside the OnPush component.\n            // Ex. when we use expression like `{{ tooltip.isOpen() : 'opened' : 'closed' }}`\n            // inside the template of an OnPush component and we change the tooltip from\n            // open -> closed, the expression in question won't be updated unless we explicitly\n            // mark the parent component to be checked.\n            this._windowRef.changeDetectorRef.markForCheck();\n            // Setting up popper and scheduling updates when zone is stable\n            this._ngZone.runOutsideAngular(() => {\n                this._positioning.createPopper({\n                    hostElement: this._elementRef.nativeElement,\n                    targetElement: this._windowRef.location.nativeElement,\n                    placement: this.placement,\n                    appendToBody: this.container === 'body',\n                    baseClass: 'bs-tooltip',\n                });\n                Promise.resolve().then(() => {\n                    // This update is required for correct arrow placement\n                    this._positioning.update();\n                    this._zoneSubscription = this._ngZone.onStable.subscribe(() => this._positioning.update());\n                });\n            });\n            ngbAutoClose(this._ngZone, this._document, this.autoClose, () => this.close(), this.hidden, [this._windowRef.location.nativeElement]);\n            transition$.subscribe(() => this.shown.emit());\n        }\n    }\n    /**\n     * Closes the tooltip.\n     *\n     * This is considered to be a \"manual\" triggering of the tooltip.\n     */\n    close(animation = this.animation) {\n        if (this._windowRef != null) {\n            this._renderer.removeAttribute(this._elementRef.nativeElement, 'aria-describedby');\n            this._popupService.close(animation).subscribe(() => {\n                var _a;\n                this._windowRef = null;\n                this._positioning.destroy();\n                (_a = this._zoneSubscription) === null || _a === void 0 ? void 0 : _a.unsubscribe();\n                this.hidden.emit();\n                this._changeDetector.markForCheck();\n            });\n        }\n    }\n    /**\n     * Toggles the tooltip.\n     *\n     * This is considered to be a \"manual\" triggering of the tooltip.\n     */\n    toggle() {\n        if (this._windowRef) {\n            this.close();\n        }\n        else {\n            this.open();\n        }\n    }\n    /**\n     * Returns `true`, if the popover is currently shown.\n     */\n    isOpen() { return this._windowRef != null; }\n    ngOnInit() {\n        this._unregisterListenersFn = listenToTriggers(this._renderer, this._elementRef.nativeElement, this.triggers, this.isOpen.bind(this), this.open.bind(this), this.close.bind(this), +this.openDelay, +this.closeDelay);\n    }\n    ngOnChanges({ tooltipClass }) {\n        if (tooltipClass && this.isOpen()) {\n            this._windowRef.instance.tooltipClass = tooltipClass.currentValue;\n        }\n    }\n    ngOnDestroy() {\n        var _a;\n        this.close(false);\n        // This check is needed as it might happen that ngOnDestroy is called before ngOnInit\n        // under certain conditions, see: https://github.com/ng-bootstrap/ng-bootstrap/issues/2199\n        (_a = this._unregisterListenersFn) === null || _a === void 0 ? void 0 : _a.call(this);\n    }\n}\nNgbTooltip.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbTooltip, deps: [{ token: i0.ElementRef }, { token: i0.Renderer2 }, { token: i0.Injector }, { token: i0.ViewContainerRef }, { token: NgbTooltipConfig }, { token: i0.NgZone }, { token: DOCUMENT }, { token: i0.ChangeDetectorRef }, { token: i0.ApplicationRef }], target: i0.ɵɵFactoryTarget.Directive });\nNgbTooltip.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.3\", type: NgbTooltip, selector: \"[ngbTooltip]\", inputs: { animation: \"animation\", autoClose: \"autoClose\", placement: \"placement\", triggers: \"triggers\", container: \"container\", disableTooltip: \"disableTooltip\", tooltipClass: \"tooltipClass\", openDelay: \"openDelay\", closeDelay: \"closeDelay\", ngbTooltip: \"ngbTooltip\" }, outputs: { shown: \"shown\", hidden: \"hidden\" }, exportAs: [\"ngbTooltip\"], usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbTooltip, decorators: [{\n            type: Directive,\n            args: [{ selector: '[ngbTooltip]', exportAs: 'ngbTooltip' }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: i0.Renderer2 }, { type: i0.Injector }, { type: i0.ViewContainerRef }, { type: NgbTooltipConfig }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }, { type: i0.ChangeDetectorRef }, { type: i0.ApplicationRef }];\n    }, propDecorators: { animation: [{\n                type: Input\n            }], autoClose: [{\n                type: Input\n            }], placement: [{\n                type: Input\n            }], triggers: [{\n                type: Input\n            }], container: [{\n                type: Input\n            }], disableTooltip: [{\n                type: Input\n            }], tooltipClass: [{\n                type: Input\n            }], openDelay: [{\n                type: Input\n            }], closeDelay: [{\n                type: Input\n            }], shown: [{\n                type: Output\n            }], hidden: [{\n                type: Output\n            }], ngbTooltip: [{\n                type: Input\n            }] } });\n\nclass NgbTooltipModule {\n}\nNgbTooltipModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbTooltipModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nNgbTooltipModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbTooltipModule, declarations: [NgbTooltip, NgbTooltipWindow], exports: [NgbTooltip] });\nNgbTooltipModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbTooltipModule });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbTooltipModule, decorators: [{\n            type: NgModule,\n            args: [{ declarations: [NgbTooltip, NgbTooltipWindow], exports: [NgbTooltip] }]\n        }] });\n\n/**\n * A component that helps with text highlighting.\n *\n * If splits the `result` text into parts that contain the searched `term` and generates the HTML markup to simplify\n * highlighting:\n *\n * Ex. `result=\"Alaska\"` and `term=\"as\"` will produce `Al<span class=\"ngb-highlight\">as</span>ka`.\n */\nclass NgbHighlight {\n    constructor() {\n        /**\n         * The CSS class for `<span>` elements wrapping the `term` inside the `result`.\n         */\n        this.highlightClass = 'ngb-highlight';\n        /**\n         * Boolean option to determine if the highlighting should be sensitive to accents or not.\n         *\n         * This feature is only available for browsers that implement the `String.normalize` function\n         * (typically not Internet Explorer).\n         * If you want to use this feature in a browser that does not implement `String.normalize`,\n         * you will have to include a polyfill in your application (`unorm` for example).\n         *\n         * @since 9.1.0\n         */\n        this.accentSensitive = true;\n    }\n    ngOnChanges(changes) {\n        if (!this.accentSensitive && !String.prototype.normalize) {\n            console.warn('The `accentSensitive` input in `ngb-highlight` cannot be set to `false` in a browser ' +\n                'that does not implement the `String.normalize` function. ' +\n                'You will have to include a polyfill in your application to use this feature in the current browser.');\n            this.accentSensitive = true;\n        }\n        const result = toString(this.result);\n        const terms = Array.isArray(this.term) ? this.term : [this.term];\n        const prepareTerm = term => this.accentSensitive ? term : removeAccents(term);\n        const escapedTerms = terms.map(term => regExpEscape(prepareTerm(toString(term)))).filter(term => term);\n        const toSplit = this.accentSensitive ? result : removeAccents(result);\n        const parts = escapedTerms.length ? toSplit.split(new RegExp(`(${escapedTerms.join('|')})`, 'gmi')) : [result];\n        if (this.accentSensitive) {\n            this.parts = parts;\n        }\n        else {\n            let offset = 0;\n            this.parts = parts.map(part => result.substring(offset, offset += part.length));\n        }\n    }\n}\nNgbHighlight.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbHighlight, deps: [], target: i0.ɵɵFactoryTarget.Component });\nNgbHighlight.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: NgbHighlight, selector: \"ngb-highlight\", inputs: { highlightClass: \"highlightClass\", result: \"result\", term: \"term\", accentSensitive: \"accentSensitive\" }, usesOnChanges: true, ngImport: i0, template: \"<ng-template ngFor [ngForOf]=\\\"parts\\\" let-part let-isOdd=\\\"odd\\\"><span *ngIf=\\\"isOdd; else even\\\" [class]=\\\"highlightClass\\\">{{part}}</span><ng-template #even>{{part}}</ng-template></ng-template>\", isInline: true, styles: [\".ngb-highlight{font-weight:700}\\n\"], directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbHighlight, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngb-highlight', changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, template: `<ng-template ngFor [ngForOf]=\"parts\" let-part let-isOdd=\"odd\">` +\n                        `<span *ngIf=\"isOdd; else even\" [class]=\"highlightClass\">{{part}}</span><ng-template #even>{{part}}</ng-template>` +\n                        `</ng-template>`, styles: [\".ngb-highlight{font-weight:700}\\n\"] }]\n        }], propDecorators: { highlightClass: [{\n                type: Input\n            }], result: [{\n                type: Input\n            }], term: [{\n                type: Input\n            }], accentSensitive: [{\n                type: Input\n            }] } });\n\nclass NgbTypeaheadWindow {\n    constructor() {\n        this.activeIdx = 0;\n        /**\n         * Flag indicating if the first row should be active initially\n         */\n        this.focusFirst = true;\n        /**\n         * A function used to format a given result before display. This function should return a formatted string without any\n         * HTML markup\n         */\n        this.formatter = toString;\n        /**\n         * Event raised when user selects a particular result row\n         */\n        this.selectEvent = new EventEmitter();\n        this.activeChangeEvent = new EventEmitter();\n    }\n    hasActive() { return this.activeIdx > -1 && this.activeIdx < this.results.length; }\n    getActive() { return this.results[this.activeIdx]; }\n    markActive(activeIdx) {\n        this.activeIdx = activeIdx;\n        this._activeChanged();\n    }\n    next() {\n        if (this.activeIdx === this.results.length - 1) {\n            this.activeIdx = this.focusFirst ? (this.activeIdx + 1) % this.results.length : -1;\n        }\n        else {\n            this.activeIdx++;\n        }\n        this._activeChanged();\n    }\n    prev() {\n        if (this.activeIdx < 0) {\n            this.activeIdx = this.results.length - 1;\n        }\n        else if (this.activeIdx === 0) {\n            this.activeIdx = this.focusFirst ? this.results.length - 1 : -1;\n        }\n        else {\n            this.activeIdx--;\n        }\n        this._activeChanged();\n    }\n    resetActive() {\n        this.activeIdx = this.focusFirst ? 0 : -1;\n        this._activeChanged();\n    }\n    select(item) { this.selectEvent.emit(item); }\n    ngOnInit() { this.resetActive(); }\n    _activeChanged() {\n        this.activeChangeEvent.emit(this.activeIdx >= 0 ? this.id + '-' + this.activeIdx : undefined);\n    }\n}\nNgbTypeaheadWindow.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbTypeaheadWindow, deps: [], target: i0.ɵɵFactoryTarget.Component });\nNgbTypeaheadWindow.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: NgbTypeaheadWindow, selector: \"ngb-typeahead-window\", inputs: { id: \"id\", focusFirst: \"focusFirst\", results: \"results\", term: \"term\", formatter: \"formatter\", resultTemplate: \"resultTemplate\", popupClass: \"popupClass\" }, outputs: { selectEvent: \"select\", activeChangeEvent: \"activeChange\" }, host: { attributes: { \"role\": \"listbox\" }, listeners: { \"mousedown\": \"$event.preventDefault()\" }, properties: { \"class\": \"\\\"dropdown-menu show\\\" + (popupClass ? \\\" \\\" + popupClass : \\\"\\\")\", \"id\": \"id\" } }, exportAs: [\"ngbTypeaheadWindow\"], ngImport: i0, template: `\n    <ng-template #rt let-result=\"result\" let-term=\"term\" let-formatter=\"formatter\">\n      <ngb-highlight [result]=\"formatter(result)\" [term]=\"term\"></ngb-highlight>\n    </ng-template>\n    <ng-template ngFor [ngForOf]=\"results\" let-result let-idx=\"index\">\n      <button type=\"button\" class=\"dropdown-item\" role=\"option\"\n        [id]=\"id + '-' + idx\"\n        [class.active]=\"idx === activeIdx\"\n        (mouseenter)=\"markActive(idx)\"\n        (click)=\"select(result)\">\n          <ng-template [ngTemplateOutlet]=\"resultTemplate || rt\"\n          [ngTemplateOutletContext]=\"{result: result, term: term, formatter: formatter}\"></ng-template>\n      </button>\n    </ng-template>\n  `, isInline: true, components: [{ type: NgbHighlight, selector: \"ngb-highlight\", inputs: [\"highlightClass\", \"result\", \"term\", \"accentSensitive\"] }], directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i2.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }], encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbTypeaheadWindow, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ngb-typeahead-window',\n                    exportAs: 'ngbTypeaheadWindow',\n                    encapsulation: ViewEncapsulation.None,\n                    host: {\n                        '(mousedown)': '$event.preventDefault()',\n                        '[class]': '\"dropdown-menu show\" + (popupClass ? \" \" + popupClass : \"\")',\n                        'role': 'listbox',\n                        '[id]': 'id'\n                    },\n                    template: `\n    <ng-template #rt let-result=\"result\" let-term=\"term\" let-formatter=\"formatter\">\n      <ngb-highlight [result]=\"formatter(result)\" [term]=\"term\"></ngb-highlight>\n    </ng-template>\n    <ng-template ngFor [ngForOf]=\"results\" let-result let-idx=\"index\">\n      <button type=\"button\" class=\"dropdown-item\" role=\"option\"\n        [id]=\"id + '-' + idx\"\n        [class.active]=\"idx === activeIdx\"\n        (mouseenter)=\"markActive(idx)\"\n        (click)=\"select(result)\">\n          <ng-template [ngTemplateOutlet]=\"resultTemplate || rt\"\n          [ngTemplateOutletContext]=\"{result: result, term: term, formatter: formatter}\"></ng-template>\n      </button>\n    </ng-template>\n  `\n                }]\n        }], propDecorators: { id: [{\n                type: Input\n            }], focusFirst: [{\n                type: Input\n            }], results: [{\n                type: Input\n            }], term: [{\n                type: Input\n            }], formatter: [{\n                type: Input\n            }], resultTemplate: [{\n                type: Input\n            }], popupClass: [{\n                type: Input\n            }], selectEvent: [{\n                type: Output,\n                args: ['select']\n            }], activeChangeEvent: [{\n                type: Output,\n                args: ['activeChange']\n            }] } });\n\n/**\n * A configuration service for the [`NgbTypeahead`](#/components/typeahead/api#NgbTypeahead) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the typeaheads used in the application.\n */\nclass NgbTypeaheadConfig {\n    constructor() {\n        this.editable = true;\n        this.focusFirst = true;\n        this.showHint = false;\n        this.placement = ['bottom-start', 'bottom-end', 'top-start', 'top-end'];\n    }\n}\nNgbTypeaheadConfig.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbTypeaheadConfig, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nNgbTypeaheadConfig.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbTypeaheadConfig, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbTypeaheadConfig, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\nconst ARIA_LIVE_DELAY = new InjectionToken('live announcer delay', { providedIn: 'root', factory: ARIA_LIVE_DELAY_FACTORY });\nfunction ARIA_LIVE_DELAY_FACTORY() {\n    return 100;\n}\nfunction getLiveElement(document, lazyCreate = false) {\n    let element = document.body.querySelector('#ngb-live');\n    if (element == null && lazyCreate) {\n        element = document.createElement('div');\n        element.setAttribute('id', 'ngb-live');\n        element.setAttribute('aria-live', 'polite');\n        element.setAttribute('aria-atomic', 'true');\n        element.classList.add('visually-hidden');\n        document.body.appendChild(element);\n    }\n    return element;\n}\nclass Live {\n    constructor(_document, _delay) {\n        this._document = _document;\n        this._delay = _delay;\n    }\n    ngOnDestroy() {\n        const element = getLiveElement(this._document);\n        if (element) {\n            // if exists, it will always be attached to the <body>\n            element.parentElement.removeChild(element);\n        }\n    }\n    say(message) {\n        const element = getLiveElement(this._document, true);\n        const delay = this._delay;\n        if (element != null) {\n            element.textContent = '';\n            const setText = () => element.textContent = message;\n            if (delay === null) {\n                setText();\n            }\n            else {\n                setTimeout(setText, delay);\n            }\n        }\n    }\n}\nLive.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: Live, deps: [{ token: DOCUMENT }, { token: ARIA_LIVE_DELAY }], target: i0.ɵɵFactoryTarget.Injectable });\nLive.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: Live, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: Live, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () {\n        return [{ type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [ARIA_LIVE_DELAY]\n                    }] }];\n    } });\n\nlet nextWindowId = 0;\n/**\n * A directive providing a simple way of creating powerful typeaheads from any text input.\n */\nclass NgbTypeahead {\n    constructor(_elementRef, viewContainerRef, _renderer, injector, config, ngZone, _live, _document, _ngZone, _changeDetector, applicationRef) {\n        this._elementRef = _elementRef;\n        this._renderer = _renderer;\n        this._live = _live;\n        this._document = _document;\n        this._ngZone = _ngZone;\n        this._changeDetector = _changeDetector;\n        this._subscription = null;\n        this._closed$ = new Subject();\n        this._inputValueBackup = null;\n        this._windowRef = null;\n        this._positioning = ngbPositioning();\n        /**\n         * The value for the `autocomplete` attribute for the `<input>` element.\n         *\n         * Defaults to `\"off\"` to disable the native browser autocomplete, but you can override it if necessary.\n         *\n         * @since 2.1.0\n         */\n        this.autocomplete = 'off';\n        /**\n         * The preferred placement of the typeahead, among the [possible values](#/guides/positioning#api).\n         *\n         * The default order of preference is `\"bottom-start bottom-end top-start top-end\"`\n         *\n         * Please see the [positioning overview](#/positioning) for more details.\n         */\n        this.placement = 'bottom-start';\n        /**\n         * An event emitted right before an item is selected from the result list.\n         *\n         * Event payload is of type [`NgbTypeaheadSelectItemEvent`](#/components/typeahead/api#NgbTypeaheadSelectItemEvent).\n         */\n        this.selectItem = new EventEmitter();\n        this.activeDescendant = null;\n        this.popupId = `ngb-typeahead-${nextWindowId++}`;\n        this._onTouched = () => { };\n        this._onChange = (_) => { };\n        this.container = config.container;\n        this.editable = config.editable;\n        this.focusFirst = config.focusFirst;\n        this.showHint = config.showHint;\n        this.placement = config.placement;\n        this._valueChanges = fromEvent(_elementRef.nativeElement, 'input')\n            .pipe(map($event => $event.target.value));\n        this._resubscribeTypeahead = new BehaviorSubject(null);\n        this._popupService = new PopupService(NgbTypeaheadWindow, injector, viewContainerRef, _renderer, this._ngZone, applicationRef);\n    }\n    ngOnInit() { this._subscribeToUserInput(); }\n    ngOnChanges({ ngbTypeahead }) {\n        if (ngbTypeahead && !ngbTypeahead.firstChange) {\n            this._unsubscribeFromUserInput();\n            this._subscribeToUserInput();\n        }\n    }\n    ngOnDestroy() {\n        this._closePopup();\n        this._unsubscribeFromUserInput();\n    }\n    registerOnChange(fn) { this._onChange = fn; }\n    registerOnTouched(fn) { this._onTouched = fn; }\n    writeValue(value) {\n        this._writeInputValue(this._formatItemForInput(value));\n        if (this.showHint) {\n            this._inputValueBackup = value;\n        }\n    }\n    setDisabledState(isDisabled) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n    }\n    /**\n     * Dismisses typeahead popup window\n     */\n    dismissPopup() {\n        if (this.isPopupOpen()) {\n            this._resubscribeTypeahead.next(null);\n            this._closePopup();\n            if (this.showHint && this._inputValueBackup !== null) {\n                this._writeInputValue(this._inputValueBackup);\n            }\n            this._changeDetector.markForCheck();\n        }\n    }\n    /**\n     * Returns true if the typeahead popup window is displayed\n     */\n    isPopupOpen() { return this._windowRef != null; }\n    handleBlur() {\n        this._resubscribeTypeahead.next(null);\n        this._onTouched();\n    }\n    handleKeyDown(event) {\n        if (!this.isPopupOpen()) {\n            return;\n        }\n        /* eslint-disable-next-line deprecation/deprecation */\n        switch (event.which) {\n            case Key.ArrowDown:\n                event.preventDefault();\n                this._windowRef.instance.next();\n                this._showHint();\n                break;\n            case Key.ArrowUp:\n                event.preventDefault();\n                this._windowRef.instance.prev();\n                this._showHint();\n                break;\n            case Key.Enter:\n            case Key.Tab: {\n                const result = this._windowRef.instance.getActive();\n                if (isDefined(result)) {\n                    event.preventDefault();\n                    event.stopPropagation();\n                    this._selectResult(result);\n                }\n                this._closePopup();\n                break;\n            }\n        }\n    }\n    _openPopup() {\n        if (!this.isPopupOpen()) {\n            this._inputValueBackup = this._elementRef.nativeElement.value;\n            const { windowRef } = this._popupService.open();\n            this._windowRef = windowRef;\n            this._windowRef.instance.id = this.popupId;\n            this._windowRef.instance.selectEvent.subscribe((result) => this._selectResultClosePopup(result));\n            this._windowRef.instance.activeChangeEvent.subscribe((activeId) => this.activeDescendant = activeId);\n            this._windowRef.instance.popupClass = this.popupClass;\n            if (this.container === 'body') {\n                this._renderer.setStyle(this._windowRef.location.nativeElement, 'z-index', '1055');\n                this._document.querySelector(this.container).appendChild(this._windowRef.location.nativeElement);\n            }\n            this._changeDetector.markForCheck();\n            // Setting up popper and scheduling updates when zone is stable\n            this._ngZone.runOutsideAngular(() => {\n                if (this._windowRef) {\n                    this._positioning.createPopper({\n                        hostElement: this._elementRef.nativeElement,\n                        targetElement: this._windowRef.location.nativeElement,\n                        placement: this.placement,\n                        appendToBody: this.container === 'body',\n                        updatePopperOptions: addPopperOffset([0, 2]),\n                    });\n                    this._zoneSubscription = this._ngZone.onStable.subscribe(() => this._positioning.update());\n                }\n            });\n            ngbAutoClose(this._ngZone, this._document, 'outside', () => this.dismissPopup(), this._closed$, [this._elementRef.nativeElement, this._windowRef.location.nativeElement]);\n        }\n    }\n    _closePopup() {\n        this._popupService.close().subscribe(() => {\n            var _a;\n            this._positioning.destroy();\n            (_a = this._zoneSubscription) === null || _a === void 0 ? void 0 : _a.unsubscribe();\n            this._closed$.next();\n            this._windowRef = null;\n            this.activeDescendant = null;\n        });\n    }\n    _selectResult(result) {\n        let defaultPrevented = false;\n        this.selectItem.emit({ item: result, preventDefault: () => { defaultPrevented = true; } });\n        this._resubscribeTypeahead.next(null);\n        if (!defaultPrevented) {\n            this.writeValue(result);\n            this._onChange(result);\n        }\n    }\n    _selectResultClosePopup(result) {\n        this._selectResult(result);\n        this._closePopup();\n    }\n    _showHint() {\n        var _a;\n        if (this.showHint && ((_a = this._windowRef) === null || _a === void 0 ? void 0 : _a.instance.hasActive()) && this._inputValueBackup != null) {\n            const userInputLowerCase = this._inputValueBackup.toLowerCase();\n            const formattedVal = this._formatItemForInput(this._windowRef.instance.getActive());\n            if (userInputLowerCase === formattedVal.substr(0, this._inputValueBackup.length).toLowerCase()) {\n                this._writeInputValue(this._inputValueBackup + formattedVal.substr(this._inputValueBackup.length));\n                this._elementRef.nativeElement['setSelectionRange'].apply(this._elementRef.nativeElement, [this._inputValueBackup.length, formattedVal.length]);\n            }\n            else {\n                this._writeInputValue(formattedVal);\n            }\n        }\n    }\n    _formatItemForInput(item) {\n        return item != null && this.inputFormatter ? this.inputFormatter(item) : toString(item);\n    }\n    _writeInputValue(value) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'value', toString(value));\n    }\n    _subscribeToUserInput() {\n        const results$ = this._valueChanges.pipe(tap(value => {\n            this._inputValueBackup = this.showHint ? value : null;\n            this._onChange(this.editable ? value : undefined);\n        }), this.ngbTypeahead ? this.ngbTypeahead : () => of([]));\n        this._subscription = this._resubscribeTypeahead.pipe(switchMap(() => results$)).subscribe(results => {\n            if (!results || results.length === 0) {\n                this._closePopup();\n            }\n            else {\n                this._openPopup();\n                this._windowRef.instance.focusFirst = this.focusFirst;\n                this._windowRef.instance.results = results;\n                this._windowRef.instance.term = this._elementRef.nativeElement.value;\n                if (this.resultFormatter) {\n                    this._windowRef.instance.formatter = this.resultFormatter;\n                }\n                if (this.resultTemplate) {\n                    this._windowRef.instance.resultTemplate = this.resultTemplate;\n                }\n                this._windowRef.instance.resetActive();\n                // The observable stream we are subscribing to might have async steps\n                // and if a component containing typeahead is using the OnPush strategy\n                // the change detection turn wouldn't be invoked automatically.\n                this._windowRef.changeDetectorRef.detectChanges();\n                this._showHint();\n            }\n            // live announcer\n            const count = results ? results.length : 0;\n            this._live.say(count === 0 ? 'No results available' : `${count} result${count === 1 ? '' : 's'} available`);\n        });\n    }\n    _unsubscribeFromUserInput() {\n        if (this._subscription) {\n            this._subscription.unsubscribe();\n        }\n        this._subscription = null;\n    }\n}\nNgbTypeahead.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbTypeahead, deps: [{ token: i0.ElementRef }, { token: i0.ViewContainerRef }, { token: i0.Renderer2 }, { token: i0.Injector }, { token: NgbTypeaheadConfig }, { token: i0.NgZone }, { token: Live }, { token: DOCUMENT }, { token: i0.NgZone }, { token: i0.ChangeDetectorRef }, { token: i0.ApplicationRef }], target: i0.ɵɵFactoryTarget.Directive });\nNgbTypeahead.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.3\", type: NgbTypeahead, selector: \"input[ngbTypeahead]\", inputs: { autocomplete: \"autocomplete\", container: \"container\", editable: \"editable\", focusFirst: \"focusFirst\", inputFormatter: \"inputFormatter\", ngbTypeahead: \"ngbTypeahead\", resultFormatter: \"resultFormatter\", resultTemplate: \"resultTemplate\", showHint: \"showHint\", placement: \"placement\", popupClass: \"popupClass\" }, outputs: { selectItem: \"selectItem\" }, host: { attributes: { \"autocapitalize\": \"off\", \"autocorrect\": \"off\", \"role\": \"combobox\", \"aria-multiline\": \"false\" }, listeners: { \"blur\": \"handleBlur()\", \"keydown\": \"handleKeyDown($event)\" }, properties: { \"class.open\": \"isPopupOpen()\", \"autocomplete\": \"autocomplete\", \"attr.aria-autocomplete\": \"showHint ? \\\"both\\\" : \\\"list\\\"\", \"attr.aria-activedescendant\": \"activeDescendant\", \"attr.aria-owns\": \"isPopupOpen() ? popupId : null\", \"attr.aria-expanded\": \"isPopupOpen()\" } }, providers: [{ provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => NgbTypeahead), multi: true }], exportAs: [\"ngbTypeahead\"], usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbTypeahead, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'input[ngbTypeahead]',\n                    exportAs: 'ngbTypeahead',\n                    host: {\n                        '(blur)': 'handleBlur()',\n                        '[class.open]': 'isPopupOpen()',\n                        '(keydown)': 'handleKeyDown($event)',\n                        '[autocomplete]': 'autocomplete',\n                        'autocapitalize': 'off',\n                        'autocorrect': 'off',\n                        'role': 'combobox',\n                        'aria-multiline': 'false',\n                        '[attr.aria-autocomplete]': 'showHint ? \"both\" : \"list\"',\n                        '[attr.aria-activedescendant]': 'activeDescendant',\n                        '[attr.aria-owns]': 'isPopupOpen() ? popupId : null',\n                        '[attr.aria-expanded]': 'isPopupOpen()'\n                    },\n                    providers: [{ provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => NgbTypeahead), multi: true }]\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: i0.ViewContainerRef }, { type: i0.Renderer2 }, { type: i0.Injector }, { type: NgbTypeaheadConfig }, { type: i0.NgZone }, { type: Live }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }, { type: i0.NgZone }, { type: i0.ChangeDetectorRef }, { type: i0.ApplicationRef }];\n    }, propDecorators: { autocomplete: [{\n                type: Input\n            }], container: [{\n                type: Input\n            }], editable: [{\n                type: Input\n            }], focusFirst: [{\n                type: Input\n            }], inputFormatter: [{\n                type: Input\n            }], ngbTypeahead: [{\n                type: Input\n            }], resultFormatter: [{\n                type: Input\n            }], resultTemplate: [{\n                type: Input\n            }], showHint: [{\n                type: Input\n            }], placement: [{\n                type: Input\n            }], popupClass: [{\n                type: Input\n            }], selectItem: [{\n                type: Output\n            }] } });\n\nclass NgbTypeaheadModule {\n}\nNgbTypeaheadModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbTypeaheadModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nNgbTypeaheadModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbTypeaheadModule, declarations: [NgbTypeahead, NgbHighlight, NgbTypeaheadWindow], imports: [CommonModule], exports: [NgbTypeahead, NgbHighlight] });\nNgbTypeaheadModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbTypeaheadModule, imports: [[CommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbTypeaheadModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [NgbTypeahead, NgbHighlight, NgbTypeaheadWindow],\n                    exports: [NgbTypeahead, NgbHighlight],\n                    imports: [CommonModule]\n                }]\n        }] });\n\nvar OffcanvasDismissReasons;\n(function (OffcanvasDismissReasons) {\n    OffcanvasDismissReasons[OffcanvasDismissReasons[\"BACKDROP_CLICK\"] = 0] = \"BACKDROP_CLICK\";\n    OffcanvasDismissReasons[OffcanvasDismissReasons[\"ESC\"] = 1] = \"ESC\";\n})(OffcanvasDismissReasons || (OffcanvasDismissReasons = {}));\n\nclass NgbOffcanvasBackdrop {\n    constructor(_el, _zone) {\n        this._el = _el;\n        this._zone = _zone;\n        this.dismissEvent = new EventEmitter();\n    }\n    ngOnInit() {\n        this._zone.onStable.asObservable().pipe(take(1)).subscribe(() => {\n            ngbRunTransition(this._zone, this._el.nativeElement, (element, animation) => {\n                if (animation) {\n                    reflow(element);\n                }\n                element.classList.add('show');\n            }, { animation: this.animation, runningTransition: 'continue' });\n        });\n    }\n    hide() {\n        return ngbRunTransition(this._zone, this._el.nativeElement, ({ classList }) => classList.remove('show'), { animation: this.animation, runningTransition: 'stop' });\n    }\n    dismiss() { this.dismissEvent.emit(OffcanvasDismissReasons.BACKDROP_CLICK); }\n}\nNgbOffcanvasBackdrop.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbOffcanvasBackdrop, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\nNgbOffcanvasBackdrop.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: NgbOffcanvasBackdrop, selector: \"ngb-offcanvas-backdrop\", inputs: { animation: \"animation\", backdropClass: \"backdropClass\" }, outputs: { dismissEvent: \"dismiss\" }, host: { listeners: { \"mousedown\": \"dismiss()\" }, properties: { \"class\": \"\\\"offcanvas-backdrop\\\" + (backdropClass ? \\\" \\\" + backdropClass : \\\"\\\")\", \"class.show\": \"!animation\", \"class.fade\": \"animation\" } }, ngImport: i0, template: '', isInline: true, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbOffcanvasBackdrop, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ngb-offcanvas-backdrop',\n                    encapsulation: ViewEncapsulation.None,\n                    template: '',\n                    host: {\n                        '[class]': '\"offcanvas-backdrop\" + (backdropClass ? \" \" + backdropClass : \"\")',\n                        '[class.show]': '!animation',\n                        '[class.fade]': 'animation',\n                        '(mousedown)': 'dismiss()'\n                    }\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.NgZone }]; }, propDecorators: { animation: [{\n                type: Input\n            }], backdropClass: [{\n                type: Input\n            }], dismissEvent: [{\n                type: Output,\n                args: ['dismiss']\n            }] } });\n\nclass NgbOffcanvasPanel {\n    constructor(_document, _elRef, _zone) {\n        this._document = _document;\n        this._elRef = _elRef;\n        this._zone = _zone;\n        this._closed$ = new Subject();\n        this._elWithFocus = null; // element that is focused prior to offcanvas opening\n        this.keyboard = true;\n        this.position = 'start';\n        this.dismissEvent = new EventEmitter();\n        this.shown = new Subject();\n        this.hidden = new Subject();\n    }\n    dismiss(reason) { this.dismissEvent.emit(reason); }\n    ngOnInit() {\n        this._elWithFocus = this._document.activeElement;\n        this._zone.onStable.asObservable().pipe(take(1)).subscribe(() => { this._show(); });\n    }\n    ngOnDestroy() { this._disableEventHandling(); }\n    hide() {\n        const { nativeElement } = this._elRef;\n        const context = { animation: this.animation, runningTransition: 'stop' };\n        // TODO when we target Bootstrap 5.2+, the style.visibility handling can be removed, because Bootstrap has improved\n        // its CSS\n        const offcanvasTransition$ = ngbRunTransition(this._zone, this._elRef.nativeElement, (element) => {\n            nativeElement.classList.remove('show');\n            return () => element.style.visibility = 'hidden';\n        }, context);\n        offcanvasTransition$.subscribe(() => {\n            this.hidden.next();\n            this.hidden.complete();\n        });\n        this._disableEventHandling();\n        this._restoreFocus();\n        return offcanvasTransition$;\n    }\n    _show() {\n        const context = { animation: this.animation, runningTransition: 'continue' };\n        // TODO when we target Bootstrap 5.2+, the style.visibility handling can be removed, because Bootstrap has improved\n        // its CSS\n        const offcanvasTransition$ = ngbRunTransition(this._zone, this._elRef.nativeElement, (element, animation) => {\n            if (animation) {\n                reflow(element);\n            }\n            element.classList.add('show');\n            element.style.visibility = 'visible';\n        }, context);\n        offcanvasTransition$.subscribe(() => {\n            this.shown.next();\n            this.shown.complete();\n        });\n        this._enableEventHandling();\n        this._setFocus();\n    }\n    _enableEventHandling() {\n        const { nativeElement } = this._elRef;\n        this._zone.runOutsideAngular(() => {\n            fromEvent(nativeElement, 'keydown')\n                .pipe(takeUntil(this._closed$), \n            /* eslint-disable-next-line deprecation/deprecation */\n            filter(e => e.which === Key.Escape))\n                .subscribe(event => {\n                if (this.keyboard) {\n                    requestAnimationFrame(() => {\n                        if (!event.defaultPrevented) {\n                            this._zone.run(() => this.dismiss(OffcanvasDismissReasons.ESC));\n                        }\n                    });\n                }\n            });\n        });\n    }\n    _disableEventHandling() { this._closed$.next(); }\n    _setFocus() {\n        const { nativeElement } = this._elRef;\n        if (!nativeElement.contains(document.activeElement)) {\n            const autoFocusable = nativeElement.querySelector(`[ngbAutofocus]`);\n            const firstFocusable = getFocusableBoundaryElements(nativeElement)[0];\n            const elementToFocus = autoFocusable || firstFocusable || nativeElement;\n            elementToFocus.focus();\n        }\n    }\n    _restoreFocus() {\n        const body = this._document.body;\n        const elWithFocus = this._elWithFocus;\n        let elementToFocus;\n        if (elWithFocus && elWithFocus['focus'] && body.contains(elWithFocus)) {\n            elementToFocus = elWithFocus;\n        }\n        else {\n            elementToFocus = body;\n        }\n        this._zone.runOutsideAngular(() => {\n            setTimeout(() => elementToFocus.focus());\n            this._elWithFocus = null;\n        });\n    }\n}\nNgbOffcanvasPanel.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbOffcanvasPanel, deps: [{ token: DOCUMENT }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\nNgbOffcanvasPanel.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: NgbOffcanvasPanel, selector: \"ngb-offcanvas-panel\", inputs: { animation: \"animation\", ariaLabelledBy: \"ariaLabelledBy\", ariaDescribedBy: \"ariaDescribedBy\", keyboard: \"keyboard\", panelClass: \"panelClass\", position: \"position\" }, outputs: { dismissEvent: \"dismiss\" }, host: { attributes: { \"role\": \"dialog\", \"tabindex\": \"-1\" }, properties: { \"class\": \"\\\"offcanvas offcanvas-\\\" + position  + (panelClass ? \\\" \\\" + panelClass : \\\"\\\")\", \"attr.aria-modal\": \"true\", \"attr.aria-labelledby\": \"ariaLabelledBy\", \"attr.aria-describedby\": \"ariaDescribedBy\" } }, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbOffcanvasPanel, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngb-offcanvas-panel', template: '<ng-content></ng-content>', encapsulation: ViewEncapsulation.None, host: {\n                        '[class]': '\"offcanvas offcanvas-\" + position  + (panelClass ? \" \" + panelClass : \"\")',\n                        'role': 'dialog',\n                        'tabindex': '-1',\n                        '[attr.aria-modal]': 'true',\n                        '[attr.aria-labelledby]': 'ariaLabelledBy',\n                        '[attr.aria-describedby]': 'ariaDescribedBy',\n                    }, styles: [] }]\n        }], ctorParameters: function () {\n        return [{ type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }, { type: i0.ElementRef }, { type: i0.NgZone }];\n    }, propDecorators: { animation: [{\n                type: Input\n            }], ariaLabelledBy: [{\n                type: Input\n            }], ariaDescribedBy: [{\n                type: Input\n            }], keyboard: [{\n                type: Input\n            }], panelClass: [{\n                type: Input\n            }], position: [{\n                type: Input\n            }], dismissEvent: [{\n                type: Output,\n                args: ['dismiss']\n            }] } });\n\n/**\n * A reference to the currently opened (active) offcanvas.\n *\n * Instances of this class can be injected into your component passed as offcanvas content.\n * So you can `.close()` or `.dismiss()` the offcanvas window from your component.\n *\n * @since 12.1.0\n */\nclass NgbActiveOffcanvas {\n    /**\n     * Closes the offcanvas with an optional `result` value.\n     *\n     * The `NgbOffcanvasRef.result` promise will be resolved with the provided value.\n     */\n    close(result) { }\n    /**\n     * Dismisses the offcanvas with an optional `reason` value.\n     *\n     * The `NgbOffcanvasRef.result` promise will be rejected with the provided value.\n     */\n    dismiss(reason) { }\n}\n/**\n * A reference to the newly opened offcanvas returned by the `NgbOffcanvas.open()` method.\n *\n * @since 12.1.0\n */\nclass NgbOffcanvasRef {\n    constructor(_panelCmptRef, _contentRef, _backdropCmptRef, _beforeDismiss) {\n        this._panelCmptRef = _panelCmptRef;\n        this._contentRef = _contentRef;\n        this._backdropCmptRef = _backdropCmptRef;\n        this._beforeDismiss = _beforeDismiss;\n        this._closed = new Subject();\n        this._dismissed = new Subject();\n        this._hidden = new Subject();\n        _panelCmptRef.instance.dismissEvent.subscribe((reason) => { this.dismiss(reason); });\n        if (_backdropCmptRef) {\n            _backdropCmptRef.instance.dismissEvent.subscribe((reason) => { this.dismiss(reason); });\n        }\n        this.result = new Promise((resolve, reject) => {\n            this._resolve = resolve;\n            this._reject = reject;\n        });\n        this.result.then(null, () => { });\n    }\n    /**\n     * The instance of a component used for the offcanvas content.\n     *\n     * When a `TemplateRef` is used as the content or when the offcanvas is closed, will return `undefined`.\n     */\n    get componentInstance() {\n        if (this._contentRef && this._contentRef.componentRef) {\n            return this._contentRef.componentRef.instance;\n        }\n    }\n    /**\n     * The observable that emits when the offcanvas is closed via the `.close()` method.\n     *\n     * It will emit the result passed to the `.close()` method.\n     */\n    get closed() { return this._closed.asObservable().pipe(takeUntil(this._hidden)); }\n    /**\n     * The observable that emits when the offcanvas is dismissed via the `.dismiss()` method.\n     *\n     * It will emit the reason passed to the `.dismissed()` method by the user, or one of the internal\n     * reasons like backdrop click or ESC key press.\n     */\n    get dismissed() { return this._dismissed.asObservable().pipe(takeUntil(this._hidden)); }\n    /**\n     * The observable that emits when both offcanvas window and backdrop are closed and animations were finished.\n     * At this point offcanvas and backdrop elements will be removed from the DOM tree.\n     *\n     * This observable will be completed after emitting.\n     */\n    get hidden() { return this._hidden.asObservable(); }\n    /**\n     * The observable that emits when offcanvas is fully visible and animation was finished.\n     * The offcanvas DOM element is always available synchronously after calling 'offcanvas.open()' service.\n     *\n     * This observable will be completed after emitting.\n     * It will not emit, if offcanvas is closed before open animation is finished.\n     */\n    get shown() { return this._panelCmptRef.instance.shown.asObservable(); }\n    /**\n     * Closes the offcanvas with an optional `result` value.\n     *\n     * The `NgbMobalRef.result` promise will be resolved with the provided value.\n     */\n    close(result) {\n        if (this._panelCmptRef) {\n            this._closed.next(result);\n            this._resolve(result);\n            this._removeOffcanvasElements();\n        }\n    }\n    _dismiss(reason) {\n        this._dismissed.next(reason);\n        this._reject(reason);\n        this._removeOffcanvasElements();\n    }\n    /**\n     * Dismisses the offcanvas with an optional `reason` value.\n     *\n     * The `NgbOffcanvasRef.result` promise will be rejected with the provided value.\n     */\n    dismiss(reason) {\n        if (this._panelCmptRef) {\n            if (!this._beforeDismiss) {\n                this._dismiss(reason);\n            }\n            else {\n                const dismiss = this._beforeDismiss();\n                if (isPromise(dismiss)) {\n                    dismiss.then(result => {\n                        if (result !== false) {\n                            this._dismiss(reason);\n                        }\n                    }, () => { });\n                }\n                else if (dismiss !== false) {\n                    this._dismiss(reason);\n                }\n            }\n        }\n    }\n    _removeOffcanvasElements() {\n        const panelTransition$ = this._panelCmptRef.instance.hide();\n        const backdropTransition$ = this._backdropCmptRef ? this._backdropCmptRef.instance.hide() : of(undefined);\n        // hiding panel\n        panelTransition$.subscribe(() => {\n            const { nativeElement } = this._panelCmptRef.location;\n            nativeElement.parentNode.removeChild(nativeElement);\n            this._panelCmptRef.destroy();\n            if (this._contentRef && this._contentRef.viewRef) {\n                this._contentRef.viewRef.destroy();\n            }\n            this._panelCmptRef = null;\n            this._contentRef = null;\n        });\n        // hiding backdrop\n        backdropTransition$.subscribe(() => {\n            if (this._backdropCmptRef) {\n                const { nativeElement } = this._backdropCmptRef.location;\n                nativeElement.parentNode.removeChild(nativeElement);\n                this._backdropCmptRef.destroy();\n                this._backdropCmptRef = null;\n            }\n        });\n        // all done\n        zip(panelTransition$, backdropTransition$).subscribe(() => {\n            this._hidden.next();\n            this._hidden.complete();\n        });\n    }\n}\n\nclass NgbOffcanvasStack {\n    constructor(_applicationRef, _injector, _document, _scrollBar, _ngZone) {\n        this._applicationRef = _applicationRef;\n        this._injector = _injector;\n        this._document = _document;\n        this._scrollBar = _scrollBar;\n        this._ngZone = _ngZone;\n        this._activePanelCmptHasChanged = new Subject();\n        this._scrollBarRestoreFn = null;\n        this._backdropAttributes = ['animation', 'backdropClass'];\n        this._panelAttributes = ['animation', 'ariaDescribedBy', 'ariaLabelledBy', 'keyboard', 'panelClass', 'position'];\n        this._activeInstance = new EventEmitter();\n        // Trap focus on active PanelCmpt\n        this._activePanelCmptHasChanged.subscribe(() => {\n            if (this._panelCmpt) {\n                ngbFocusTrap(this._ngZone, this._panelCmpt.location.nativeElement, this._activePanelCmptHasChanged);\n            }\n        });\n    }\n    _restoreScrollBar() {\n        const scrollBarRestoreFn = this._scrollBarRestoreFn;\n        if (scrollBarRestoreFn) {\n            this._scrollBarRestoreFn = null;\n            scrollBarRestoreFn();\n        }\n    }\n    _hideScrollBar() {\n        if (!this._scrollBarRestoreFn) {\n            this._scrollBarRestoreFn = this._scrollBar.hide();\n        }\n    }\n    open(moduleCFR, contentInjector, content, options) {\n        const containerEl = options.container instanceof HTMLElement ? options.container : isDefined(options.container) ?\n            this._document.querySelector(options.container) :\n            this._document.body;\n        if (!containerEl) {\n            throw new Error(`The specified offcanvas container \"${options.container || 'body'}\" was not found in the DOM.`);\n        }\n        if (!options.scroll) {\n            this._hideScrollBar();\n        }\n        const activeOffcanvas = new NgbActiveOffcanvas();\n        const contentRef = this._getContentRef(moduleCFR, options.injector || contentInjector, content, activeOffcanvas);\n        let backdropCmptRef = options.backdrop !== false ? this._attachBackdrop(moduleCFR, containerEl) : undefined;\n        let panelCmptRef = this._attachWindowComponent(moduleCFR, containerEl, contentRef);\n        let ngbOffcanvasRef = new NgbOffcanvasRef(panelCmptRef, contentRef, backdropCmptRef, options.beforeDismiss);\n        this._registerOffcanvasRef(ngbOffcanvasRef);\n        this._registerPanelCmpt(panelCmptRef);\n        ngbOffcanvasRef.hidden.pipe(finalize(() => this._restoreScrollBar())).subscribe();\n        activeOffcanvas.close = (result) => { ngbOffcanvasRef.close(result); };\n        activeOffcanvas.dismiss = (reason) => { ngbOffcanvasRef.dismiss(reason); };\n        this._applyPanelOptions(panelCmptRef.instance, options);\n        if (backdropCmptRef && backdropCmptRef.instance) {\n            this._applyBackdropOptions(backdropCmptRef.instance, options);\n            backdropCmptRef.changeDetectorRef.detectChanges();\n        }\n        panelCmptRef.changeDetectorRef.detectChanges();\n        return ngbOffcanvasRef;\n    }\n    get activeInstance() { return this._activeInstance; }\n    dismiss(reason) { var _a; (_a = this._offcanvasRef) === null || _a === void 0 ? void 0 : _a.dismiss(reason); }\n    hasOpenOffcanvas() { return !!this._offcanvasRef; }\n    _attachBackdrop(moduleCFR, containerEl) {\n        let backdropFactory = moduleCFR.resolveComponentFactory(NgbOffcanvasBackdrop);\n        let backdropCmptRef = backdropFactory.create(this._injector);\n        this._applicationRef.attachView(backdropCmptRef.hostView);\n        containerEl.appendChild(backdropCmptRef.location.nativeElement);\n        return backdropCmptRef;\n    }\n    _attachWindowComponent(moduleCFR, containerEl, contentRef) {\n        let panelFactory = moduleCFR.resolveComponentFactory(NgbOffcanvasPanel);\n        let panelCmptRef = panelFactory.create(this._injector, contentRef.nodes);\n        this._applicationRef.attachView(panelCmptRef.hostView);\n        containerEl.appendChild(panelCmptRef.location.nativeElement);\n        return panelCmptRef;\n    }\n    _applyPanelOptions(windowInstance, options) {\n        this._panelAttributes.forEach((optionName) => {\n            if (isDefined(options[optionName])) {\n                windowInstance[optionName] = options[optionName];\n            }\n        });\n    }\n    _applyBackdropOptions(backdropInstance, options) {\n        this._backdropAttributes.forEach((optionName) => {\n            if (isDefined(options[optionName])) {\n                backdropInstance[optionName] = options[optionName];\n            }\n        });\n    }\n    _getContentRef(moduleCFR, contentInjector, content, activeOffcanvas) {\n        if (!content) {\n            return new ContentRef([]);\n        }\n        else if (content instanceof TemplateRef) {\n            return this._createFromTemplateRef(content, activeOffcanvas);\n        }\n        else if (isString(content)) {\n            return this._createFromString(content);\n        }\n        else {\n            return this._createFromComponent(moduleCFR, contentInjector, content, activeOffcanvas);\n        }\n    }\n    _createFromTemplateRef(content, activeOffcanvas) {\n        const context = {\n            $implicit: activeOffcanvas,\n            close(result) { activeOffcanvas.close(result); },\n            dismiss(reason) { activeOffcanvas.dismiss(reason); }\n        };\n        const viewRef = content.createEmbeddedView(context);\n        this._applicationRef.attachView(viewRef);\n        return new ContentRef([viewRef.rootNodes], viewRef);\n    }\n    _createFromString(content) {\n        const component = this._document.createTextNode(`${content}`);\n        return new ContentRef([[component]]);\n    }\n    _createFromComponent(moduleCFR, contentInjector, content, context) {\n        const contentCmptFactory = moduleCFR.resolveComponentFactory(content);\n        const offcanvasContentInjector = Injector.create({ providers: [{ provide: NgbActiveOffcanvas, useValue: context }], parent: contentInjector });\n        const componentRef = contentCmptFactory.create(offcanvasContentInjector);\n        const componentNativeEl = componentRef.location.nativeElement;\n        this._applicationRef.attachView(componentRef.hostView);\n        return new ContentRef([[componentNativeEl]], componentRef.hostView, componentRef);\n    }\n    _registerOffcanvasRef(ngbOffcanvasRef) {\n        const unregisterOffcanvasRef = () => {\n            this._offcanvasRef = undefined;\n            this._activeInstance.emit(this._offcanvasRef);\n        };\n        this._offcanvasRef = ngbOffcanvasRef;\n        this._activeInstance.emit(this._offcanvasRef);\n        ngbOffcanvasRef.result.then(unregisterOffcanvasRef, unregisterOffcanvasRef);\n    }\n    _registerPanelCmpt(ngbPanelCmpt) {\n        this._panelCmpt = ngbPanelCmpt;\n        this._activePanelCmptHasChanged.next();\n        ngbPanelCmpt.onDestroy(() => {\n            this._panelCmpt = undefined;\n            this._activePanelCmptHasChanged.next();\n        });\n    }\n}\nNgbOffcanvasStack.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbOffcanvasStack, deps: [{ token: i0.ApplicationRef }, { token: i0.Injector }, { token: DOCUMENT }, { token: ScrollBar }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Injectable });\nNgbOffcanvasStack.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbOffcanvasStack, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbOffcanvasStack, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ApplicationRef }, { type: i0.Injector }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }, { type: ScrollBar }, { type: i0.NgZone }];\n    } });\n\n/**\n * A configuration service for the [`NgbOffcanvas`](#/components/offcanvas/api#NgbOffcanvas) service.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all offcanvases used in the application.\n *\n * @since 12.1.0\n */\nclass NgbOffcanvasConfig {\n    constructor(_ngbConfig) {\n        this._ngbConfig = _ngbConfig;\n        this.backdrop = true;\n        this.keyboard = true;\n        this.position = 'start';\n        this.scroll = false;\n    }\n    get animation() { return (this._animation === undefined) ? this._ngbConfig.animation : this._animation; }\n    set animation(animation) { this._animation = animation; }\n}\nNgbOffcanvasConfig.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbOffcanvasConfig, deps: [{ token: NgbConfig }], target: i0.ɵɵFactoryTarget.Injectable });\nNgbOffcanvasConfig.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbOffcanvasConfig, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbOffcanvasConfig, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: NgbConfig }]; } });\n\n/**\n * A service for opening an offcanvas.\n *\n * Creating an offcanvas is straightforward: create a component or a template and pass it as an argument to\n * the `.open()` method.\n *\n * @since 12.1.0\n */\nclass NgbOffcanvas {\n    constructor(_moduleCFR, _injector, _offcanvasStack, _config) {\n        this._moduleCFR = _moduleCFR;\n        this._injector = _injector;\n        this._offcanvasStack = _offcanvasStack;\n        this._config = _config;\n    }\n    /**\n     * Opens a new offcanvas panel with the specified content and supplied options.\n     *\n     * Content can be provided as a `TemplateRef` or a component type. If you pass a component type as content,\n     * then instances of those components can be injected with an instance of the `NgbActiveOffcanvas` class. You can then\n     * use `NgbActiveOffcanvas` methods to close / dismiss offcanvas from \"inside\" of your component.\n     *\n     * Also see the [`NgbOffcanvasOptions`](#/components/offcanvas/api#NgbOffcanvasOptions) for the list of supported\n     * options.\n     */\n    open(content, options = {}) {\n        const combinedOptions = Object.assign(Object.assign(Object.assign({}, this._config), { animation: this._config.animation }), options);\n        return this._offcanvasStack.open(this._moduleCFR, this._injector, content, combinedOptions);\n    }\n    /**\n     * Returns an observable that holds the active offcanvas instance.\n     */\n    get activeInstance() { return this._offcanvasStack.activeInstance; }\n    /**\n     * Dismisses the currently displayed offcanvas with the supplied reason.\n     */\n    dismiss(reason) { this._offcanvasStack.dismiss(reason); }\n    /**\n     * Indicates if there is currently an open offcanvas in the application.\n     */\n    hasOpenOffcanvas() { return this._offcanvasStack.hasOpenOffcanvas(); }\n}\nNgbOffcanvas.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbOffcanvas, deps: [{ token: i0.ComponentFactoryResolver }, { token: i0.Injector }, { token: NgbOffcanvasStack }, { token: NgbOffcanvasConfig }], target: i0.ɵɵFactoryTarget.Injectable });\nNgbOffcanvas.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbOffcanvas, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbOffcanvas, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: i0.ComponentFactoryResolver }, { type: i0.Injector }, { type: NgbOffcanvasStack }, { type: NgbOffcanvasConfig }]; } });\n\nclass NgbOffcanvasModule {\n}\nNgbOffcanvasModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbOffcanvasModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nNgbOffcanvasModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbOffcanvasModule, declarations: [NgbOffcanvasPanel, NgbOffcanvasBackdrop] });\nNgbOffcanvasModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbOffcanvasModule });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbOffcanvasModule, decorators: [{\n            type: NgModule,\n            args: [{ declarations: [NgbOffcanvasPanel, NgbOffcanvasBackdrop] }]\n        }] });\n\nconst NGB_MODULES = [\n    /* eslint-disable-next-line deprecation/deprecation */\n    NgbAccordionModule, NgbAlertModule, NgbButtonsModule, NgbCarouselModule, NgbCollapseModule, NgbDatepickerModule,\n    NgbDropdownModule, NgbModalModule, NgbNavModule, NgbOffcanvasModule, NgbPaginationModule, NgbPopoverModule,\n    NgbProgressbarModule, NgbRatingModule, NgbTimepickerModule, NgbToastModule, NgbTooltipModule, NgbTypeaheadModule\n];\nclass NgbModule {\n}\nNgbModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nNgbModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbModule, imports: [\n        /* eslint-disable-next-line deprecation/deprecation */\n        NgbAccordionModule, NgbAlertModule, NgbButtonsModule, NgbCarouselModule, NgbCollapseModule, NgbDatepickerModule,\n        NgbDropdownModule, NgbModalModule, NgbNavModule, NgbOffcanvasModule, NgbPaginationModule, NgbPopoverModule,\n        NgbProgressbarModule, NgbRatingModule, NgbTimepickerModule, NgbToastModule, NgbTooltipModule, NgbTypeaheadModule\n    ], exports: [\n        /* eslint-disable-next-line deprecation/deprecation */\n        NgbAccordionModule, NgbAlertModule, NgbButtonsModule, NgbCarouselModule, NgbCollapseModule, NgbDatepickerModule,\n        NgbDropdownModule, NgbModalModule, NgbNavModule, NgbOffcanvasModule, NgbPaginationModule, NgbPopoverModule,\n        NgbProgressbarModule, NgbRatingModule, NgbTimepickerModule, NgbToastModule, NgbTooltipModule, NgbTypeaheadModule\n    ] });\nNgbModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbModule, imports: [NGB_MODULES,\n        /* eslint-disable-next-line deprecation/deprecation */\n        NgbAccordionModule, NgbAlertModule, NgbButtonsModule, NgbCarouselModule, NgbCollapseModule, NgbDatepickerModule,\n        NgbDropdownModule, NgbModalModule, NgbNavModule, NgbOffcanvasModule, NgbPaginationModule, NgbPopoverModule,\n        NgbProgressbarModule, NgbRatingModule, NgbTimepickerModule, NgbToastModule, NgbTooltipModule, NgbTypeaheadModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgbModule, decorators: [{\n            type: NgModule,\n            args: [{ imports: NGB_MODULES, exports: NGB_MODULES }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ModalDismissReasons, NgbAccordion, NgbAccordionConfig, NgbAccordionModule, NgbActiveModal, NgbActiveOffcanvas, NgbAlert, NgbAlertConfig, NgbAlertModule, NgbButtonLabel, NgbButtonsModule, NgbCalendar, NgbCalendarBuddhist, NgbCalendarGregorian, NgbCalendarHebrew, NgbCalendarIslamicCivil, NgbCalendarIslamicUmalqura, NgbCalendarPersian, NgbCarousel, NgbCarouselConfig, NgbCarouselModule, NgbCheckBox, NgbCollapse, NgbCollapseConfig, NgbCollapseModule, NgbConfig, NgbDate, NgbDateAdapter, NgbDateNativeAdapter, NgbDateNativeUTCAdapter, NgbDateParserFormatter, NgbDatepicker, NgbDatepickerConfig, NgbDatepickerContent, NgbDatepickerI18n, NgbDatepickerI18nDefault, NgbDatepickerI18nHebrew, NgbDatepickerKeyboardService, NgbDatepickerModule, NgbDatepickerMonth, NgbDropdown, NgbDropdownAnchor, NgbDropdownConfig, NgbDropdownItem, NgbDropdownMenu, NgbDropdownModule, NgbDropdownToggle, NgbHighlight, NgbInputDatepicker, NgbInputDatepickerConfig, NgbModal, NgbModalConfig, NgbModalModule, NgbModalRef, NgbModule, NgbNav, NgbNavConfig, NgbNavContent, NgbNavItem, NgbNavLink, NgbNavModule, NgbNavOutlet, NgbNavPane, NgbNavbar, NgbOffcanvas, NgbOffcanvasConfig, NgbOffcanvasModule, NgbOffcanvasRef, NgbPagination, NgbPaginationConfig, NgbPaginationEllipsis, NgbPaginationFirst, NgbPaginationLast, NgbPaginationModule, NgbPaginationNext, NgbPaginationNumber, NgbPaginationPages, NgbPaginationPrevious, NgbPanel, NgbPanelContent, NgbPanelHeader, NgbPanelTitle, NgbPanelToggle, NgbPopover, NgbPopoverConfig, NgbPopoverModule, NgbProgressbar, NgbProgressbarConfig, NgbProgressbarModule, NgbRadio, NgbRadioGroup, NgbRating, NgbRatingConfig, NgbRatingModule, NgbSlide, NgbSlideEventDirection, NgbSlideEventSource, NgbTimeAdapter, NgbTimepicker, NgbTimepickerConfig, NgbTimepickerI18n, NgbTimepickerModule, NgbToast, NgbToastConfig, NgbToastHeader, NgbToastModule, NgbTooltip, NgbTooltipConfig, NgbTooltipModule, NgbTypeahead, NgbTypeaheadConfig, NgbTypeaheadModule, OffcanvasDismissReasons };\n"]},"metadata":{},"sourceType":"module"}